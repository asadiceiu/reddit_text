,topic,subreddit,title,score,id,url,created,body
0,vulnerability,netsec,Vulnerability Report Generator &amp; Repository,7,gziros,https://www.reddit.com/r/netsec/comments/gziros/vulnerability_report_generator_repository/,2020-06-09 18:06:30,"VULNRPO is a free open source project designed to speed up the creation of IT Security vulnerability reports. Complete templates of issues, AES encryption, Nessus/Burp/OpenVAS issues import, Jira export, TXT/HTML/PDF report, attachments, automatic changelog and statistics, vulnerability assessment, vulnerability management, secure issues sharing. The project is still in BETA version, ideas and suggestions are highly appreciated. &amp;#x200B; Online: [URL Download: [URL &amp;#x200B; Cheers!"
1,vulnerability,netsec,WebExec - an authenticated RCE vulnerability in Cisco WebEx client,1,9r16e4,https://www.reddit.com/r/netsec/comments/9r16e4/webexec_an_authenticated_rce_vulnerability_in/,2018-10-25 03:26:00,"Hey all, During a pentest a couple months back, me and my coworker (/u/jeffmcjunkin) stumbled upon an 0-day in Cisco WebEx. It's neat because it's a remote code execution vulnerability in a client-side app due to bad ACLs. We wrote a [high level doc](URL about it, and also a [deep dive into why it works](URL I thought you guys would be interested! Please patch!"
2,vulnerability,netsec,ROCA vulnerability - the full paper available online,1,79oi64,https://www.reddit.com/r/netsec/comments/79oi64/roca_vulnerability_the_full_paper_available_online/,2017-10-31 02:38:57,"ACM has just published the full paper in its Digital Library at [URL Some interesting charts of the CPU cycles needed for particular key lengths - mostly academical, with the notable exception of 3k keys. The cost of the attack of 2k RSA keys seems to be derived from Amazon EC2 x2 instance (2 cores) - my feeling is that the cost is fairly conservative. GPU-optimized versions are bound to make 2k key cracking quite affordable. "
3,vulnerability,netsec,"We are Bugcrowd - Ask Us Anything! Casey Ellis, Kymberlee Price, Jason Haddix - AMA July 28th, 8am PDT",51,4uuyo9,https://www.reddit.com/r/netsec/comments/4uuyo9/we_are_bugcrowd_ask_us_anything_casey_ellis/,2016-07-28 00:46:10,"Hi /r/Netsec! Weve brought together a few of the leaders from the Bugcrowd team to do an AMA. Were looking forward to your questions about all things crowdsourced security! For the AMA we have: * /u/yesnet0 / [@CaseyJohnEllis](URL - Co-founder and CEO of Bugcrowd. Casey founded Bugcrowd in 2012 in Australia, eventually moving the company to San Francisco, CA in 2014. Through Bugcrowd, Casey has created and helped popularize the bug bounty concept, and brings it to a wide array of companies and industries. * /u/Kymberlee_Price / [@Kym_Possible](URL - Senior Director of Researcher Operations at Bugcrowd. Kymberlee has years of experience in security, working at BlackBerry in Incident Response and Microsoft as a Security Program Manager. Make sure to [catch her talk next week at Black Hat](URL on August 3rd. * /u/Jhaddix / [@JHaddix](URL - Director of Technical Operations at Bugcrowd. Jason leads the Application Security Engineer team that analyzes &amp; triages vulnerability submissions for Bugcrowds customers. Jason has contributed to several InfoSec projects ([SecLists](URL led the OWASP Mobile Security Project, and has extensive experience as a Bug Bounty hunter, previously [reaching #1 on the Bugcrowd platform](URL Jason will also [talk at Black Hat](URL next week, and btw his **[team is hiring](URL * /u/QforQ / [@SamHouston](URL - Senior Community Manager at Bugcrowd. Sams been working with the bug bounty hunter community for the last couple of years, with prior community experience at Electronic Arts, Couchsurfing and others. **We plan to answer questions from 8am - 9:30am PDT July 28th, but will answer more questions throughout the day as we get the chance.** Over the past year weve released several studies and resources for the InfoSec community in an effort to bring some more transparency to the industry and share what weve learned. In early 2016 we posted the [Defensive Vulnerability Pricing model](URL which answers Whats a bug worth? in bug bounties, and in February we released the [Vulnerability Rating Taxonomy](URL which provides a baseline priority rating for vulnerabilities. Lastly, we just recently published the [2nd annual State of Bug Bounty Report](URL which dives into what kinds of bugs to expect in a bug bounty, and who participates in bounties. This summer weve announced our work with several new customers including [Fiat Chrysler](URL [Magento](URL and OWASP ([ZAP](URL [CSRFGuard](URL &amp; [Java Sanitizer](URL Weve also announced that network security expert HD Moore has joined Bugcrowd as a strategic advisor. Hear [HD on Risky.Biz](URL talking about why hes turned to thinking there is room for both the penetration testing and bug bounty industries. We also would like to invite everyone to join us next week at DEFCON in our [Day Lounge](URL and stop by our table in the Car Hacking Village. So without further ado, AMA! "
4,vulnerability,netsec,CfP DeepIntel 2016 in Austria is Open,3,4fj90q,https://www.reddit.com/r/netsec/comments/4fj90q/cfp_deepintel_2016_in_austria_is_open/,2016-04-20 05:18:52,"=== DeepINTEL 2016 Call for Papers (CfP) = DeepINTEL 2016, June 27/28 in Schladming Austria. We are calling for presentations on security intelligence. We regard security intelligence as any information exceeding classic techniques which enables to choose better strategies and thus to defend information infrastructure more efficiently. At DeepINTEL we discuss security intelligence and related topics within a closed group. DeepINTEL is not an event open to the public. The conference will be open to a limited audience only. All participants, including speakers and delegates, are vetted. Our trust anchor is basically URL all listed members and organizations are whitelisted. We will accept individuals vetted for. Speakers will receive the list of participants prior to the conference. We expect talks with the Traffic Light Protocol level Green or Orange clearance. This is why we have choosen a closed format for DeepINTEL. A few examples for topics (not limited to) are: - Attribution of adversaries - Malware analysis for better assessment of the intention of adversaries - Capabilities of adversaries - Connections between adversary groups (e.g. for assessing capabilities or intentions) - Detection of threats not efficiently covered by classic solutions - Projects, systems, or methods to automatically exchange and/or distribute security intelligence information to a limited audience - Forensic techniques or results, revealing additional background of an incident - Building honeypots to gain security intelligence, e.g. through ""tainted data"" and tracking access. - Insight into the black market What we are _not_ looking for (there are other, more suitable events): - Surveillance technology (new or otherwise) - Any classic approach like off-the-shelf SIEM, vulnerability scanning or firewall solutions, regardless how ""next-generation"" they are if they don't employ significantly security intelligence like mentioned above - Cyber, cyber, cyber We strongly encourage you to submit papers encrypted to: deepsec@deepsec.net PGP/GPG key id: 0xE1170EDE22860969 Fingerprint : 092C FA29 DDD9 4517 299F 9F38 E117 0EDE 2286 0969 Hope to hear from you soon! Best regards, Ren ""Lynx"" Pfeiffer and Michael ""MiKa"" Kafka. See also: URL"
5,vulnerability,netsec,Ubiquiti EdgeOS v1.6 Vulnerabilities,1,3dfq57,http://www.reddit.com/r/netsec/comments/3dfq57/ubiquiti_edgeos_v16_vulnerabilities/,2015-07-16 08:29:51,Remote code execution in Ubiquiti EdgeOS v1.6. This vulnerability was reported to Ubiquiti back in December. They only recently decided to release version 1.7. This was pretty much ignored by Ubiquiti for over 6 months. Further information below: URL
6,vulnerability,netsec,URL,1,3dic0m,http://www.reddit.com/r/netsec/comments/3dic0m/httpsgithubcomstasinopouloscommix/,2015-07-17 00:38:19,"Commix (short for [comm]and [i]njection e[x]ploiter) has a simple environment and it can be used, from web developers, penetration testers or even security researchers to test web applications with the view to find bugs, errors or vulnerabilities related to command injection attacks. By using this tool, it is very easy to find and exploit a command injection vulnerability in a certain vulnerable parameter or string. Commix is written in Python programming language."
7,vulnerability,netsec,Command injection and exploitation tool (commix),1,351jwn,http://www.reddit.com/r/netsec/comments/351jwn/command_injection_and_exploitation_tool_commix/,2015-05-06 19:59:03,"Commix is a great command injection tool which successfully exploits many vulnerable applications such as DVWA, bWAPP, ShelLOL, Persistence, Kioptrix(2014), w3af-moth etc Has a simple environment and it can be used, from web developers, penetration testers or even security researchers to test web applications with the view to find bugs, errors or vulnerabilities related to command injection attacks. By using this tool, it is very easy to find and exploit a command injection vulnerability in a certain vulnerable parameter or string. Commix is written in Python programming language. Download Page: URL Demo Video: Exploiting bWAPP command injection flaws (normal &amp; blind) via commix. ( URL ) "
8,vulnerability,netsec,What I know about US Export Controls and Hacking Tools,139,36obxt,http://www.reddit.com/r/netsec/comments/36obxt/what_i_know_about_us_export_controls_and_hacking/,2015-05-21 07:10:15,"This post is a summary of everything I know about United States Export Controls and Hacking Tools. I wrote this a few weeks ago, before the United States Department of Commerce (US DOC) released their proposed rules to comply with the December 2013 changes to the Wassenar Arrangement on Export Controls. My goal with this post is to provide background and vocabulary to aid understanding and discussing the DOCs proposed changes to the law. **ITAR and EAR** Let's pretend you make or sell hacking tools. When I say hacking tools, I'm describing the function of the software, not its intended use. There are organizations that sell hacking tools to help others understand and better secure their networks. There are others who sell to anyone to aid other countries in their law enforcement and military tasks. The fact that software with the same function could cater to either use case is the reason these laws exist in the first place. Which body of law might apply to you? There are two you should be aware of. The first is ITAR, which is managed by the US Department of State. This is the International Traffic in Arms Regulations. This is the body of law that applies to no-kidding weapons. If you develop hacking tools, you may fall under ITAR if your tools are derived from something developed by or for the United States Military or Intelligence Community. If your work isn't a derivative from one of these sources, you're probably not ITAR. The other body of law is the EAR. The EAR is the Export Administration Regulations. It's managed by the United States DOC's Bureau of Industry and Security (BIS). The EAR regulates ""dual use"" goods. These are goods that have both civilian AND military/law enforcement use cases. Unless you work for a defense contractor or take funding from the US Department of Defense, your work will probably fall under the EAR. If you're unsure, it's possible to get a binding decision from the US government. The process to do this is a Commodity Jurisdiction Request. These are managed by the US Department of State. When you put in a CJ, the US Department of State will collaborate with the US DOC and the US Department of Homeland Security to make a decision about where your product falls. The pain in the ass of the CJ process is that you must treat your product as ITAR controlled until the decision is made. If you already have customers/users outside of the United States, this could make things awkward. **ECCNs and License Exceptions** Let's say your hacking tool falls under the EAR and you want to export it. Great! Before you can export it, you need to find out which part of the EAR applies to you. The US law buckets dual-use goods into categories, identified by ECCNs. An ECCN is an Export Control Classification Number. If a product is controlled, you can not export it unless you request permission from the United States government to do so. This permission is granted on a case-by-case basis. A lot of goods are ""controlled"" with very broad definitions. The United States likes tax revenue and it likes expertise within its borders. Policy has to balance controlling dangerous exports and hindering US businesses. Keeping with this line of thought, the EAR has several License Exceptions. These exceptions dictate which situations allow you to export your product without asking for permission from the US government. They also spell out your responsibilities to conduct due diligence on who requests your product and whether or not you have reporting requirements. Before you can find out if a license exception applies to you, you have to know your ECCN. This is something a lawyer can help with. To their credit, the US DOC BIS publishes a wealth of flow charts, FAQs, and other information to help as well. I found their site very helpful before I found a lawyer to advise me in this area. URL 5dXX2 is the ECCN the bucket where software that *uses* encryption falls. Note the keyword: uses. This is almost every piece of useful software out there today. ECCN 5d992 is mass market software that uses encryption. If your product fits this definition [browsers, operating systems, secure pull my finger applications, etc.] you don't have too many worries. I don't know the specifics here as it doesn't apply to me, but know that this exists, and if you're not in the hacking biz--this is what probably applies to you. Hacking tools are not mass market. The EAR makes an exception for goods that do Network Vulnerability and Penetration Testing. You can search the EAR for this phrase or ask your lawyer to do it for you. Either way, you're probably the 5d002 ECCN (right now, anyways... more on this later). **Open Source and Commercial Exports are Treated Differently!** Once you have an ECCN, you have to determine which exceptions allow you to export it. There are a lot of contextual factors to consider. For those of us 5d002 folks (we need a club or a meetup), here's the flow chart published by the United States DOC: URL If your software is open source, you will probably export it under License Exception TSU. This is the ""Technology and Software Unrestricted"" controls. If the TSU exception applies to you, you do have one requirement. The law requires you to email crypt@bis.doc.gov and enc@nsa.gov with the URL to your code and name of your project. URL My understanding is that the protections of this exception do not apply to you until you carry out this step. Is the US government chasing people down who fail to do this? I don't think so. The Information Technology Controls Division of the US DOC has less than 10 people listed on their website. The United States is a big country, there are a lot of products that fall under this law. They probably have other things to do than chase people who didn't send a TSU notification. URL I have open source and commercially available software. I often get people asking me why I'm such a hater because I let them have my free thing, but not the commercial one. This is why. Sadly, eyes glaze over when I try to explain this. **Registering with the US DOC** Commercial penetration testing software falls under License Exception ENC. What happens if you fall under License Exception ENC? It's been awhile, but here's what I remember: You'll need to register for an account in the US Dept of Commerce's SNAP-R system. This is the primary portal where you get to interface with this department and submit requests and things. This system wasn't too bad to work with. I hate all web portals and if I was able to navigate it without significant pain, that says a lot. You'll need to submit a commodity classification request. This request will require you to provide technical information about your product. The questions will ask you which encryption algorithms you use and which key lengths. The US DOC is very interested in whether or not you have an open cryptographic interface (e.g., a way for the end-user to use arbitrary key lengths with your product). As a developer, I had no problems answering these questions. I prepared and submitted my answers without the help of a lawyer (although later, I had an export lawyer review them). The US DOC has 30 days to give you an answer on your classification request. It's been awhile, but I believe you also submit a request for an Encryption Registration Number at this time too. You're not allowed to export your product until these requests are complete. Once the US DOC responds, you'll get a CCATS number and an Encryption Registration Number (ERN). I haven't had to use my ERN for anything since I've registered for it. I do make use of my CCATS number. **Complying with US Export Law (for some Security Goods)** If you export a 5d002 product under License Exception ENC, you have a few things to keep in mind: 1) There are restrictions on who you can export to. If your user is in the United States or Canada--this body of law doesn't apply to the transaction. Have a nice day. If your user is outside of the United States and Canada, you need to find out (a) which country they're from and (b) whether or not they're a government end user. You can't export your product to end users in Iran, Cuba, Syria, North Korea, or Sudan. The law has a list of favorable encryption export countries. These are countries where you can export to any end user, government or civilian. The list is composed of NATO countries and close US allies. URL Outside of the above list, you can export to non-government end users. Any government end users require a license from the United States government. Finally, the United States publishes a Consolidated Screening List. This is a massive text file with the names and addresses of organizations you can not export to. URL 2) You have reporting requirements. When you export a product under License Exception ENC, you have reporting requirements. Twice a year, you must turn in a spreadsheet, via email, to the US DOC and the NSA. The law lists these two email addresses. The spreadsheet is very simple. It's the CCATS number of the product, the product's name, the organization you exported to, their physical mailing address, and a quantity. That's it. 3) You have due diligence requirements. If you export under License Exception ENC, you're expected to control who has access to your product. You can't just put your product up on your site, allow anyone to download it, and claim ignorance. That said, someone who wants to defeat simple controls, such as IP Geolocation, will. You'll want to work with an export lawyer to determine which technical controls demonstrate that you made a good faith effort to comply with the law. When you do export outside of the US and Canada, you have to collect the information for your reporting requirements, and make some attempt to vet it. You're also expected to look out for ""red flags"". Again, the specifics of vetting and red flags are not in the law. It's ambiguous. This is what allows export lawyers to put their children through college in the United States. **The Wassenaar Arrangement** That was a lot of information about the export of software that uses encryption, particularly hacking tools. The story isn't over yet. In December 2013, the United States co-signed an update to the Wassenaar Arrangement on Export Controls. This update is an agreement amongst several Western Nations to regulate the export of goods deemed cyber weapons. URL URL You'll notice that this whole discussion has centered around software that uses encryption. Some hacking tools fall under this. Others don't. Many memory corruption exploits, for example, don't use encryption--so they don't fall under the encryption regulations. The 2013 Wasenaar Arrangement updates closes this loophole. This treaty makes an attempt to nail down a definition for exploits and software that intentionally evades detection technologies. To date, the United States has not released its guidance on how US businesses who deal in such goods are to comply with the law. Today, The US DOC announced its proposed rules to help the US comply with the Wassenaar Arrangement treaty from 2013. URL URL My reading of the proposed changes is that the US is trying to limit the export of weaponized exploits and the platforms for post-exploitation versus just limiting exploits themselves. [This is just a guess from an initial reading.] The proposed rules define a new ECCN for Trojans (Intrusion Software) and other technologies. Items classified under these new ECCNs (e.g., 4d004) have the deny-by-default export policy as any controlled product. My reading of the proposed rules is that there are no broad License Exceptions for these new ECCNs (like License Exception ENC). URL It seems each export will require a formal permission from the US DOC (in the form of a license request). The US DOC will vet these requests against the requirements of the Regional Stability (RS), Anti-terrorism (AT), and National Security (NS) controls. My understanding is that exports to some countries (e.g., UK, AUS, NZ) will have preferential treatment and the license request is mostly a formality. Other requests will be reviewed more thoroughly. URL From my initial reading of these proposed changes, I dont know how this does or does not affect open source. Will the US DOC allow License Exception TSU for open source projects? These are questions I plan to ask my export lawyer when he and I sit down next. Here are the questions the US DOC wants answers about when one submits an export application request: URL The US DOC has a list of questions theyd like public comment on. Heres the list: URL Instructions and points of contact to submit a comment are at: URL **Conclusion: Hire a Lawyer.** I have to ask that you forgive any omissions and errors present in these comments. At the very least, if this information applies to you, you have enough export law vocabulary to start your own research and to have a better initial dialog with an attorney. I'm not a lawyer. You will want to work with a lawyer through this process. Export law is a speciality. Finding an export lawyer who understands hacking tools is hard."
9,vulnerability,netsec,commix : Automated All-in-One OS Command Injection and Exploitation Tool.,1,31bbvg,http://www.reddit.com/r/netsec/comments/31bbvg/commix_automated_allinone_os_command_injection/,2015-04-04 01:55:30,"Commix [1] (short for [comm]and [i]njection e[x]ploiter) has a simple environment and it can be used, from web developers, penetration testers or even security researchers to test web applications with the view to find bugs, errors or vulnerabilities related to command injection attacks. By using this tool, it is very easy to find and exploit a command injection vulnerability in a certain vulnerable parameter or string. Commix is written in Python programming language. [1] URL"
10,vulnerability,netsec,"Security Engineer Opening - Risk Assessment/Penetration Testing - Tampa, FL",1,31v9mg,http://www.reddit.com/r/netsec/comments/31v9mg/security_engineer_opening_risk/,2015-04-08 22:56:29,"We have an opening for someone to lead our Risk Assessment team, and work with our Labs division assisting with security research, malware analysis, threat intelligence, and developing proprietary security solutions. We need someone that has performed vulnerability scans in the past, and ideally we are looking for OSCP, OSCE, OR GPEN however these are not required. Another area we would like experience is with compliance drivers (PCI, HIPAA, SOX). We also offer to ability to cross train into other areas of security including forensics, SIEM, application security, etc. he company does provide education assistance to go for security certs, there is no cap of how much you can train on. Below is a link to our company along with a summary. We are looking for this person to be located at our headquarters in Tampa, but we are open to telecommute if you are open to 50-70% travel. Anyone interested can e-mail our Manager of Professional Services with a resume, if there is an interest you should get a response back within the day. His e-mail is snoonan@reliaquest.com Company Overview: URL ReliaQuest, LLC a pioneer in IT security solutions, ensures organizations remain secure and compliant as the IT world changes; empowering IT professionals with the latest relevant security technology innovations and services that simplify often complex interactions between security, risk and compliance in order to minimize loss of data, business disruptions and reputation. The ReliaQuest team has a unique ability to deliver optimal solutions combined with our talented staff and documented best practices that unify people, process and technology in both on premise as well as managed service requirements."
11,vulnerability,netsec,DSS-CI-CTA-0014-15,1,33d0gl,http://www.reddit.com/r/netsec/comments/33d0gl/dsscicta001415/,2015-04-22 01:09:17,"**SUMMARY** Suspected APT actors using compromised authenticated email accounts to send malware to defense industry employees involved in Southeast Asian business and affairs. The malware exploits a well-known Microsoft Office 2007 and 2010 vulnerability (CVE-2012-0158) and when executed appears to establish command and control (C2) with domains currently hosted on IP address 203.176.232.116. Pivot analysis on the C2 activity revealed additional technical indicators of compromise which can aid in detecting the malware on a victim network. **TECHNICAL DETAILS** In each identified targeted attempt, the actors leveraged an email account relevant to the intended victim. For example, in one case, the actors used a previously compromised email account of a retired Indian Air Marshall to contact a cleared contractor (CC) employee involved in Indian defense matters. The CCs network defenses identified the malicious attachment and analyzed its contents. In this example, technical analysis identified the C2 domain embedded within the malware, URL currently resolving to IP address 203.176.232.116. Pivoting from this IP/domain pairing revealed additional domains hosted by the IPall of which have been used in similar compilations of the malware as the callback domain. Aggregated together, there exists a pattern of activity demonstrated by these actors in targeting specific CC employees. **April 17, 2015** The malware executes a .tpm file and copies itself to C:\Documents and Settings\User\Application Data\mntat\mstmp.exe. The file mstmp.exe drops and extracts msids.dll from the encrypted .zip archive file msexw.zip, it drops the.dll loader msexc.exe and creates the MS shortcut file msexw.lnk to ensure persistence. The other instances of this malware demonstrated a similar execution, but employing different file names. The available indicators of compromise are attached to this document in order to aid in detecting such activity on a victim network. Indicators of Compromise: Based on multiple sources, DSS assesses that the attached indicators may be in use by APT actors targeting CCs and CC employees involved in Southeast Asian business and affairs. (See enclosed .csv file) As previously noted in DSS-CI-CTA-0013-15, CVE-2012-0158 along with six additional CVEs have been recommended to patch, as they are currently being exploited by known Chinese state-sponsored cyber operators and criminal actors According to FBI FLASH 00056-BC and JAR-15-00027, the use of these CVEs by state-sponsored cyber operators and other criminal actors has been discussed in open source reporting, including but not limited to, the reporting referenced in this document. The links below can be used as resources for network defenders to learn more about these topics. However, DSS does not endorse or support any particular product or vendor. CVE-2012-0158 Crowdstrike URL Mandiant URL Dell Secure Works URL Fire Eye URL HP URL Microsoft URL Symantec URL Trend Micro URL"
12,vulnerability,netsec,Everything I know about US Export Law and Hacking Tools,1,33f8q1,http://www.reddit.com/r/netsec/comments/33f8q1/everything_i_know_about_us_export_law_and_hacking/,2015-04-22 11:12:14,"Many are familiar with the famous Metasploit Framework hacking tool that's owned by Rapid7. This week, Rapid7, announced that they would require people outside of the United States and Canada to provide information about themselves to get a trial of their commercial product. URL With these changes, the turn-around time for Metasploit Pro trials will take 24-48 hours as Rapid7 staff will now perform some due diligence on these requests. The Download page for Metasploit is also littered with useless ""you read, understand, and will comply with US export law"" notices as well. This caused some kerfuffle in the US hacker community as many saw this as a sign of change in the United State's policies on the export of hacking tools. URL Changes ARE on the horizon, but they haven't happened yet. The main change is more awareness of these laws and companies making the decision to get compliant with them. Many well meaning organizations do get this stuff wrong. The security vendor, FireEye, exported their product without complying with US export law for awhile. Once they realized, oh shit--we need to follow the law, they went to the US Department of Commerce with a voluntary disclosure and took steps to become compliant. Fortunately for them, no fines were assessed. They did note in their February 2013 quarterly filing that following this law could harm their bottom line. URL [see page 50] To get an idea of the potential consequences of running afoul of US export law, here are the 2009 fines levied against firms that voluntarily disclosed their violations of US export laws: URL I sell software in the security space, I pay for legal advice in this area, and I comply with these laws as a matter of survival. These laws have teeth and the potential fines are grave. I feel there isn't much informed discussion happening around this topic. In this posting, I'll share my understanding of the US export law and how it applies to hacking tools today. I will also dive a little bit into some speculation about what the Wassenaar Arrangement Updates from December 2013 might mean for us. ~~~~~~ ITAR and EAR ~~~~~~ Let's pretend you make or sell hacking tools. When I say hacking tools, I'm describing the function of the software, not its intended use. There are organizations that sell hacking tools to help others understand and better secure their networks. There are others who sell software for law enforcement and military tasks. The fact that software with the same function could cater to either use case is the reason these laws exist in the first place. Which body of law might apply to you? There are two you should be aware of. The first is ITAR, which is managed by the US Department of State. This is the International Traffic in Arms Regulations. This is the body of law that applies to no-kidding weapons. If you develop hacking tools, you may fall under ITAR if your tools are derived from something developed by or for the United States Military or Intelligence Community. If your work isn't a derivative from one of these sources, you're probably not ITAR. The other body of law is the EAR. The EAR is the Export Administration Regulations. It's managed by the United States Department of Commerce's Bureau of Industry and Security. The EAR regulates ""dual use"" goods. These are goods that have both civilian AND military/law enforcement use cases. Unless you work for a defense contractor or take funding from the US Department of Defense, your work will probably fall under the EAR. If you're unsure, it's possible to get a binding decision from the US government. The process to do this is a Commodity Jurisdiction Request. These are managed by the US Department of State. When you put in a CJ, the US Department of State will collaborate with the US Department of Commerce and the US Department of Homeland Security to make a decision about where your product falls. The pain in the ass of the CJ process is that you must treat your product as ITAR controlled until the decision is made. If you already have customers/users outside of the United States, this could make things awkward. ~~~~~~ ECCNs and License Exceptions ~~~~~~ Let's say your hacking tool falls under the EAR and you want to export it. Great! Before you can export it, you need to find out which part of the EAR applies to you. The US law buckets dual-use goods into categories, identified by ECCNs. An ECCN is an Export Control Classification Number. If a product is controlled, the default answer you can not export it without permission from the United States government. This permission is granted on a case-by-case basis. A lot of goods are ""controlled"" with very broad definitions. The United States likes tax revenue and it likes expertise within its borders. Law makers have to find a balance between controlling dangerous exports and not hindering US businesses. Keeping with this line of thought, the EAR has several License Exceptions. These exceptions dictate which situations allow you to export your product without asking for permission from the US government. They also spell out your responsibilities to conduct due diligence on who requests your product and whether or not you have reporting requirements. Before you can find out if a license exception applies to you, you have to know your ECCN. This is something a lawyer can help with. To their credit, the US Department of Commerce BIS publishes a wealth of flow charts, FAQs, and other information to help as well. I found their site very helpful before I found a lawyer to advise me in this area. URL 5dXX2 is the ECCN the bucket where software that *uses* encryption falls. Note the keyword: uses. This is almost every piece of useful software out there today. ECCN 5d992 is mass market software that uses encryption. If your product fits this definition [browsers, operating systems, secure pull my finger applications, etc.] you don't have too many worries. Hacking tools are not mass market. The EAR makes an exception for goods that do ""Network Vulnerability and Penetration Testing"". You can search the EAR for this phrase or ask your lawyer to do it for you. Either way, you're probably the 5d002 ECCN (right now, anyways... more on this later). ~~~~~~ Open Source and Commercial Exports are Treated Differently! ~~~~~~ Once you have an ECCN, you have to determine which exceptions allow you to export it. There are a lot of contextual factors to consider. For those of us 5d002 folks (we need a club or a meetup), here's the flow chart published by the United States Department of Commerce: URL If your software is open source, you will probably export it under License Exception TSU. This is the ""Technology and Software Unrestricted"" controls. If the TSU exception applies to you, you do have one requirement. The law requires you to email crypt@bis.doc.gov and enc@nsa.gov with the URL to your code and name of your project. URL My understanding is that the protections of this exception do not apply to you until you carry out this step. Is the US government chasing people down who fail to do this? I don't think so. The Information Technology Controls Division of the US Department of Commerce has less than 10 people listed on their website. The United States is a big country, there are a lot of products that fall under this law. They probably have other things to do than chase people who didn't send a TSU notification. URL I have open source and commercially available software. I often get people asking me why I'm such a hater because I let them have my free thing, but not the commercial one. This is why. Sadly, eyes glaze over when I try to explain this. ~~~~~~ Registering with the US Department of Commerce ~~~~~~ Commercial penetration testing software falls under License Exception ENC. What happens if you fall under License Exception ENC? It's been awhile, but here's what I remember: You'll need to register for an account in the US Dept of Commerce's SNAP-R system. This is the primary portal where you get to interface with this department and submit requests and things. This system wasn't too bad to work with. I hate all web portals and if I was able to navigate it without significant pain. That says a lot. You'll need to submit a commodity classification request. This request will require you to provide technical information about your product. The questions will ask you which encryption algorithms you use and which key lengths. The US DOC is very interested in whether or not you have an open cryptographic interface (e.g., a way for the end-user to use arbitrary key lengths with your product). As a developer, I had no problems answering these questions. I prepared and submitted my answers without the help of a lawyer (later, I had an export lawyer review them). The US Department of Commerce has 30 days to give you an answer on your classification request. It's been awhile, but I believe you also submit a request for an Encryption Registration Number at this time too. You're not allowed to export your product until these requests are complete. Once the US Department of Commerce responds, you'll get a CCATS number and an Encryption Registration Number (ERN). I haven't had to use my ERN for anything since I've registered for it. I do make use of my CCATS number. ~~~~~~ Complying with US Export Law (for some Security Goods) ~~~~~~ If you export a 5d002 product under License Exception ENC, you have a few things to keep in mind: 1) There are restrictions on who you can export to. If your user is in the United States or Canada--this body of law doesn't apply to the transaction. Have a nice day. If your user is outside of the United States and Canada, you need to find out (a) which country they're from and (b) whether or not they're a government end user. You can't export your product to end users in Iran, Cuba, Syria, North Korea, or Sudan. The law has a list of favorable encryption export countries. These are countries where you can export to any end user, government or civilian. The list is composed of NATO countries and close US allies. URL Outside of the above list, you can export to non-government end users. Government end users require a license from the United States government. Finally, the United States publishes a Consolidated Screening List. This is a massive text file with the names and addresses of organizations you can not export to. URL You're required to check this list before you provide your software to someone outside of the US and Canada. 2) You have reporting requirements. When you export a product under License Exception ENC, you have reporting requirements. Twice a year, you must turn in a spreadsheet, via email, to the US Department of Commerce and the NSA. The law lists these two email addresses. The spreadsheet is very simple. It's the CCATS number of the product, the product's name, the organization you exported to, their physical mailing address, and a quantity. That's it. URL 3) You have due diligence requirements. If you export under License Exception ENC, you're expected to control who has access to your product. You can't just put your product up on your site, allow anyone to download it, and claim ignorance. That said, someone who wants to defeat simple controls, such as IP Geolocation, will. You'll want to work with an export lawyer to determine which technical controls demonstrate that you made a good faith effort to comply with the law. When you do export outside of the US and Canada, you have to collect the information for your reporting requirements, and make some attempt to vet it. You're also expected to look out for ""red flags"". Again, the specifics of vetting and red flags are not in the law. It's ambiguous. This is what allows export lawyers to put their children through college in the United States. ~~~~~~ The Wassenaar Arrangement ~~~~~~ That was a lot of information about the export of software that uses encryption, particularly hacking tools. The story isn't over yet. In December 2013, the United States co-signed an update to the Wassenaar Arrangement on Export Controls. This update is an agreement among several Western Nations to regulate the export of dual-use goods that could be used as cyber weapons (drink!). URL You'll notice that this whole discussion has centered around software that uses encryption. Some hacking tools fall under this. Others don't. Many memory corruption exploits, for example, don't use encryption--so they don't fall under the encryption regulations. The 2013 Wasenaar Arrangement updates try to close this gap. This treaty makes an attempt to nail down a definition for exploits and software that intentionally evades detection technologies. To date, the United States has not released its guidance on how US businesses who deal in such goods are to comply with the law. My understanding is that this guidance is coming out real soon now. Once the guidance comes out, software that fits the above definitions will probably get their own ECCN. With the ECCN will come the different License Exceptions under which the software may be exported. It's possible that these controls may be similar to those for products that use encryption. It's possible that these controls might be much stricter. We won't know until the guidance comes out. ~~~~~~ Conclusion: Hire a Lawyer. ~~~~~~ I wrote all of this off the top of my head. Please for give my errors. If this applies to you, you now have enough export law vocabulary to start your research and to have a better dialog with an attorney. I'm not a lawyer. You want to work with a lawyer through this process. Export law is a specialty. Finding an export lawyer who understands hacking tools is hard. If you're a kick-ass export lawyer, understand hacking, and read r/netsec--make yourself known. "
13,vulnerability,netsec,[Announcing to all interested contributors] OWASP OWTF,1,2xsgnv,http://www.reddit.com/r/netsec/comments/2xsgnv/announcing_to_all_interested_contributors_owasp/,2015-03-04 01:51:21,"**OWASP** Offensive Web Testing Framework An **OWASP** Flagship project, OWTF was born out of need to automated large pentest operations (upto 30 URLs in scope) , organizing large amount of findings as per standard standard [OWASP Testing Guide 3, NIST] and/or custom notes and rankings, etc Basically, **OWTF** aims to make pen testing: - Aligned with **OWASP Testing Guide** + **PTES** + **NIST** - More ***efficient*** - More ***comprehensive*** - More *creative and fun* (minimise un-creative work) so that pentesters will have more time to - See the big picture and think out of the box - More efficiently find, verify and combine vulnerabilities - Have time to investigate complex vulnerabilities like business logic/architectural flaws or virtual hosting sessions - Perform more tactical/targeted fuzzing on seemingly risky areas - Demonstrate true impact despite the short timeframes we are typically given to test. The tool is highly configurable and anybody can trivially create simple plugins or add new tests in the configuration files without having any development experience Features === **OWTF** uses ""*Scumbag spidering*"", ie. instead of implementing yet another spider ([a hard job](URL **OWTF** will scrub the output of all tools/plugins run to gather as many URLs as possible. &gt; This is somewhat ""cheating"" but tremendously effective since it combines the results of different tools, including several tools that perform brute forcing of files and directories. ##### Resilience If one tool crashes **OWTF**, will move on to the next tool/test, saving the partial output of the tool until it crashed. **OWTF** also allow you to monitor worker processes and estimated plugin runtimes. ##### Flexibilty If your internet connectivity or the target host goes down during an assessment, you can ***pause*** the relevant worker processes and **resume** them later avoiding losing data to little as possible. ---- ### Tests Separation **OWTF** separates its traffic to the target into mainly 3 types of plugins: - **Passive** : No traffic goes to the target - **Semi Passive** : Normal traffic to target - **Active**: Direct vulnerability probing Some features like the *passive* and *semi_passive* **test separation** may also assist pen testers wishing to go the extra mile to get a head start and maybe even legitimately start report writing or preparing attacks before they are given the green light to test. ----- ### Easy to use APIs OWTF uses **PostgreSQL** as the database backend. All core **OWTF** functions and options are exposed through APIs making it easy to add new features with little overhead. ---- ### Follows popular pen-testing standards **OWTF** will try to classify the findings as closely as possible to the **OWASP Testing Guide**. It also supports the **NIST** and the **PTES** standards. **PlugnHack v2 support** : **PlugnHack** is a *proposed* standard from the **Mozilla** security team for defining how security tools can interact with browsers in a more useful and usable way. **Zest and OWASP-ZAP integration** : **Zest** is an experimental specialized *scripting language* (domain-specific ) developed by the **Mozilla** security team and is intended to be used in web oriented security tools. ---- ### Responsive web interface **OWTF** now has a default web interface which integrates all core **OWTF** options and makes it possible to manage large pentests easily. - The web interface is built on **Twitter Bootstrap**, making it very easy to use and customize. - The default configuration can be changed easily from the browser. - Makes it easy to control worker processes and see the estimated run times for each plugin run. - Manage a large number of target URLs easily - **Searchable** transactions and URL *logs*. ---- ### Interactive report updated on the fly: - As soon as each plugin finishes or sometimes before (i.e. after each vulnerability scanner finishes), the report is updated **asynchronously** through the *OWTF APIs*. - **Automated** plugin rankings from the tool output, fully configurable by the user. - **Configurable** risk rankings - **In-line notes editor** for each plugin. Requirements === Currently, **OWTF** is developed and is supported on **Linux**, with out-of-box support for the **Kali Linux**. **Docker support also available!! ** **OWTF** has been developed for *Python 2.7*, and therefore it **may** not run &lt;u&gt;as intended&lt;/u&gt; on older *Python* versions. For more information on third-party library requirements, please refer to the [requirements](URL Installation === Recommended: ``` wget URL chmod +x bootstrap.sh; ./bootstrap.sh ``` or simply clone the latest version of **OWTF**. Check out the [wiki](URL for more information. Some Links to get you started! === - [Project homepage](URL - [Wiki](URL - [User Documentation](URL - [Youtube channel](URL - [Slideshare](URL - [Blog](URL"
14,vulnerability,netsec,Vulnerability in RFC 5227 affecting Windows. I developed a DoS tool for it,1,2xiuzu,http://www.reddit.com/r/netsec/comments/2xiuzu/vulnerability_in_rfc_5227_affecting_windows_i/,2015-03-01 13:37:36,"I am a network engineer and system administrator at a mid-sized company. Ive been working in the field for about 7 years now and have seen all sorts of weird problems, from flapping networks to extremely slow tape backups. Last month the server guys were complaining that some of their Windows VMs would periodically have an address of 169.254.x.x/16 set on their NIC after a scheduled reboot. After digging into this I discovered that these machines appear to be receiving an ARP probe from another host on the network with the same IP address as what the server is attempting to use. &amp;nbsp; Upon further investigation it appears Windows handles such ARP packets in perhaps a not so desirable way. From my understanding, when Windows attempts to bring up a network interface it L2 broadcasts out an ARP probe onto the network with the following criteria: * The ARP source MAC is the MAC of the interface * The ARP source IP is 0.0.0.0 * The ARP destination MAC is 00:00:00:00:00:00 * The ARP destination IP is the IP address the server NIC is attempting to use &amp;nbsp; The mechanism is referred to as an ARP probe and is used to determine if the IP address is already in use on the network. If the host receives an ARP back in a specific format where the IP it is attempting to use is described in the payload, the host believes the IP address is already in use on the network. &amp;nbsp; This behavior is defined in RFC 5227, section 2.1.1 (URL ): &gt; If during this period, from the beginning of the probing process &gt; until ANNOUNCE_WAIT seconds after the last probe packet is sent, the &gt; host receives any ARP packet (Request *or* Reply) on the interface &gt; where the probe is being performed, where the packet's 'sender IP &gt; address' is the address being probed for, then the host MUST treat &gt; this address as being in use by some other host, and should indicate &gt; to the configuring agent (human operator, DHCP server, etc.) that the &gt; proposed address is not acceptable. &amp;nbsp; What appeared to be occurring is that when one of our VM hosts rebooted and it was bringing up the NIC it would broadcast out an ARP probe as normal. A machine somewhere else on the network received the broadcast probe and crafted one of its own with the same IP request, which it then sent back to the VM host in a unicast request. &amp;nbsp; Because the server sees another host sending a probe with the same IP it is trying to use, per RFC 5227 it must assume the address is already in use and that there is a numbering conflict. As a result it sets its NIC to a 169.254.x.x/16 link local address. &amp;nbsp; This behavior applies even if the NIC was statically addressed, which of course these servers were. Even if an administrator explicitly defines some server to always use some specific IP address, under the default configuration it is vulnerable. **Some malicious host need only send an ARP to a vulnerable host at the correct time to effectively deny the host network service.** &amp;nbsp; The natural response to discovering such a ridiculous vulnerability is to write an application to exploit it, which of course I did and I am presenting right here on reddit. &amp;nbsp; As I said, as a network engineer/system admin who had to deal with something like this in the wild the intent was *not* to weaponize the problem. Im hoping that exposure might help draw attention to the flaw in the process. &amp;nbsp; As a solution you can edit a registry key to disable the feature. I tested it and it appears to work. URL &amp;nbsp; Cisco IOS with the IPDT feature enabled could cause similiar IP DoS issues. Cisco has it documented on [their website](URL This was checked during troubleshooting the original problem and all of my Catalyst switches had this feature disabled (of course). &amp;nbsp; **Screenshots** * [Command line showing a listening attack.](URL The program listens for all ARP probes and automatically DoS's the host sending them. The program receives an ARP probe from 00:0c:29:de:45:e8 indicating the host is turning up a NIC to use IP 192.168.100.23. The program sends a unicast ARP probe back to 00:0c:29:de:45:e8 saying that it is doing the same thing. &amp;nbsp; * [Windows Server 2008 R2 (the target from above).](URL Shows the server was configured with a static IP address of 192.168.100.23 and detected a duplicate IP on the network. As a result it assigned itself 169.254.171.12. &amp;nbsp; **Source code** This code requires libpcap, but that should be it. I tested it on Linux but it should run on any unix-like machine. Available here: URL"
15,cybersecurity,netsec,We are Michael Coates and Rich Mason. We have served as Chief Information Security Officers at Twitter and Honeywell. Ask us anything about becoming a CISO.,1,dvumig,https://www.reddit.com/r/netsec/comments/dvumig/we_are_michael_coates_and_rich_mason_we_have/,2019-11-14 04:00:29,"We are: - [Michael Coates](URL CEO and co-founder of Altitude Networks, and former Twitter CISO. (u/_mwc) - Rich Mason, President and Chief Security Officer, Critical Infrastructure, and Former Honeywell CISO. (u/maceusa) We have collectively served as Chief Information Security Officers for companies including, Honeywell and Twitter. Ask us anything about the road to becoming a CISO. We are happy to share our lessons learned and offer our best advice for the next generation of cybersecurity professionals - either those just getting into the field of security, or advice for professionals aspiring for security leadership roles. Proof: - URL - URL"
