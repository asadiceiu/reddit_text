,topic,subreddit,title,score,id,url,created,body
0,vulnerability,ethereum,Dragonchain Great Reddit Scaling Bake-Off Public Proposal,1,i023gf,https://www.reddit.com/r/ethereum/comments/i023gf/dragonchain_great_reddit_scaling_bakeoff_public/,2020-07-30 00:56:55,"## Dragonchain Public Proposal TL;DR: Dragonchain has demonstrated **twice Reddits entire total daily volume (votes, comments, and posts** [**per Reddit 2019 Year in Review**](URL in a [24-hour demo](URL on an operational network. Every single transaction on Dragonchain is decentralized immediately through 5 levels of Dragon Net, and then secured with combined proof on **Bitcoin**, **Ethereum**, **Ethereum Classic**, and **Binance Chain**, via Interchain. At the time, in January 2020, the entire cost of the demo was approximately $25K on a single system (transaction fees locked at $0.0001/txn). With current fees (lowest fee $0.0000025/txn), this would cost as little as $625. W**atch Joe walk through the entire proposal and answer questions on** [**YouTube**](URL This proposal is also available on the [Dragonchain blog](URL ## Hello Reddit and Ethereum community! Im Joe Roets, Founder &amp; CEO of Dragonchain. When the team and I first heard about The Great Reddit Scaling Bake-Off we were intrigued. We believe we have the solutions Reddit seeks for its community points system and we have them at scale. For your consideration, we have submitted our proposal below. The team at Dragonchain and I welcome and look forward to your technical questions, philosophical feedback, and fair criticism, to build a scaling solution for Reddit that will empower its users. Because our architecture is unlike other blockchain platforms out there today, we expect to receive many questions while people try to grasp our project. I will answer all questions here in this thread on Reddit, and I've answered some questions in the stream on YouTube. We have seen good discussions so far in the competition. We hope that Reddits scaling solution will emerge from The Great Reddit Scaling Bake-Off and that Reddit will have great success with the implementation. ## Executive summary Dragonchain is a robust open source hybrid blockchain platform that has proven to withstand the passing of time since our inception in 2014. We have continued to evolve to harness the scalability of private nodes, yet take full advantage of the security of public decentralized networks, like Ethereum. We have a live, operational, and fully functional Interchain network integrating Bitcoin, Ethereum, Ethereum Classic, and \~700 independent Dragonchain nodes. Every transaction is secured to Ethereum, Bitcoin, and Ethereum Classic. Transactions are immediately usable on chain, and the first decentralization is seen within 20 seconds on Dragon Net. Security increases further to public networks ETH, BTC, and ETC within 10 minutes to 2 hours. Smart contracts can be written in any executable language, offering full freedom to existing developers. We invite any developer to watch the demo, play with our SDKs, review open source code, and to help us move forward. Dragonchain specializes in scalable loyalty &amp; rewards solutions and has built a decentralized social network on chain, with very affordable transaction costs. This experience can be combined with the insights Reddit and the Ethereum community have gained in the past couple of months to roll out the solution at a rapid pace. ## Response and PoC In *The Great Reddit Scaling Bake-Off* post, Reddit has asked for a series of demonstrations, requirements, and other considerations. In this section, we will attempt to answer all of these requests. ## Live Demo &gt;A live proof of concept showing hundreds of thousands of transactions On Jan 7, 2020, Dragonchain hosted a 24-hour live demonstration during which a quarter of a billion (250 million+) transactions executed fully on an operational network. **Every single transaction** on Dragonchain is decentralized immediately through 5 levels of Dragon Net, and then secured with **combined proof** on **Bitcoin**, **Ethereum**, **Ethereum Classic**, and **Binance Chain**, via Interchain. This means that every single transaction is secured by, and traceable to these networks. An attack on this system would require a simultaneous attack on all of the Interchained networks. 24 hours in 4 minutes ([YouTube](URL ![video](pf6glgi52td51 ""24 hours in 4 minutes"") The demonstration was of a single business system, and any user is able to scale this further, by running multiple systems simultaneously. Our goals for the event were to demonstrate a consistent capacity greater than that of Visa over an extended time period. Tooling to reproduce our demo is available here: [URL ## Source Code &gt;Source code (for on &amp; off-chain components as well tooling used for the PoC). The source code does not have to be shared publicly, but if Reddit decides to use a particular solution it will need to be shared with Reddit at some point. * [Dragonchain Core](URL * [Tooling for demonstration](URL * [Dragonchain Github](URL ## Scaling &gt;How it works &amp; scales ## Architectural Scaling Dragonchains architecture attacks the scalability issue from multiple angles. Dragonchain is a hybrid blockchain platform, wherein every transaction is protected on a business node to the requirements of that business or purpose. A business node may be held completely private or may be exposed or replicated to any level of exposure desired. Every node has its own blockchain and is independently scalable. Dragonchain established *Context Based Verification* as its consensus model. Every transaction is immediately usable on a trust basis, and in time is provable to an increasing level of decentralized consensus. A transaction will have a level of decentralization to independently owned and deployed Dragonchain nodes (\~700 nodes) within seconds, and full decentralization to BTC and ETH within minutes or hours. Level 5 nodes (Interchain nodes) function to secure all transactions to public or otherwise external chains such as Bitcoin and Ethereum. These nodes scale the system by aggregating multiple blocks into a single Interchain transaction on a cadence. This timing is configurable based upon average fees for each respective chain. For detailed information about Dragonchains architecture, and *Context Based Verification*, please refer to the [Dragonchain Architecture Document](URL ## Economic Scaling An interesting feature of Dragonchains network consensus is its economics and scarcity model. Since Dragon Net nodes (L2-L4) are independent staking nodes, deployment to cloud platforms would allow any of these nodes to scale to take on a large percentage of the verification work. This is great for scalability, but not good for the economy, because there is no scarcity, and pricing would develop a downward spiral and result in fewer verification nodes. For this reason, Dragonchain uses TIME as scarcity. TIME is calculated as the number of Dragons held, multiplied by the number of days held. TIME influences the users access to features within the Dragonchain ecosystem. It takes into account both the Dragon balance and length of time each Dragon is held. TIME is staked by users against every verification node and dictates how much of the transaction fees are awarded to each participating node for every block. TIME also dictates the transaction fee itself for the business node. TIME is staked against a business node to set a **deterministic transaction fee** level (see transaction fee table below in Cost section). This is very interesting in a discussion about scaling because it guarantees independence for business implementation. No matter how much traffic appears on the entire network, a business is guaranteed to not see an increased transaction fee rate. ## Scaled Deployment Dragonchain uses Docker and Kubernetes to allow the use of best practices traditional system scaling. Dragonchain offers *managed nodes* with an easy to use web based console interface. The user may also deploy a Dragonchain node within their own datacenter or favorite cloud platform. Users have deployed Dragonchain nodes on-prem on Amazon AWS, Google Cloud, MS Azure, and other hosting platforms around the world. Any executable code, anything you can write, can be written into a smart contract. This flexibility is what allows us to say that developers with no blockchain experience can use any code language to access the benefits of blockchain. Customers have used NodeJS, Python, Java, and even BASH shell script to write smart contracts on Dragonchain. With Docker containers, we achieve better separation of concerns, faster deployment, higher reliability, and lower response times. We chose Kubernetes for its self-healing features, ability to run multiple services on one server, and its large and thriving development community. It is resilient, scalable, and automated. OpenFaaS allows us to package smart contracts as Docker images for easy deployment. Contract deployment time is now bounded only by the size of the Docker image being deployed but remains fast even for reasonably large images. We also take advantage of Dockers flexibility and its ability to support any language that can run on x86 architecture. Any image, public or private, can be run as a smart contract using Dragonchain. ## Flexibility in Scaling Dragonchains architecture considers interoperability and integration as key features. From inception, we had a goal to increase adoption via integration with real business use cases and traditional systems. We envision the ability for Reddit, in the future, to be able to integrate alternate content storage platforms or other financial services along with the token. * **LBRY** \- To allow users to deploy content natively to LBRY * **MakerDAO** to allow users to lend small amounts backed by their Reddit community points. * **STORJ/SIA** to allow decentralized on chain storage of portions of content. These integrations or any other are relatively easy to integrate on Dragonchain with an Interchain implementation. ## Cost &gt;Cost estimates (on-chain and off-chain) For the purpose of this proposal, we assume that all transactions are on chain (posts, replies, and votes). On the Dragonchain network, transaction costs are deterministic/predictable. By staking TIME on the business node (as described above) Reddit can reduce transaction costs to as low as $0.0000025 per transaction. ![img](pwpbuvgg3td51 ""Dragonchain Fees Table"") ## Getting Started &gt;How to run it Building on Dragonchain is simple and requires no blockchain experience. Spin up a business node (L1) in our managed environment (AWS), run it in your own cloud environment, or on-prem in your own datacenter. Clear documentation will walk you through the steps of spinning up your first Dragonchain Level 1 Business node. Getting started is easy... 1. Download Dragonchains dctl 2. Input three commands into a terminal 3. Build an image 4. Run it More information can be found in our Get started documents. * [Quickstart](URL * [Full Documentation](URL &amp;#x200B; &gt;Architecture Dragonchain is an open source hybrid platform. Through Dragon Net, each chain combines the power of a public blockchain (like Ethereum) with the privacy of a private blockchain. Dragonchain organizes its network into five separate levels. A Level 1, or business node, is a totally private blockchain only accessible through the use of public/private keypairs. All business logic, including smart contracts, can be executed on this node directly and added to the chain. After creating a block, the Level 1 business node broadcasts a version stripped of sensitive private data to Dragon Net. Three Level 2 Validating nodes validate the transaction based on guidelines determined from the business. A Level 3 Diversity node checks that the level 2 nodes are from a diverse array of locations. A Level 4 Notary node, hosted by a KYC partner, then signs the validation record received from the Level 3 node. The transaction hash is ledgered to the Level 5 public chain to take advantage of the hash power of massive public networks. Dragon Net can be thought of as a blockchain of blockchains, where every level is a complete private blockchain. Because an L1 can send to multiple nodes on a single level, proof of existence is distributed among many places in the network. Eventually, proof of existence reaches level 5 and is published on a public network. * [Dragonchain architecture](URL * [Dragon Net easy to consume 2018 Infographic](URL ## API Documentation &gt;APIs (on chain &amp; off) * [Python SDK](URL * [NodeJS/Javascript SDK](URL * [Go SDK](URL * [DCTL Package](URL * [API References](URL * [RESTful API](URL ## SDK Source * [URL * [URL * [URL * [URL ## Nobodys Perfect &gt;Known issues or tradeoffs * Dragonchain is open source and even though the platform is easy enough for developers to code in any language they are comfortable with, we do not have so large a developer community as Ethereum. We would like to see the Ethereum developer community (and any other communities) become familiar with our SDKs, our solutions, and our platform, to unlock the full potential of our Ethereum Interchain. Long ago we decided to prioritize both Bitcoin and Ethereum Interchains. We envision an ecosystem that encompasses different projects to give developers the ability to take full advantage of all the opportunities blockchain offers to create decentralized solutions not only for Reddit but for all of our current platforms and systems. We believe that together we will take the adoption of blockchain further. We currently have additional Interchain with Ethereum Classic. We look forward to Interchain with other blockchains in the future. We invite all blockchains projects who believe in decentralization and security to Interchain with Dragonchain. * While we only have 700 nodes compared to 8,000 Ethereum and 10,000 Bitcoin nodes. We harness those 18,000 nodes to scale to extremely high levels of security. See [Dragonchain metrics](URL * Some may consider the centralization of Dragonchains business nodes as an issue at first glance, however, the model is by design to protect business data. We do not consider this a drawback as these nodes can make any, none, or all data public. Depending upon the implementation, **every subreddit could have control of its own business node**, for potential business and enterprise offerings, bringing **new alternative revenue streams to Reddit**. ## Costs and resources &gt;Summary of cost &amp; resource information for both on-chain &amp; off-chain components used in the PoC, as well as cost &amp; resource estimates for further scaling. If your PoC is not on mainnet, make note of any mainnet caveats (such as congestion issues). Every transaction on the PoC system had a transaction fee of $0.0001 (one-hundredth of a cent USD). At 256MM transactions, the demo cost $25,600. With current operational fees, the same demonstration would cost $640 USD. For the demonstration, to achieve throughput to mimic a worldwide payments network, we modeled several clients in AWS and 4-5 business nodes to handle the traffic. The business nodes were tuned to handle higher throughput by adjusting memory and machine footprint on AWS. This flexibility is valuable to implementing a system such as envisioned by Reddit. Given that Reddits daily traffic (posts, replies, and votes) is less than half that of our demo, we would expect that the entire Reddit system could be handled on 2-5 business nodes using right-sized containers on AWS or similar environments. Verification was accomplished on the operational Dragon Net network with over 700 independently owned verification nodes running around the world at no cost to the business other than paid transaction fees. ## Requirements ## Scaling &gt;This PoC should scale to the numbers below with minimal costs (both on &amp; off-chain). There should also be a clear path to supporting hundreds of millions of users. &gt; &gt;Over a 5 day period, your scaling PoC should be able to handle: &gt; &gt;\*100,000 point claims (minting &amp; distributing points) \*25,000 subscriptions \*75,000 one-off points burning \*100,000 transfers During Dragonchains 24 hour demo, the above required numbers were reached within the first few minutes. Reddits total activity is 9000% more than Ethereums total transaction level. Even if you do not include votes, it is still 700% more than Ethereums current volume. Dragonchain has demonstrated that it can handle 250 million transactions a day, and its architecture allows for multiple systems to work at that level simultaneously. In our PoC, we demonstrate double the full capacity of Reddit, and every transaction was proven all the way to Bitcoin and Ethereum. ![img](k9itp7es3td51 ""Reddit Scaling on Ethereum"") ## Decentralization &gt;Solutions should not depend on any single third-party provider. We prefer solutions that do not depend on specific entities such as Reddit or another provider, and solutions with no single point of control or failure in off-chain components but recognize there are numerous trade-offs to consider Dragonchains architecture calls for a hybrid approach. Private business nodes hold the sensitive data while the validation and verification of transactions for the business are decentralized within seconds and secured to public blockchains within 10 minutes to 2 hours. Nodes could potentially be controlled by owners of individual subreddits for more organic decentralization. * Billing is currently centralized - there is a path to federation and decentralization of a scaled billing solution. * Operational multi-cloud * Operational on-premises capabilities * Operational deployment to any datacenter * Over 700 independent Community Verification Nodes with proof of ownership * Operational Interchain (Interoperable to Bitcoin, Ethereum, and Ethereum Classic, open to more) ## Usability Scaling solutions should have a simple end user experience. &gt;Users shouldn't have to maintain any extra state/proofs, regularly monitor activity, keep track of extra keys, or sign anything other than their normal transactions Dragonchain and its customers have demonstrated extraordinary usability as a feature in many applications, where users do not need to know that the system is backed by a live blockchain. Lyceum is one of these examples, where the progress of academy courses is being tracked, and successful completion of courses is rewarded with certificates on chain. Our @Save\_The\_Tweet bot is popular on Twitter. When used with one of the following hashtags - #please, #blockchain, #ThankYou, or #eternalize the tweet is saved through Eternal to multiple blockchains. A proof report is available for future reference. Other examples in use are DEN, our decentralized social media platform, and our console, where users can track their node rewards, view their TIME, and operate a business node. Examples: * [Den social media](URL * [Eternal &amp; Save The Tweet bot](URL * [Lyceum/Academy](URL &amp;#x200B; &gt;Transactions complete in a reasonable amount of time (seconds or minutes, not hours or days) All transactions are **immediately usable** on chain by the system. A transaction begins the path to decentralization at the conclusion of a 5-second block when it gets distributed across 5 separate community run nodes. Full decentralization occurs within 10 minutes to 2 hours depending on which interchain (Bitcoin, Ethereum, or Ethereum Classic) the transaction hits first. Within approximately 2 hours, the combined hash power of all interchained blockchains secures the transaction. &amp;#x200B; &gt;Free to use for end users (no gas fees, or fixed/minimal fees that Reddit can pay on their behalf) With transaction pricing as low as $0.0000025 per transaction, it may be considered reasonable for Reddit to cover transaction fees for users. ![img](p9tmb6i04td51 ""All of Reddit's Transactions on Blockchain (month)"") Community points can be earned by users and distributed directly to their Reddit account in batch (as per Reddit minting plan), and allow users to withdraw rewards to their Ethereum wallet whenever they wish. Withdrawal fees can be paid by either user or Reddit. This model has been operating inside the Dragonchain system since 2018, and many security and financial compliance features can be optionally added. We feel that this capability greatly enhances user experience because it is seamless to a regular user without cryptocurrency experience, yet flexible to a tech savvy user. With regard to currency or token transactions, these would occur on the Reddit network, verified to BTC and ETH. These transactions would incur the $0.0000025 transaction fee. To estimate this fee we use the monthly active Reddit users [statista](URL with a 60% adoption rate and an estimated 10 transactions per month average resulting in an approximate $720 cost across the system. Reddit could feasibly incur all associated *internal* network charges (mining/minting, transfer, burn) as these are very low and controllable fees. ![img](cbnnso9a4td51 ""Reddit Internal Token Transaction Fees"") &amp;#x200B; ![img](5vrfq1nf4td51 ""Reddit Ethereum Token Transaction Fees"") When we consider further the Ethereum fees that might be incurred, we have a few choices for a solution. 1. Offload all Ethereum transaction fees (user withdrawals) to interested users as they wish to withdraw tokens for external use or sale. 2. Cover Ethereum transaction fees by aggregating them on a timed schedule. Users would request withdrawal (from Reddit or individual subreddits), and they would be transacted on the Ethereum network every hour (or some other schedule). 3. In a combination of the above, customers could cover aggregated fees. 4. Integrate with alternate Ethereum roll up solutions or other proposals to aggregate minting and distribution transactions onto Ethereum. ## Bonus Points &gt;Users should be able to view their balances &amp; transactions via a blockchain explorer-style interface From interfaces for users who have no knowledge of blockchain technology to users who are well versed in blockchain terms such as those present in a typical block explorer, a system powered by Dragonchain has flexibility on how to provide balances and transaction data to users. Transactions can be made viewable in an Eternal Proof Report, which displays raw data along with TIME staking information and traceability all the way to Bitcoin, Ethereum, and every other Interchained network. The report shows fields such as transaction ID, timestamp, block ID, multiple verifications, and Interchain proof. [See example here](URL Node payouts within the Dragonchain console are listed in chronological order and can be further seen in either Dragons or USD. [See example here](URL In our social media platform, Dragon Den, users can see, in real-time, their NRG and MTR balances. [See example here.](URL A new influencer app powered by Dragonchain, Raiinmaker, breaks down data into a user friendly interface that shows coin portfolio, redeemed rewards, and social scores per campaign. [See example here.](URL &amp;#x200B; &gt;Exiting is fast &amp; simple Withdrawing funds on Dragonchains console requires three clicks, however, withdrawal scenarios with more enhanced security features per Reddits discretion are obtainable. &amp;#x200B; &gt;Interoperability Compatibility with third party apps (wallets/contracts/etc) is necessary. Proven interoperability at scale that surpasses the required specifications. Our entire platform consists of interoperable blockchains connected to each other and traditional systems. APIs are well documented. Third party permissions are possible with a simple smart contract without the end user being aware. No need to learn any specialized proprietary language. Any code base (not subsets) is usable within a Docker container. Interoperable with any blockchain or traditional APIs. Weve witnessed relatively complex systems built by engineers with no blockchain or cryptocurrency experience. Weve also demonstrated the creation of smart contracts within minutes built with BASH shell and Node.js. Please see our source code and API documentation. &amp;#x200B; &gt;Scaling solutions should be extensible and allow third parties to build on top of it Open source and extensible &gt; &gt;APIs should be well documented and stable * [Python SDK](URL * [NodeJS/Javascript SDK](URL * [Go SDK](URL * [DCTL Package](URL * [API References](URL * [RESTful API](URL &amp;#x200B; &gt;Documentation should be clear and complete For full documentation, explore our docs, SDKs, Github repos, architecture documents, original Disney documentation, and other links or resources provided in this proposal. * [Github](URL * [Architecture](URL * [Disney Use Cases](URL * [Den social media](URL * [Dragon Den Blue Paper](URL * [Core documentation](URL * [Javascript SDK](URL * [Python SDK](URL * [Go SDK](URL * [Dart SDK](URL * [User friendly console](URL * [TIME](URL * [Academy](URL * [Dragonchain Wikipedia](URL &amp;#x200B; &gt;Third-party permissionless integrations should be possible &amp; straightforward Smart contracts are Docker based, can be written in any language, use full language (not subsets), and can therefore be integrated with any system including traditional system APIs. Simple is better. Learning an uncommon or proprietary language should not be necessary. Advanced knowledge of mathematics, cryptography, or L2 scaling should not be required. Compatibility with common utilities &amp; toolchains is expected. Dragonchain business nodes and smart contracts leverage Docker to allow the use of literally any language or executable code. No proprietary language is necessary. Weve witnessed relatively complex systems built by engineers with no blockchain or cryptocurrency experience. Weve also demonstrated the creation of smart contracts within minutes built with BASH shell and Node.js. # Bonus &gt;Bonus Points: Show us how it works. Do you have an idea for a cool new use case for Community Points? Build it! ## TIME Community points could be awarded to Reddit users based upon TIME too, whereas the longer someone is part of a subreddit, the more community points someone naturally gained, even if not actively commenting or sharing new posts. A daily login could be required for these community points to be credited. This grants awards to readers too and incentivizes readers to create an account on Reddit if they browse the website often. This concept could also be leveraged to provide some level of reputation based upon duration and consistency of contribution to a community subreddit. * [TIME](URL * [Learn more about TIME and how to apply this to your nodes](URL ## Dragon Den Dragonchain has already built a social media platform that harnesses community involvement. Dragon Den is a decentralized community built on the Dragonchain blockchain platform. Dragon Den is Dragonchains answer to fake news, trolling, and censorship. It incentivizes the creation and evaluation of quality content within communities. It could be described as being a shareholder of a subreddit or Reddit in its entirety. The more your subreddit is thriving, the more rewarding it will be. Den is currently in a public beta and in active development, though the real token economy is not live yet. There are different tokens for various purposes. Two tokens are Lair Ownership Rights (LOR) and Lair Ownership Tokens (LOT). LOT is a non-fungible token for ownership of a specific Lair. LOT will only be created and converted from LOR. Energy (NRG) and Matter (MTR) work jointly. Your MTR determines how much NRG you receive in a 24-hour period. Providing quality content, or evaluating content will earn MTR. * [Dragon Den Blue Paper](URL * [Den social media](URL &amp;#x200B; &gt;Security. Users have full ownership &amp; control of their points. All community points awarded based upon any type of activity or gift, are secured and provable to all Interchain networks (currently BTC, ETH, ETC). Users are free to spend and withdraw their points as they please, depending on the features Reddit wants to bring into production. &amp;#x200B; &gt;Balances and transactions cannot be forged, manipulated, or blocked by Reddit or anyone else Users can withdraw their balance to their ERC20 wallet, directly through Reddit. Reddit can cover the fees on their behalf, or the user covers this with a portion of their balance. &amp;#x200B; &gt;Users should own their points and be able to get on-chain ERC20 tokens without permission from anyone else Through our console users can withdraw their ERC20 rewards. This can be achieved on Reddit too. Here is a walkthrough of our console, though this does not show the quick withdrawal functionality, a user can withdraw at any time. [URL &amp;#x200B; &gt;Points should be recoverable to on-chain ERC20 tokens even if all third-parties involved go offline If necessary, signed transactions from the Reddit system (e.g. Reddit + Subreddit) can be sent to the Ethereum smart contract for minting. &amp;#x200B; &gt;A public, third-party review attesting to the soundness of the design should be available To our knowledge, at least two large corporations, including a top 3 accounting firm, have conducted positive reviews. These reviews have never been made public, as Dragonchain did not pay or contract for these studies to be released. &amp;#x200B; &gt;Bonus points &gt; &gt;Public, third-party implementation review available or in progress See above &amp;#x200B; &gt;Compatibility with HSMs &amp; hardware wallets For the purpose of this proposal, all tokenization would be on the Ethereum network using standard token contracts and as such, would be able to leverage all hardware wallet and Ethereum ecosystem services. ## Other Considerations &gt;Minting/distributing tokens is not performed by Reddit directly This operation can be automated by smart contract on Ethereum. Subreddits can if desired have a role to play. &amp;#x200B; &gt;One off point burning, as well as recurring, non-interactive point burning (for subreddit memberships) should be possible and scalable This is possible and scalable with interaction between Dragonchain Reddit system and Ethereum token contract(s). &amp;#x200B; &gt;Fully open-source solutions are strongly preferred Dragonchain is fully open source (see section on Disney release after conclusion). ## Conclusion Whether it is today, or in the future, we would like to work together to bring secure flexibility to the highest standards. It is our hope to be considered by Ethereum, Reddit, and other integrative solutions so we may further discuss the possibilities of implementation. In our public demonstration, 256 million transactions were handled in our operational network on chain in 24 hours, for the low cost of $25K, which if run today would cost $625. Dragonchains interoperable foundation provides the atmosphere necessary to implement a frictionless community points system. Thank you for your consideration of our proposal. We look forward to working with the community to make something great! ## Disney Releases Blockchain Platform as Open Source The team at Disney created the Disney Private Blockchain Platform. The system was a hybrid interoperable blockchain platform for ledgering and smart contract development geared toward solving problems with blockchain adoption and usability. All objective evaluation would consider the teams output a success. We released a list of use cases that we explored in some capacity at Disney, and our input on blockchain standardization as part of our participation in the W3C Blockchain Community Group. [URL ## Open Source In 2016, Roets proposed to release the platform as open source to spread the technology outside of Disney, as others within the W3C group were interested in the solutions that had been created inside of Disney. Following a long process, step by step, the team met requirements for release. Among the requirements, the team had to: * Obtain VP support and approval for the release * Verify ownership of the software to be released * Verify that no proprietary content would be released * Convince the organization that there was a value to the open source community * Convince the organization that there was a value to Disney * Offer the plan for ongoing maintenance of the project outside of Disney * Itemize competing projects * Verify no conflict of interest * Preferred license * Change the project name to not use the name Disney, any Disney character, or any other associated IP - proposed Dragonchain - approved * Obtain legal approval * Approval from corporate, parks, and other business units * Approval from multiple Disney patent groups Copyright holder defined by Disney (Disney Connected and Advanced Technologies) * Trademark searches conducted for the selected name Dragonchain * Obtain IT security approval * Manual review of OSS components conducted * OWASP Dependency and Vulnerability Check Conducted * Obtain technical (software) approval * Offer management, process, and financial plans for the maintenance of the project. * Meet list of items to be addressed before release * Remove all Disney project references and scripts * Create a public distribution list for email communications * Remove Roets direct and internal contact information * Create public Slack channel and move from Disney slack channels * Create proper labels for issue tracking * Rename internal private Github repository * Add informative description to Github page * Expand README.md with more specific information * Add information beyond current Blockchains are Magic * Add getting started sections and info on cloning/forking the project * Add installation details * Add uninstall process * Add unit, functional, and integration test information * Detail how to contribute and get involved * Describe the git workflow that the project will use * Move to public, non-Disney git repository (Github or Bitbucket) * Obtain Disney Open Source Committee approval for release On top of meeting the above criteria, as part of the process, the maintainer of the project had to receive the codebase on their own personal email and create accounts for maintenance (e.g. Github) with non-Disney accounts. Given the fact that the project spanned multiple business units, Roets was individually responsible for its ongoing maintenance. Because of this, he proposed in the open source application to create a non-profit organization to hold the IP and maintain the project. This was approved by Disney. The Disney Open Source Committee approved the application known as OSSRELEASE-10, and the code was released on October 2, 2016. Disney decided to not issue a press release. [Original OSSRELASE-10 document](URL ## Dragonchain Foundation The Dragonchain Foundation was created on January 17, 2017. [URL"
1,vulnerability,ethereum,"With the new ENS contract, will the same ERC721 token contract be used?",1,ey4xvb,https://www.reddit.com/r/ethereum/comments/ey4xvb/with_the_new_ens_contract_will_the_same_erc721/,2020-02-03 21:02:55,"I noticed that the ENS team changed their registrar contract to prevent a vulnerability, does this mean that the ENS contract holding the ERC721 tokens has also changed or will it work as normal? Will there be two ERC721 token contracts?"
2,vulnerability,ethereum,"[EXTREMELY CRITICAL] Huge vulnerability in MetaMask, I should receive a bounty for discovering this",1,efko7n,https://www.reddit.com/r/ethereum/comments/efko7n/extremely_critical_huge_vulnerability_in_metamask/,2019-12-26 06:32:27,"I discovered a huge vulnerability in MetaMask, that apparently has not been revealed before. I just posted instructions at stackexchange which shows how someone could steal all your DAI (or any other token), even though the MetaMask verification screen shows ""0"" as the amount that will be transferred, and does not show the token name: [URL Someone could create a website that says ""Don't worry about the MetaMask verification screen that shows no money will be transferred, it just allows us to show you more data."" The instant you click \[Confirm\], **all your DAI** (or any other token) will be immediately and irreversibly transferred to the culprit's contract, ***with no warning***."
3,vulnerability,ethereum,[Vulnerability Disclosure] [FairWin] Front-running in the currently most used Ethereum contract,170,darmk9,https://www.reddit.com/r/ethereum/comments/darmk9/vulnerability_disclosure_fairwin_frontrunning_in/,2019-09-29 16:29:17,"Funds are at risk (well primarily funds are at risks because it's a [Ponzi](URL but here, funds are triple at risk \^\^). **What is FairWind?** [FairWin](URL is a [Ponzi scheme](URL using [this contract](URL It is currently the contract accounting for the highest amount of network use [(33% of TX](URL [highest ETH volume and highest daily active users](URL Users can make money in two ways: * ""Invest"" money in the scheme which will give a daily ""dividend"". * Give invitation codes to other people. People you invite and people invited by people you invite (and so on...) putting money give you a reward. Users lose money in one way (assuming the smart contract works as promised): * The contract runs out of funds. Since people are paid dividend and bonus, the amount of money which will be paid exceeds the user deposits. It currently only works because new people are putting more money in it. It is unsustainable and there will inevitably be a point where the contract won't be able to pay participants. People still in the scheme at this moment will lose all their money. It has a middle-low level of honesty (for the Ponzi world). If you read the fine prints: &gt;Players can withdraw eth as long as there is eth in the contract. &gt; &gt;If the contract balance is 0, the restart mechanism will be automatically started. When restart, all accounts will be returned to 0, but the node relationship remains unchanged, and a new round of games will be started. You can understand it will stop to work at some point reading those. However, most communication material is lauding the project (with a very bad English, see [their website video](URL and does not mention that when it will stop, people will lose all their money. Communication materials even brag about ""capital security"" ([video on the home page popup](URL The team also seems to be fake, using fake pictures and claiming their smart contract developer has 9 years of blockchain experience, that they have people from US (while their English level is terrible) and so on. **Operator can steal the money** Contrary to what Fairwin claims, &gt;FairWin will not use and can not use any player's eth. the operators can steal all the money from the contract. The execution of the [reward](URL [dividends](URL and sending of [awards](URL can only be done by the operator. The operator can choose which users get rewarded. The operator can steal the funds from the contract by not executing the rewards of other users but executing the rewards of accounts they control. This way they can progressively drain the funds of the contract until the contract is empty. This would take some time and a lot of gas. Because users need to get 5 rewards before they can get their ""investment"" back, the operators can prevent people from withdrawing from the scheme. Is it made on purpose? I don't think so. This contract is the contract with the lowest code quality I've ever seen (and I've seen really bad contracts). There are no comments, variable names are full of typo, extra variables are used everywhere, there are entire code segments which can never be accessed, when the code encounter some some forbidden action, it does random stuff before reverting while a simple require would be needed. Due to [Occam's razor](URL the simplest and most likely explanation is that it was just badly coded. However, this vulnerability could be handy to move the funds to a new contract. **Anyone can frontrun ""investments""** When someone ""invest"" in the scheme, they provide an ""[invite code](URL This code can be given to other people to get rewards if they ""invest"" too. However, this ""invite code"" is also used as an way to identify the user ([here](URL and [here](URL The link between the code and the user [is only updated if the ""invite code"" has not been used before](URL This means if someone registered the ""invite code"" before you, the rewards and your money will be given to this user instead of you. How likely are you to use the same code has someone else? If no one attacks, not likely, but here is catch: an attacker can see your ""invite code"" when your transaction is in the mempool before it gets executed and ""invest"" in the scheme with the same ""invite code"" as you. They can ensure they get included first by putting a higher gasprice. This way they will get your [money](URL and rewards. This is a [frontrunning attack](URL Users (this include attackers) can withdraw their money 5 days after their ""investment"", provided that the contract is still solvent. For an attacker to successfully profit from the attack all those conditions must be fulfilled: 1. The attacker transaction must be executed first. In case of multiple attacker, the attacker whose transaction get executed first will get the money of the victim and other attackers. 2. The operator must continue to operate the scheme normally (not exit scam or censor the attacker payout). 3. The Ponzi should still be solvent 5 days after the attack. **Am I affected?** Every ""investor"" can be affected by the team taking the money. Only new ""investors"" can be directly affected by the frontrunning issue. However, the vulnerability means that the amount of new ""investors"" is likely to decrease. Which increases the speed for the contract to become insolvent before you recover your money. Based on contribution rate, the Ponzi will become insolvent before you get your money back anyways. **Can it be solved?** The FairWin team can drain the contract. This would take time and gas. If they are ""honest"", they can then set up a new contract and continue the scheme or they can reimburse participants proportionally to what they put. But since the Ponzi will become insolvent, they probably won't bother. **Is it bad for Ethereum?** I don't think so, Ponzis are not what is exciting about Ethereum. And the Ponzi would have gone insolvent anyways. Actually, the vulnerability is probably make it stop sooner, leading to less people losing their money. **Responsible Disclosure Rationale** We (myself and other white hats), have disclosed the vulnerability to the FairWin team. Multiples attempts by mail and telegram (the contact mediums listed on their website) to contact them have remained without reply. Based on [current contribution rate](URL the Ponzi will become insolvent in less than 5 days. Even if conditions 1. (not being frontrun by another attacker) and 2. (the operator should not interfere with the scheme) are likely to be fulfilled. The condition 3. (Ponzi still solvent after 5 days) is really unlikely to be fulfilled making the attack unlikely. Since an attacker is unlikely to benefit from the attack but people will still lose money ""investing"" in the scheme, disclosure of the vulnerability is likely to decrease participation rate, thus the amount of people losing money. Disclosure of the vulnerability can bring light on particular kind of attacks (in this case frontrunning) reducing the risks people make this mistake again. Thus, from both and harm reduction and transparency perspective, public disclosure seems appropriate. **Attribution** The vulnerability has been discovered by multiple people independently (myself included). From my understanding Philippe Castonguay is the first to have discovered it, but correct me if I'm wrong. &amp;#x200B; Clment Lesaege, Kleros CTO and security auditor"
4,vulnerability,ethereum,"Re-Launching The Borderless, Unkillable Crypto-Fiat Gateway, DAIHard. Enter or Exit Crypto via Any Fiat and Any Payment Method, Anywhere in the World, Without KYC. All you need is a little Dai.",165,chl924,https://www.reddit.com/r/ethereum/comments/chl924/relaunching_the_borderless_unkillable_cryptofiat/,2019-07-25 19:06:13,"Some of you might recall recall our initial facepalm failed launch about 3 months ago ([post-mortem here](URL Well, we're back--this time with an audit and some new features. We're pretty sure it should die a little harder this time ;) # The Audit After shopping around a bit in the auditor space, we decided to go with Adam Dossa--the very same Adam Dossa that actually found our launch vulnerability and responsibly disclosed it to us! You can see his report [here](URL By the way, Adam has been a gem: friendly, professional, timely, and flexible. Definitely keep him in mind if you need an audit! # (Re)Introducing DAIHard Following is an updated version of our [original launch post](URL If you've already read that, you might want to skip to the heading **What's New in v0.9.2**.) Here is a legitimate concern most of us are familiar with: &gt;To enter or exit the crypto economy, we rely on centralized exchanges such as Coinbase, which track their users, impose limits, and are tightly coupled to their jurisdiction and its banking system. And for all we know, any day now regulations could start tightening these controls further (*we've actually seen some of this play out in the two months since our first launch post). In light of this, can we say in any meaningful sense that crypto is anonymous, limtiless, borderless, immune to regulation, and (most importantly) unstoppable? To really address this concern, we need a completely decentralized gateway between fiat and crypto: something that extends the benefits of crypto to the very act of moving between the old and new economies. But the design of such a platform is far from obvious. (Bisq and localethereum come close, but as discussed under **Unkillable**, they don't quite cut it.) We believe we've found the solution. We are proud to present: ## *DAIHard v0.9.2 - Almost Definitely Not Broken This Time* If you want to jump right in, we recommend first watching [our latest usage demo](URL (7 min), then [diving in and giving it a shot](URL with a small amount of Dai. (Try it on Kovan first if mainnet is too scary!) DAIHard extends many of the promises of crypto (borderless, anonymous, limitless, unstoppable) into the exchange mechanism itself, allowing **anyone, anywhere** to bypass centralized exchanges and the control they impose. More concretely, DAIHard is a platform, run on smart contracts, for forming one-off crypto/fiat exchanges with other users, in which: * The method of fiat transfer is open-ended, but agreed upon up-front (for example: bank transfer, cash handoff, transfer of online credit, cash drop...). * You and the counterparty can communicate via end-to-end encrypted chat to coordinate the fiat transfer (i.e. communicate bank account number or reveal a cash drop location). * Crucially, in the last phase, the Seller can choose to **burn the Dai** instead of releasing it to the Buyer (but he can't get it back). This *credible threat of burn* is what makes the platform reliable in the absence of a centralized group of arbitrators or moderators. For more on this see the [DAIHard Game Theory](URL medium article (10 min read). Again, [our latest usage demo](URL (7 min) shows this process in action. ## Two drawbacks ### You Need either xDai, or both Dai and Ether, to Use The Tool (At Least For Now) If you want to buy Dai on DAIHard, you must already have Dai--1/3 of the amount you want to purchase--to put up as a **burnable deposit**. For example, if you only have 10 Dai now, you can only commit to buying 30 Dai, and must complete that trade before using the newly bought Dai to open up a bigger offer (for up to 120 Dai that time). Most tragically of course, this means that if you don't already have some crypto, you can't use this tool to get crypto--this is why we avoid calling DAIHard an onramp specifically. This comes from the fact that both parties must have ""skin in the game"" for the game theory to work, and a smart contract can only threaten to burn crypto. We have some ideas on how to address this drawback in the not-too-distant future, which we'll write about soon. For now it's time to launch this thing and get some users! ### Dangerous and Scary To Use In rare cases, a user may have to burn Dai and face a loss on the entire trade amount. The necessity of this ever-present risk is explained in detail in [DAIHard Game Theory](URL However, a cautious, rational user can gather information (possibly via our [subreddit](r/daihard)!) about how people have used the tool, successfully and unsuccessfully. They can then create a buy or sell offer with wisely chosen settings based on what has worked for others. Other cautious, rational users can find this offer and commit to the trade if they dare. We expect the vast majority of committed trades should involve rational, cautious users, and should therefore resolve happily. Still, inevitably there will be sloppy trades that result in burns. As the tool is used, we'll be keeping a close eye on the frequency of burns and keeping you guys updated (perhaps via a ""System Status"" utility similar to the one found on [MakerDao's explorer](URL In the end, though, we expect the risk in using DAIHard to be comparable to the risk of using any exchange or DNM: ever-present but low enough for the platform to be useful as whole. So, while DAIHard will never shut down and can't perform an exit scam, the bad news is it's not *risk-free*. Users will have to approach DAIhard with the same level of caution they would with any new exchange (albeit for different reasons and with a different approach). So what's the good news? ## The Good News While these drawbacks are significant, they enable some remarkable features that no other crypto/fiat exchange mechanism can boast. ### Unkillable We are aware of no other crypto/fiat exchange platform that is truly unkillable. Bisq and localethereum come close, but both rely on centralized processes of arbitration. This means their fraud-and-scam-prevention system can be sued, jailed, or otherwise harrassed--and if that part stops working, it doesn't matter how decentralized the rest of the system was. DAIHard, in contrast, gives the users the power to police and punish each other, via the aforementioned credible threat of burn. This is simple game theory, and the rules of this game are etched permanently into the DAIHard Factory and Trade contract code: impervious to litigation, regulation, and political pressure. This Factory contract has no owner and no suicide or pause code. It cannot be stopped by us or anyone else. Like [Toastycoin](URL this thing was immortal the moment it was deployed (even more immortal than RadarRelay, for example, which does rely on an ownership role). Both DAIHard and Toastycoin (and probably whatever we build next) will last for as long as a single Ethereum node continues mining, and it will remain easy to use as long as someone can find the HTML/JS front-end and a web3 wallet. (The HTML/JS front-end (built in Elm, by the way, with the lovely [elm-ethereum](URL is currently hosted on Github pages, which is centralized--but even if Github takes down the page and deletes the code, it's a minor step to get the page hosted on IPFS, something that is on our near-term roadmap in any case) ### No KYC, No Limits It's smart contracts all the way down, so DAIHard never asks any nosy questions--if you have Metamask or some other web3 wallet installed and set up, with some ETH and Dai (or just xDai), you can immediately open or commit to a trade. You don't even need a username! (In fact, we're so inclusive, even machines are allowed--no CAPTCHA here!) You're limited only by the collateral you put up, so if you have 10,000 Dai you could open up a buy offer for 30,000 Dai (or a sell offer for 10,000 Dai) right now. We do *reccommend* trying the tool out first with a small amount of Dai... But we're not your mom! Do what you want! ### Borderless It simply doesn't matter where you are, because DAIHard doesn't need to interface with any particular jurisdiction or payment system to work. DIAHard works by incentivizing *people* (or robots?) to navigate the particular real-world hurdles of bank transfers, cash drops, or other fiat transfer methods. These incentives work whether you're in America, Zimbabwe, or the Atlantic; they work whether the fiat is USD, EUR, ZAR, seashells, or Rai Stones; and they work whether your counterparty is a human, an organization, a script, or a particularly intelligent dog with Internet access. ### Any Fiat Type, and Highly Customizeable Here are some examples of the types of trades you might create or find on DAIHard. * Sell 5 xDai for $5 USD, sent via TransferWise. * Sell 200 Dai for $180 USD, granted they bring the cash to you by tomorrow afternoon in Central Park, NYC. * Buy 20 Dai with a $30 gift card for Amazon AWS that you were never going to use. * Sell 20 Dai in exchange for a $20 Steam game. * While in Vietnam, sell 200 Dai to someone for 180 anytime in the next two weeks, provided they deposit it into your German bank account. * While in Germany, sell 20 Dai to someone in exchange for them refilling your pre-paid Vietnamese phone plan. * Buy 30 Dai for 8,000 ZWD, which you deliver anonymously by cash drop in Hume Park, Bulawayo, sometime within the next month. (If there's one place that could use unstoppable access to crypto, [it's Zimbabwe](URL and [you don't need to take our word for it](URL * Buy 500 Dai for $550 via PayPal, but wait 3 weeks for before the Dai is released (so the paypal transaction can't be reversed). As the DAIHard community grows, users will doubtless find much more creative ways to use the system, and we will discover together which types of trades are reliable and which are more risky. Because users can set their own prices and phase timeout settings, we expect the risky trades to charge a premium or have longer time windows, while the reliable ones rapidly multiply at close to a 1:1 price ratio, with quick turnaround times. ## Extensible (with profit) by Third Parties Not satisfied with our interface? Do you have some nifty idea for how to display and organize user reputation? Or maybe some idea for how trades could be chained togeher? Maybe you'd like to design a notification system for DAIHard? Maybe you just want a different color scheme! Well, you won't need our permission to do any of this. Any tool that watches the same Factory contract will share the pool of trades, regardless of which tool actually creates the trade. This means we don't even have to fight over network effects! And if you look closely at our fee structure, you might notice that only half of the 1% DAIHard fee is ""hardcoded"" into the Factory contract. The other half is set and charged by our interface. What does this mean for you? If you go out and make a better interface, you can essentially replace half of our 1% fee with your own fee--it's up to you whether it's smaller or larger than the replaced 0.5%. The reason for this is to explicitly welcome other developers to extend what we've built. For as long as our team is the only one improving the platform, a threat to us is a threat to future upgrades. But if others begin extending the DAIHard platform too, then DAIHard will not only be unstoppable *as it is today*, but also *grow* unstoppably. ## (For Real This Time) This Is a Big Fucking Deal DAIHard is a turning point in crypto and a breakthrough in decentralized markets, and is an irreversible augmentation of the Ethereum platform. What we've built is a gateway to crypto completely devoid of centralized components--rendering entry and exit to crypto unkillable, flexible, borderless, and private. Centralized exchanges, and the control they impose, can now be bypassed by anyone with Dai and a web3 wallet. ## What's New in v0.9.2 There have been many changes made since our first failed launch, but there are two rather important ones: xDai support and reputation tools. ### xDai support DAIHard is now operational on xDai, a sidechain whose native token (xDai) is pegged to the Dai (and therefore $1). Add the xDai network to your Metamask (or just install Nifty Wallet), then switch to the xDai network in your wallet, to try it out. xDai has some pretty incredible benefits, compared to vanilla Ethereum: - Price: A single DAIHard trade costs on the order of $0.01 to run start-to-finish, rather than the accumulated $2.40 you'll spend on vanilla Ethereum. - Speed: Trade actions mine much faster, and don't require ERC20 'approve' transactions, making the whole process way snappier. - Gas priced in xDai: the main benefit here is that you only need one token (xDai) rather than two (Dai and Eth). Also, it's just nice having the gas cost expressed in (essentially) USD! ### Reputation tools We now have a few reputation tools. First, on any open trade, there is a widget showing the number of releases, aborts, and burns the given address has been involved in as that role (buyer or seller). Clicking on this expands the widget to show more detailed information, and also provides a link to a page that lists each trade this user has been or is involved in. ## What's next? We have tons of ideas on how to improve the product--too many, in fact, to commit to any before we get a good chunk of user feedback. Here are some of our favorite ideas: #### Near-Term, Smaller Features 1. Lots of usability improvements. 2. A ""System Status"" utility similar to the one found on [MakerDao's explorer](URL 3. Marketplace / My Trades rework. 4. A ""QuickTrade"" page, offering Trade Templates as an alternative to the current Create Offer page. #### Big Exciting Features 1. Bootstrapping people with no DAI via other mechanisms and community outreach. 2. Partial commits to trades. eg. Place a 10,000 DAI trade and allow it to be picked up in blocks larger than 500 DAI at a time. 3. More chains, get this thing working on Bitcoin via Rootstock, on Ethereum Classic and Binance Chain. #### Stay Informed! A lot of the above features will be prioritized more clearly as we get user feedback, and we will be posting fairly frequent updates and articles on our info site, daihard.io. If you don't want to miss anything, note the subscribe widget and sign up!"
5,vulnerability,ethereum,Avoiding Blockchain Balkanization,6,c2icbv,https://www.reddit.com/r/ethereum/comments/c2icbv/avoiding_blockchain_balkanization/,2019-06-20 01:17:59,"[Lessons from the early Internet on why we need blockchain interoperability](URL &amp;#x200B; ""The problems of todays Web2 architecturein particular the siloing, vulnerability, and mismanagement of user dataare traceable to the deviation of the industry from early Internet values, which originally prioritized interoperability as a key to a sustainable and equitable web-connected world. At its current pace, the blockchain ecosystem is at risk of similar balkanization, where protocol interoperability is deprioritized as companies race to demonstrate their own blockchains use case quicker than their competitors. The risk is that the pressures for mainstream adoption could arrive before the Web3 infrastructure is sufficiently interoperable and secure to manifest the full vision of its original architects. Web3 could end up looking much like Web2 does today in terms of financial exclusion, information siloing, and data insecuritybut instead underwritten by a series of blockchains which by competitive design do not interoperate at the protocol level."""
6,vulnerability,ethereum,Current status of upgrades,0,bd06cz,https://www.reddit.com/r/ethereum/comments/bd06cz/current_status_of_upgrades/,2019-04-14 16:48:28,"Sorry if I'm asking a dumb question, but what is the current status of the planned upgrades to Ethereum? Has Constantinople now turned into Istanbul? I read an article which stated: ""In order to solve the vulnerability issue, the team decided to have two hardforks, Constantinople and St. Petersburg, both of which would occur on the same block. This first upgrade would implement all five proposed protocols and the second upgrade would either disable the EIP paving way for the vulnerability or downgrade the update. This was later declared successful by the members of the Foundation, with the hardfork taking place on February 28, 2019."" Source: URL What is a good resource for keeping track of the updates / forks? Thanks for your help!"
7,vulnerability,ethereum,"DAIHard use case demo: I'm trying to pay for an airbnb but my credit cards are locked. Through DAIHard, I'm offering 35 DAI to anyone who can pay for my $30 airbnb quickly. The offer expires in 3 hours and requires a 10 DAI deposit.",44,bimwem,https://www.reddit.com/r/ethereum/comments/bimwem/daihard_use_case_demo_im_trying_to_pay_for_an/,2019-04-29 17:57:33,"[Here's the trade](URL Make sure Metamask is unlocked, and if it's not on mainnet, switch it to mainnet and refresh. Click on each phase to see more on how exactly a DAIHard Trade works. This is relatively urgent, so I've chosen rather small phase windows and included a generous margin. In particular note that the payment window is only 1 hour, which means that once you commit, we will have to coordinate quickly to get the airbnb ordered and move the trade to the Judgement phase where I can release the DAI. *** The [post-mortem](URL was the last thing we've posted on DAIHard. We've since addressed that vulnerability, but have not arrived at a point where we're ready to re-launch yet, with PR and pizzaz, so please use with caution. However, the tool is live and (probably!) unhackable. And I'm in a bind--I need to pay for an airbnb in Vietnam, but my credit cards are locked, my banks are closed, and I don't have a phone number to call them in any case. So I'm giving DAIHard a shot, and hopefully this post will get the visibility needed to attract a buyer (in this case, ""buying"" my DAI with an airbnb reservation). If someone commits and helps me, I will have opened a portal from crypto to the real world, and routed around the credit card system that is currently failing me, ending up with a product that didn't need to interface with crypto at all. That would be pretty freakin cool! Fingers crossed!"
8,vulnerability,ethereum,[Dissertation/Thesis Project] Educating about Smart Contract Vulnerabilities through Gamification,5,b6k8zk,https://www.reddit.com/r/ethereum/comments/b6k8zk/dissertationthesis_project_educating_about_smart/,2019-03-29 02:34:00,"I am currently a fourth-year Ethical Hacking student doing my dissertation on how gamification/'Capture the flag' type challenges can educate developers about smart contract vulnerabilities. I have created a simple website that has 8 smart contract challenges that need to be 'hacked'. (You don't need to complete them all). Each one related to a different vulnerability or security consideration. There is also a short survey to fill out at the end. If you have some spare time, I would really appreciate your time to check it out and try out a few of the challenges. If you have any questions feel free to email me at 1500413@uad.ac.uk or post a comment here. The website can be found at: [Connor-Hughes.com](URL Thank you for your time"
9,vulnerability,ethereum,"Prediction Markets Wont Work, Here's why",18,b7itms,https://www.reddit.com/r/ethereum/comments/b7itms/prediction_markets_wont_work_heres_why/,2019-03-31 13:11:05,"**Prediction markets wont work.** &amp;#x200B; I'm not just saying this. Serious research has been done on the subject to say the exact same thing. &amp;#x200B; Because of the *know-it-all* attitude I run into with many computer scientist, which I hate. I take extra caution to make sure I don't do the same. I come to say why *prediction markets wont work* after doing a massive amount of thinking with evidence to back it up. Perhaps it'll be analogical to ripping the band-aid off. Modifying expectations for investors, and forcing the producers of such a market to make solid game theoretical modifications to such markets to provide massive value over time. I'm not saying they won't work 100%, they'll slightly work. I am saying they won't be as high impact as we think they will be. For them to reach high impact, they need to make a lot of little changes to reach major objectives. &amp;#x200B; I'll be referring to Duncan Watt's book, ***Everything Is Obvious: \*Once You Know the Answer***. He's a physicist turned sociologist, turned computer scientist. His book got me deeply into systems theory and complexity in relation to the socio-economic realm years ago. So much that I'm now focusing and staking my entire career on it, even though so far the socio-econo-physics, complexity and analytics industry hasn't yielded any productive results for the world since its inception (besides a compromise of privacy to sell things). We still haven't solved market crashes, inequality, wars between countries, global warming and massive global debt. We've provided little value so far. My goal is to at some point change that over time; to prove our worth as an industry and provide value to people using the blockchain as a medium. &amp;#x200B; The book is an easy read, and has references to why prediction markets wont work. Inside of the book he talks about common sense, and how it fails us for large scale problems. We're going to only focus on the prediction side in this piece. If I get a reasonable response for this (not necessarily a good one), I'll write more about complexity economics, social complexity and systems theory. &amp;#x200B; # Reasons Why Prediction Markets Won't Work &amp;#x200B; **1. Predicting Large Complex Systems Is Extremely Difficult** In chapter 7, between pages 161 and 171, Duncan Watts talks heavily about us making predictions on complex adaptive systems. Generally, the more complex and large the systems are, the more difficult it is to predict the events that follow. This is especially the case when you, and all others have a massive degree of information asymmetry. &amp;#x200B; Duncan Watts stated the following about complex systems: &amp;#x200B; &gt;*In complex systems, however, which comprise most of our social and economic life, the best we can hope for is to reliably estimate the probabilities with which certain kinds of events will occur. Second, common sense also demands that we ignore the many uninteresting, unimportant predictions that we could be making all the time, and focus on those outcomes that actually matter. In reality ... black swan events that we most wish we could have predicted are not really events at all, but rather shorthand descriptionsthe French Revolution, the Internet, Hurricane Katrina, the global financial crisisof what are in reality whole swaths of history. Predicting black swans is therefore doubly hopeless, because until history has played out its impossible even to know what the relevant terms are.* He doesn't mean that everything in existence is unpredictable. He does say later that there's a fine line between predictable elements and unpredictable ones. He followed with a statement: &amp;#x200B; &gt;To oversimplify somewhat, there are two kinds of events that arise in complex social systems***events that conform to some stable historical pattern, and events that do not*** ... Every year, for example, each of us may or may not be unlucky enough to catch the flu ... because seasonal influenza trends are relatively consistent from year to year, drug companies can do a reasonable job of anticipating how many flu shots they will need to ship to a given part of the world in a given month ... consumers with identical financial backgrounds may vary widely in their likelihood of *defaulting on a credit card, depending on what is going on in their lives ... credit card companies can do a surprisingly good job of predicting aggregate default rates by paying attention to a range of socioeconomic, demographic, and behavioral variables*. And *Internet* ***companies are increasingly taking advantage of the mountains of Web-browsing data generated by their users to predict the probability that a given user will click on a given search result***. &amp;#x200B; Prediction markets don't distinguish what's reasonably predictable or what's not. The larger and more abstract the event, the more likely it is we won't be able to interpret a solid prediction of what's real or not. &amp;#x200B; **2. Prediction Markets Provide Little Gain Compared to Statistical Studies** &amp;#x200B; The prospect of prediction markets are very nice. &amp;#x200B; Inside of that same chapter, Watts put some focus on prediction markets. Starting with the introduction of the idea. &gt;One increasingly popular method is to use what is called a prediction marketmeaning a market in which buyers and sellers can trade specially designed securities whose prices correspond to the predicted probability that a specific outcome will take place. - p 164 &amp;#x200B; Continuing with understanding why our sentiment of prediction markets is so high. I too get excited about the idea of them, and he stated the potential scenarios of how they would interact: &amp;#x200B; &gt;The potential of prediction markets to tap into collective wisdom has generated a tremendous amount of excitement among professional economists and policy makers alike. Imagine, for example, that a market had been set up to predict the possibility of a catastrophic failure in deep-water oil drilling in the Gulf prior to the BP disaster in April 2010. Possibly insiders like BP engineers could have participated in the market, effectively making public what they knew about the risks their firms were taking. Possibly then regulators would have had a more accurate assessment of those risks and been more inclined to crack down on the oil industry before a disaster took place. Possibly the disaster could have been averted. &amp;#x200B; However, he and many others have done studies in prediction markets to test if this can accurately happen. &amp;#x200B; Watts tested for the accuracy of markets compared to statistical mechanics: &amp;#x200B; &gt;*little attention has been paid to evaluating the relative performance of different methods, so nobody really knows for sure. To try to settle the matter, my colleagues at Yahoo! Research and I conducted a systematic comparison of several different prediction methods, where the predictions in question were the outcomes of NFL football games. To begin with, for each of the fourteen to sixteen games taking place each weekend over the course of the 2008 season, we conducted a poll in which we asked respondents to state the probability that the home team would win as well as their confidence in their prediction. We also collected similar data from the website Probability Sports, an online contest where participants can win cash prizes by predicting the outcomes of sporting events. Next, we compared the performance of these two polls with the Vegas sports betting marketone of the oldest and most popular betting markets in the worldas well as with another prediction market, TradeSports. And finally, we compared the prediction of both the markets and the polls against two simple statistical probability that home teams winwhich they do 58 percent of the timewhile the second model also factored in the recent win-loss records of the two teams in question. In this way, we set up a six-way comparison between different prediction methodstwo statistical models, two markets, and two polls.* &amp;#x200B; ***The results:*** &gt;*Given how different these methods were, what we found was surprising:* ***All of them performed about the same.*** *To be fair,* ***the two prediction markets performed a little better than the other methods***\*, which is consistent with the theoretical argument above. But the very best performing methodthe Las Vegas Market**was only about 3 percentage points more accurate than the worst-performing method**, which was the model that always predicted the home team would win with 58 percent probability.\* &amp;#x200B; He's a reasonable scientist. When he crafted a result, he tested it to see if he was wrong using other data-sets. We generally call it ***falsification***. It's the process of testing a hypothesis for inaccuracies. Doing this in the social realm is very hard, yet also requires the same amount of rigor. He followed it with another set of studies. &amp;#x200B; The first talked to the prediction market researchers: &gt;*When we first told some prediction market researchers about this result, their reaction was that it must reflect some special feature of football ... Football games, in other words, have a lot of randomness built into themarguably, in fact, thats what makes them exciting. In order to be persuaded, our colleagues insisted, we would have to find the same result in some other domain for which the signal-to-noise ratio might be considerably higher than it is in the specific case of football.* &amp;#x200B; So they tested for baseball. This was their results for that. &gt;*We compared the predictions of the Las Vegas sports betting markets over nearly twenty thousand Major League baseball games played from 1999 to 2006 with a simple statistical model based again on home-team advantage and the recent win-loss records of the two teams. This time,* ***the difference between the two was even smallerin fact, the performance of the market and the model were indistinguishable****. In spite of all the statistics and analysis, in other words, and in spite of the absence of meaningful salary caps in baseball and the resulting concentration of superstar players on teams like the New York Yankees and Boston Red Sox, the outcomes of baseball games are even closer to random events than football games. - p170* &amp;#x200B; **3. Some People Want to See The World Burn** This is the final reason. In the Dark Knight, Alfred had a power speech directly to Bruce Wayne. He made the statement *""some people just want to watch the world burn"".* This is a problem generally faced with every game theoretical problem. It faces characters like the Joker in the Batman, Hisoka in Hunter X Hunter. The characters that just destroy for the fun of it. &amp;#x200B; Duncan Watts actually explored the concept. He states the following: &amp;#x200B; &gt;*... it exposed a potential vulnerability of the theory, which assumes that rational traders will not deliberately lose money. The problem is that if the goal of a participant is instead to manipulate perceptions of people outside the market (like the media) and if the amounts involved are relatively small (tens of thousands of dollars, say, compared with the tens of millions of dollars spent on TV advertising), then they may not care about losing money, in which case its no longer clear what signal the market is sending.* &amp;#x200B; Prediction markets forget about the idea of reflexivity, and the desire just to destroy stuff. Ultimately there's no protections against this. Even if they were to find enough active participants, you would have to worry about somebody with $1-2 million dollars just to influence somebody's perceptions on small, yet significant ideas, it could wreck havoc on people using such markets to plan. Especially if those plans are leveraged. It's a problem of opportunity cost. Generally, if I earn more for destroying your system from another, even if I earn indirectly, I'll just do it because why not? &amp;#x200B; It's essentially the same problem behind market manipulation. People would be fine destroying the market if they get some indirect benefit from it. George Soros did it when he broke the Bank of England, some unknown figures did it when they tanked the market below $6000. It's easy. There's no defense mechanism against it in international markets, where anybody with a computer can tap in and blow things up. &amp;#x200B; I recall seeing a recent article by somebody on this subreddit. He was putting together a solution to reduce the uncooperative games people may want to play and convert them into cooperative games using staking as a means to limit options. It works to an extent, but it runs the problem of destructive tendencies and opportunity cost. It also requires identity, which I doubt people will subscribe to if they don't have to. &amp;#x200B; &amp;#x200B; **That's it** So that concludes why I reason prediction markets wont work. It's mostly an analysis. I infer, that just because you can't use them in one way, doesn't mean you can use them in others. I would say that it's unreasonable to believe that's the case. The predictions are just too big in range and not heavily well defined. &amp;#x200B; Again, if I get feedback to this I'll post on other topics like . &amp;#x200B; **Sources and Bits of Information:** 1. Ian Ayres (author of Supercrunchers ) calls the relative performance of prediction markets one of the great unresolved questions of predictive analytics ( [URL ). 2. To be precise, we had different amounts of data for each of the methodsfor example, our own polls were conducted over only the 20082009 season, whereas we had nearly thirty years of Vegas data, and TradeSports predictions ended in November 2008, when it was shut downso we couldnt compare all six methods over any given time interval. Nevertheless, for any given interval, we were always able to compare multiple methods. See Goel, Reeves, et al. (2010) for details."
10,vulnerability,ethereum,Create2 EIP vulnerability questions,1,aosaly,https://www.reddit.com/r/ethereum/comments/aosaly/create2_eip_vulnerability_questions/,2019-02-10 00:24:55,"I am not very technically inclined with the inner workings of Ethereum, but from my understanding of reading the AllCoreDevs Gitter and the associated Ethereum Magicians topic that was created ([URL the create2 EIP contains a vulnerability that allows the owner of a contract with the self-destruct function to replace the contract with an arbitrary new contract. I have a few questions regarding this issue which I hope can be answered. &amp;#x200B; 1) Is my understanding of this issue correct? 2) You shouldn't send funds to a contract containing the self-destruct function anyway, so as long as contracts don't contain that function (which proper documentation and best-practices can make sure of), this vulnerability should be moot, correct? 3) Are there any scenario's thinkable in which a pre-constantinople contract would be safe to use (despite containing a self-destruct function), but would no longer be safe with this vulnerability in place? 4) How does this affect old contracts with self-destruct functionality? Would this vulnerability allow old contracts that contain(ed) the self-destruct functionality to be replaced? In particular, could this allow the destroyed parity multisign contract to be replaced with a new contract, effectively freeing up those funds again? &amp;#x200B; Thank you very much for helping me find the answers to me questions!"
11,vulnerability,ethereum,"Are we giving up the ability to use `selfdestruct`, `delegatecall`, and `callcode` just get get `create2`?",1,aqpsei,https://www.reddit.com/r/ethereum/comments/aqpsei/are_we_giving_up_the_ability_to_use_selfdestruct/,2019-02-15 09:53:20,"Where are we at this point on conversations around the \`create2\` vulnerability? I've seen some discussions around not being able to trust contracts that use \`selfdestruct\`, \`delegatecall\`, or \`callcode\`. Are we considering giving up the ability for contracts to use these just for the benefit of predictable contract addresses?"
12,vulnerability,ethereum,"Are we giving up the ability to use `selfdestruct`, `delegatecall`, and `callcode` in order to get `create2`?",1,aqqvg9,https://www.reddit.com/r/ethereum/comments/aqqvg9/are_we_giving_up_the_ability_to_use_selfdestruct/,2019-02-15 11:44:11,"Where are we at this point on conversations around the `create2` vulnerability? I've seen some discussions around not being able to trust contracts that use `selfdestruct`, `delegatecall`, or `callcode`. Are we considering giving up the ability for contracts to use these just for the benefit of predictable contract addresses?"
13,vulnerability,ethereum,Rewarding discovering and publishing exploits/vulnerabilities in Ethereum and its upgrades,1,ahdy4h,https://www.reddit.com/r/ethereum/comments/ahdy4h/rewarding_discovering_and_publishing/,2019-01-19 06:19:49," I think that a fund (smart contract maybe) for funding a rewards for people that find exploits in ethereum and upcoming upgrades should be established , we need much more funding and incentive for people to find and reveal those flaws , it is in our best interest , this is going too slow and maybe such thing would speed things up and get more people to work , those rewards in tens of thousands to couple of hundred thousand of dolars are just too small Maybe distribution of votes and contributions in eth would allocate appropriate amount to each contribution in discovered vulnerability , i think giving incentive is always better than counting on a good will , of course god bless those people doing it now just for glory and thanks Is there a possibility to incorporate such fund into ethereum so it is funded from using a network itself ? question probably is how could rewards be distributed and credited with trust but i guess this thing called blockchain is good for a thing called consensus &amp;#x200B;"
14,vulnerability,ethereum,Why ETH need to be ASIC resistant and adopt ProgPOW(or a different algo with a similar end goal),1,alqolj,https://www.reddit.com/r/ethereum/comments/alqolj/why_eth_need_to_be_asic_resistant_and_adopt/,2019-02-01 02:40:46,"Ok, disclaimer first: i am an hobbyist GPU miner and i do it mainly to support the network(currently mining at a loss) but i can't say that i am entirely not biased. This post is meant to be a collection of thoughts and opinions on why ETH need to be ASIC resistant and why the adoption of a ProgPOW(or a similar algo if a technically superior alternative is proposed in the near future) is very desirable to keep the network secure and decentralized. 1) GPU manufacturers are publicly traded companies listed on major US stock exchanges and they have to abide to a much stricter code of conduct and regulatory requirements than Chinese HW manufacturers.They have to disclore a substantial amount of financial data and while they may not provide a granular break down of revenue streams,SKUs sold etc,specially related to products used to mine cryptocurrencies it's a level of transparency much higher. 2) While GPU manufacturers do sell reference cards and a few 1st party offerings directly targeting consumers the vast majority of sales are conducted through a wide variety of OEMs, system integrators and well established sales channels.This creates a thriving and diverse ecosystem of hw vendors and reduces the chances of anti competitive/anti-consumer behavior limiting the opportunity for cartel like structures to form since there a lot of entities competing in the space. 3)the % of total revenues represented by cryptocurrency mining related sales is not insignificant for AMD and Nvidia but still a lot less than for ASICS manufacturers since it's quite literally their only *Raison d'tre* . ASICS manufacturers have every incentive to guarantee their continued existence . 4) Significantly reduced barrier to entry.It's much easier for a newcomer intent on mining to support the network to get up and running quickly and without much prior research just by hopping to the local PC equipment brick &amp;mortar store down the street and buying a GPU of his choice.This is not the case with ASICS are there could be significant logistic obstancles in obtaining a unit,shipping from SEA,Customs,long lead times,MOQs etc. This means a more distributed mining ecosystem. 5) There is [some anecdotal evidence](URL that incumbent Chinese ASIC manufacturers do engage in anti competitive behavior to prevent new entities from entering the market either by applying pressure on foundries or just by leveraging their massive first mover advantage,CAPEX and well established economies of scale. 6) Security. having a fragmented and diverse HW ecosystem is very desirable when providing security for a blockchain network imho. With GPU mining there are a myriad of possible hw configurations and there is vast choice regarding not only the actual GPUs but all the ancillary components like the motherboards,NICs, OS and mining software.This is in contrast to ASICS which are generally self contained units sharing a lot of components and with a smilar sw stack,generally speaking some flavor of Embedded Linux.In case of a vulnerability being found affecting commonly used mining hw(either introduced intentionally or by chance) an heterogeneous mining infrastructure would be much more resilient since the vuln even if exploited in the wild would only affect a small percentual of the global hashrate. 7) Geopolitical risk.A lot of ASICS manufacturers (Bitmain,Linzhi,Innosilicon etc) are,for a series of perfectly reasonable business advantages offered by the country, located in China. Better access to foundries,huge pool of talented silicon engineers,advanced infrastructure to assemble the products,cheap labor etc are attractive for a firm manufacturing mining equipment.Unfortunately this gives a lot of leverage and the ability to the chinese government to exercise undue influence and potentially commandeer a huge swath of the hashpower securing many blockchain including ethereum. Yes i know doing so in an overt manner would have severe consequences,lead to financial losses and ultimately generate a lot of negative political will towards china.The ability for them to overtly or covertly compromise hw,commandeer hashrate or simply instruct companies to artificially limit supply and discriminate towards certain foreign buyers etc is still present and a threat that should not be understated. 8) GPUs being general purpose hw is a beneficial property to have in case decline in price,introduction of more efficient hw etc since network participants who find it no longer profitable to mine are able to resell/repurpose their HW without incurring an unbearable depreciation or total write off of their initial investment.This leads to GPU miners being a lower point of friction and less hostile towards the adoption of PoS which is the ultimate goal for ETH. People will undoubtedly argue that ultimately ASICS should not be viewed as undesirable since they do provide increased hashpower thus making the network more secure against 51% attacks but i would argue that the distribution of the hashpower ,diversity of the mining ecosystem and the standards to which the companies supplying the hw are called to adhere to are equally important. I absolutely agree that PoS is the ultimate goal and we should strive to make the trannsition as smooth as possible and give the researchers and implementers currently working on it a figting chance while trying to keep the network as decentralized as possible in the meantime. I view any PoW change just as stopgap solution viable in the short to medium terms( \~ 2 years) until PoS is here. I do not claim ASICs specifically targeting ProgPOW will never emerge(they probably will) but if they come at the cost of significant capital expenditures,on a much longer timeline and with a reduced power efficiency advantage against GPUs compared to current offerings then the switch will have been worth it and it will have served its purpose. Criticism, supporting arguments and dissenting opinions welcome."
15,vulnerability,ethereum,Smart Contract Development Academy with Ralph Pichler (who co-discovered the Ethereum fork vulnerability),1,ao34q9,https://www.reddit.com/r/ethereum/comments/ao34q9/smart_contract_development_academy_with_ralph/,2019-02-07 23:14:10,"Hey everyone! The RIAT Blockchain Academy in Vienna is once again offering courses on Smart Contract Development with Ethereum. The next dates are: **February 28th  March 3rd** **April 04th - April 07th** Both **@RIAT, Vienna, Austria** This 4-day course teaches the basics of smart contract development on the Ethereum platform using Solidity and the Truffle Framework. It covers the full workflow of developing, testing and deploying contracts as well as interacting with them afterwards. In addition you will learn about common contract patterns and potential security issues. For more infos: [URL"
16,vulnerability,ethereum,Port 8545 scans tripled in the last weeks - Geth vulnerability is still allowing hackers to steal ETH,1,a8ajzp,https://www.reddit.com/r/ethereum/comments/a8ajzp/port_8545_scans_tripled_in_the_last_weeks_geth/,2018-12-22 01:35:33,"If you're mining ether or using anything that has dependency on the Geth interface, make sure it's configured right, some guy stole near 45k ether with barely any effort because of this. more detailed report on that: [URL"
17,vulnerability,ethereum,Token Snapshots using Merkle Proofs,1,a1hljw,https://www.reddit.com/r/ethereum/comments/a1hljw/token_snapshots_using_merkle_proofs/,2018-11-30 01:04:49,"If an ERC20 contract has a vulnerability, we want to redeploy the contract but hence (in most cases) also have to copy the entire storage to this new address. Most implementations simply upload all accounts and their associated balances to the chain, but this costs a lot of gas and many accounts will be untouched forever since users forgot about their tokens or they are dust amounts of tokens. I created a proof of concept using Merkle Trees. A new ERC20 contract is uploaded to the chain with a certain Merkle Root. Users can now prove that they had an address associated with a balance by uploading the Merkle Proof to the chain. This means that: 1) users pay for gas themselves (if this is ethical, that is debatable) 2) only users who wish to get their tokens back have the incentive to go on-chain and 3) users can forever claim their tokens, the only requirement is connecting to an Ethereum archive node. I will link an article and code soon because my posts get removed all the time."
18,vulnerability,ethereum,Token snapshots using hash trees,1,a1hs51,https://www.reddit.com/r/ethereum/comments/a1hs51/token_snapshots_using_hash_trees/,2018-11-30 01:28:01,"If an token contract has a vulnerability, we want to redeploy the contract but hence (in most cases) also have to copy the entire storage to this new address. Most implementations simply upload all accounts and their associated balances to the chain, but this costs a lot of gas and many accounts will be untouched forever since users forgot about their tokens or they are dust amounts of tokens. I created a proof of concept using Merkle Trees. A new token contract is uploaded to the chain with a certain Merkle Root. Users can now prove that they had an address associated with a balance by uploading the Merkle Proof to the chain. This means that: 1) users pay for gas themselves (if this is ethical, that is debatable) 2) only users who wish to get their tokens back have the incentive to go on-chain and 3) users can forever claim their tokens, the only requirement is connecting to an Ethereum archive node. Currently the support is for ERC 20 only but it can easily be extended. "
19,vulnerability,ethereum,Smart Contract Vulnerabilities - AMLT report,4,9elwiy,https://www.reddit.com/r/ethereum/comments/9elwiy/smart_contract_vulnerabilities_amlt_report/,2018-09-10 20:37:06,"AMLT has released another report on crypto frauds. This time they dealth with vulnerable smart contracts like Smart Mesh, which made spending new tokens possible to anyone using the vulnerability&gt; More here: [URL URL &amp;#x200B;"
20,vulnerability,ethereum,Buglab - Ethereum Base blockchain cybersecurity penetration testing,1,92g8no,https://www.reddit.com/r/ethereum/comments/92g8no/buglab_ethereum_base_blockchain_cybersecurity/,2018-07-28 06:50:25,"Security issue has been a major concern all over the universe both in business and finance, healthcare, information technology and all other sectors around the globe. Nowadays, where we manage and carry out almost all our lives activities digitally, there has been a persistent call by security agencies for security awareness because of an increase and continuous attacks on digital assets and information which put many agencies and companies at an unimaginable lose of over millions of dollars. What is cybersecurity Cybersecurity is the technologies, processes and controls designed to protect Internet connected systems, including hardware, software and data from cyber attack. Cyber attack is usually aimed at accessing, changing or destroying sensitive information; extorting money or interrupting business processes. In July 2017 Equifax witness one of the biggest security breach that compromise personal data of about 145 million people. Yahoo also witness this great cyber attack around 2013 where over 1 billion yahoo account were hacked. This massive security breaches caused by cyber attack have been witness in different businesses, companies and agencies in various sectors. The hackers make use of different methods like spreading of malware, phishing and social engineering. Research have shown that by the year 2021, the cyber attack damage cost to hit 6 trillion annually up from 3 trillion in 2015. As at 2017 the global ramsonware damage was predicted to cost over 5 billion which was expected to increase to 11.5 billion in 2019. Cyber attacks are one of the greatest challenges or threat to every company and as a billionaire businessman Warren buffet once said ""cyber attacks are the number one problem with mankind, even worse than nuclear weapons"" it's a challenge that needs optimum attention and BUGLAB have taken up the challenge to help companies drastically mitigate and prevent the occurrence of cyber attacks by establishing a buglab platform that offers a competitive, incentivized challenges know as a contest to a group of certified independent information security consultants. Greater need for the cybersecurity service platform such as buglab arises due to the huge financial resources and intensive time involved in fighting and preventing cyber attacks which most companies especially small and medium enterprises lack. Buglab offers ethereum blockchain Based cybersecurity penetration test platform with the solution to cyber attacks which is easy, accessible and cost efficient both to small and big business enterprises unlike traditional means of cyber security services. Traditional methods of fighting cyber attacks and their associated problems Below are some of the methods employed by the traditional cybersecurity service organisations. Penetration test carry out by the cybersecurity organisation. Traditional firms charged in accordance with the number of hours spent conducting the Penetration test. Cyber security firms assigned only one or two pentesters to carry out the test thereby limiting the scope of service been rendered. Bug bounty challenge. Cybersecurity consulting firms charged per number of security breaches or vulnerability discovered, at the end the company may end up paying for things that are not relevant to them or their customers. Bug bounty program. The company is required to pay for each security issue detected in their system, which at the end the company may not be able to take care of the charges. This method is not cost efficient and not feasible with small and medium enterprises. Buglab platform solutions Buglab platform brings together companies and organisations that needs cybersecurity services and the group of certified cybersecurity penetration test experts, where penetration testers are incentivized with rewards for detecting vulnerability and giving possible remedies which will be ranked according to the level of severity and importance. It's organised as a contest where the time taken to discover vulnerability and the uniqueness of the vulnerability are been considered and prioritise. More details on the Website URL Important features of buglab platform Buglab platform uses two major instruments ""Contest and Vigilante Protocol"" in helping companies to discover, and fix vulnerabilities and in preventing cyber attacks. Below are the main features of buglab platform which are segmented into various sections according to the organisational needs. public test. The whole community of pentesters receives an invite to particiate in a contest once it's launched. private test. The platform provides an option for the companies to choose from the community some pentesters to carry out the challenge. selection filters. The platform made this option available to the companies to enable them narrow down their search in selecting pentesters. Triage system. The system sort vulnerability issues submitted by pentesters and report the relevant submissions to the company. Report. The security issues discovered during the contest are reported to the company. client managed. The company have the option of choosing from the three different types of contest management (Basic, Pro, and Enterprise). Mediation. If the company choose to manage the contest themselves, pentesters can ask for mediation from the buglab. Leaderboard. The pentesters are ranked on dashboard according to their input or vulnerability cases discovered in the contest.chat. After reporting the detected vulnerabilities, the company engage in discussion with the pentesters on how to fix the discovered vulnerabilities. Fix companion. The buglab platform will confirm if the vulnerabilities detected are correctly fixed. Real time reporting. As the contest is going on, the company is allowed to monitor the progress and always in contact with the pentesters for possible recommendations for discovered vulnerabilities. Money back guarantee. If at the end of the contest, the pentesters couldn't detect any vulnerabilities, 90% of the money paid for the contest will be refunded back automatically by the buglab smart contract while 10% will be retained in the vigilante protocol reserve which is not refundable. Vigilante Protocol This is a global program in buglab platform established with the aim of helping companies who are not part of the buglab platform to detect and report vulnerabilities by whitehats which they may not be aware of. Main features of vigilante Protocol computer Emergency Response Teams (CERT) and Computer Security Incident Response Teams (CSIRT) partnership: Buglab will corporate with CSIRT and CERT so as to validate the whitehat vulnerability findings and help the companies in fixing them. Automatic reward: once the whitehat detect and share vulnerability and it's verified, the whitehat will be automatically rewarded through the smart contract. Entrusted model: with the involvement of buglab and CERT as middlemen, both whitehats and the companies feel secure. Token and ICO information Token code_____________BGL Total supply____________425,000,000 Tokens for sale_________170,000,000 Softcap_________________6,000,000 Hardcap________________$20,000,000 Token price_____________0.15 Blockchain______________Ethereum Erc20 Presale start on 30th June and end on 4th August 2018 Main sale start on 11th August and end on September Token sale Bonus Presale_____________________25% Presale Minimum contribution $3500 worth of ETH Public sale Tier 1 first 24 hours_________ 20% Tier 2 week 1_______________15% Tier 3 week 2________________10% Tier 4 week 3________________ 0% Fund Allocation Development &amp; staffing________45% Marketing_____________________ 22% Business development__________16% Research &amp; development_______ 12% Legal &amp; Account _________________5% Token Allocation Token for sale ___________________40% Vigilante Protocol reserve________20% Team_____________________________ 10% Future product development______10% Marketing_________________________10% Advisors____________________________7% Community campaign_______________2% Buglab transaction reserve__________1% For more details about the project please refer to the official project Website URL Useful links Website URL Bounty thread URL Telegram chat URL Written by ogbedi James Bitcointalk username : valentyzer Bitcointalk profile link: URL "
21,vulnerability,ethereum,Discussion with lecturer,2,8s6fjl,https://www.reddit.com/r/ethereum/comments/8s6fjl/discussion_with_lecturer/,2018-06-19 15:41:01,"Hey guys! I'm leading a discussion (via Mail) with one of my lecturers at university. He is clearly a fan of the traditional monetary system. We already spoke about consensus and other different topics. Now we're talking about security in regards to hacking attacks. He now mentioned the vulnerability of processor CPU's as an attacking point for hackers to get private keys. I don't have enough background tech-knowledge to answer this point. That's why I thoght: Why not use the decentralized database that build up around crypto?! I'm asking you guys! a) What do you think about the CPU aspect? b) What solution do you see in the future, that will make Crypto accessible for everyone? Focussing the point of soft- and hardware security for the users (and not getting hacked). Thanks guys!"
22,vulnerability,ethereum,[Coinness News] Slow Mist Discloses Details and Fixes of Fake Deposits Vulnerability Against Ethereum Tokens.,0,8xvtlg,https://www.reddit.com/r/ethereum/comments/8xvtlg/coinness_news_slow_mist_discloses_details_and/,2018-07-11 12:41:03,"According to the Slow Mist team, the 'fake deposits vulnerability against Ethereum tokens' has a wide impact upon relevant centralized exchanges and wallets as well as token contracts. As far as the team knows, there are at least 3,619 token contracts with vulnerability risks of fake deposits, including popular tokens. Therefore, it's never a loophole, but a true attack now! The loose coding method is a security weakness that can lead to specific security problems. Attackers use token contracts with this loophole to send out deposit requests to centralized exchanges and wallets, which may fall into the snare if they allow deposits by confirming that ""TxReceipt Status is Success."" In order to fix this vulnerability, Slow Mist suggests that apart from the transaction status check, exchanges and wallets double check balance of the addresses in question through Event Log. **(Coinness: Real-time global crypto news APP)**"
23,vulnerability,ethereum,Slow Mist Discloses Details and Fixes of Fake Deposits Vulnerability Against Ethereum Tokens,0,8xw1ie,https://www.reddit.com/r/ethereum/comments/8xw1ie/slow_mist_discloses_details_and_fixes_of_fake/,2018-07-11 13:12:35,"According to the Slow Mist team, the 'fake deposits vulnerability against Ethereum tokens' has a wide impact upon relevant centralized exchanges and wallets as well as token contracts. As far as the team knows, there are at least 3,619 token contracts with vulnerability risks of fake deposits, including popular tokens. Therefore, it's never a loophole, but a true attack now! The loose coding method is a security weakness that can lead to specific security problems. Attackers use token contracts with this loophole to send out deposit requests to centralized exchanges and wallets, which may fall into the snare if they allow deposits by confirming that ""TxReceipt Status is Success."" In order to fix this vulnerability, Slow Mist suggests that apart from the transaction status check, exchanges and wallets double check balance of the addresses in question through Event Log. **(Coinness: Real-time global crypto news app)**"
24,vulnerability,ethereum,You might want to look into this possible vulnerability of some ECR20 contract code,2,8dm9c4,https://www.reddit.com/r/ethereum/comments/8dm9c4/you_might_want_to_look_into_this_possible/,2018-04-20 19:18:45,URL please read all the comments in the thread above.
25,vulnerability,ethereum,Plasma Transaction Commitment Vulnerability?,32,877uqk,https://www.reddit.com/r/ethereum/comments/877uqk/plasma_transaction_commitment_vulnerability/,2018-03-26 20:40:14,"I think I can see an issue with the block withholding mitigation / withdrawal mechanism I wanted to discuss. From the Plasma whitepaper: ""...it is impossible to detect on the root blockchain whether a block is being withheld (either the user can assert that they never received the blocks, or the Plasma chain can assert that the user refuses to recognize that the block is available and is lying)... Instead, Plasma presumes that if a user believes that the Plasma blockchain is adversarially withholding blocks and may impact the ability to enforce state transitions in the future, then one simply should exit from this Plasma chain to another as quickly as possible. "" So am I right in thinking that a bad actor can pretend not to have recieved a block, and that this cannot be validated by the mainchain, and by withdrawing they can then rollback all transactions they were involved with on the plasma chain since the last (infrequent) update to the main chain. If so, imagine the plasma chain is being used for a distributed currency exchange. I could transact hunderds of times on the plasma chain at high speed, then, just before the plasma chain commits, decide that because I lost on those trades, I will pretend I didn't get a block and signal that I want to withdraw. In otherwords, I can engineer a bet to nothing, where I withdraw whenever the market goes against me, and retain the transactions wheever the market goes in my favour. If so, this is deep problem, as essentially it means that no transaction made on the plasma chain can be trusted until they are committed to the main chain. This would mean that despite appearances the plasma chain in reality only operates at the same speed as the main chain. Is this right, or have I missed something here?"
26,vulnerability,ethereum,Shower-thought: Blockchain as a tool for combating fake news and the manipulation of digital media,4,7xta3w,https://www.reddit.com/r/ethereum/comments/7xta3w/showerthought_blockchain_as_a_tool_for_combating/,2018-02-16 07:28:35,"Recently, Buzzfeed highlighted [the work of Aviv Ovadya](URL who predicts that in the coming decades, well face a global crisis of confidence which he terms the Infocalypse. Ovadya is deeply concerned by the emergence of AI-infused software packages that allow for the easy, seamless editing of pictures, audio, and video to convincingly depict events and sound bites that never actually happened. Imagine, for instance, if a state actor released fabricated video footage of a political candidate in a compromising position, or sound clips from a supposed national ally in secret talks with an enemy. If released via social media platforms, and propped up by networks of bots/the occasional figure of authority with aligned interests, this sort of information warfare could readily sway public discourse, resulting in catastrophically negative outcomes. If only, you might think, there were were a trustless, decentralized mechanism by which digital information could be assessed for its validity, and recorded on a permanent distributed ledger which could be retroactively referenced to determine whether it had been tampered with. In an era where the very foundation of truth and objective reality is under attack, wouldnt it be great if there were some means of establishing shared, non-manipulable consensus about the legitimacy of information and the ordinality of events and transactions. If this reminds you of the properties of the blockchain, congratulations - you have a keen eye for context clues! :) The proposal is effectively this  could we establish a universal standard, wherein original digital video, images, and sound files are encoded with metadata that is committed to the blockchain? This metadata serves as a unique identifier for this source file, such that any future versions that incorporate elements of this source file are intrinsically linked via this reference ID, creating an ancestral history of the origin of digital media. This metadata may also be used to cross-reference a descendant version of a media file with its progenitor, in order to assess the ways in which it has been modified from its original form. Relatively benign modifications (say, video cropping or lighting adjustments on digital photos) would be no cause for alarm, but modifications which indicate the splicing of separate media sources or the use of more intensive video editing techniques, could be flagged as potential cases of misleading manipularion of digital media. In instances where the media in question is particularly inflammatory or consequential, a universally accessible, permanent record of the source of the content would be invaluable for assessing its veracity. Naturally, all future digital media will not be encoded with this blockchain-codified metadata. While one might envision a world where this sort of standard process is legally required of the manufacturers of phones, cameras, and other recording implements (much like the government enacts emissions regulations on car manufacturers), this seems like an unlikely outcome due to legacy devices, privacy concerns, etc. But, for journalists and news outlets with a vested interest in maintaining their irrefutable credibility, this could be a universal standard for the legitimacy of recorded media. The only digital media which garners trust would be that which has a time-stamped entry on the blockchain registering when, how, and where this media was captured, and how it has been digitally manipulated in the intervening time prior to publication. We should expect that there will be malicious elements who will look to circumvent/corrupt this sort of system  if they can, for instance, edit a video to fit their agenda, and then re-record this edited video, this may be a way to circumvent hardware-encoded controls. Likewise, if the means of committing media to the blockchain can be corrupted (i.e. tricking the recording device into attaching metadata to an existing, untagged file, etc), this would be a significant point of vulnerability. I am not a tech/cryptography buff, and I dont have the answers as to what measures should be taken to prevent these exploits. But, in light of the growing use of social media, bot armies, and AI-enabled media editing, I think this is something that the blockchain community should think about. Additional points of discussion include: * What are the risks of this sort of approach, both for personal security/privacy, and for corruption by malicious elements? * What are the technical requirements of this sort of system? How can we definitively capture the unique identifier of an original source file, with assurance that it is not derived from some prior source? * How can legacy images which lack metadata be validated and incorporated into this structure? * Should all images be committed to this structure? Or should it only be expected of images shared by news outlets, social media platforms, etc? * Is this approach feasible from a data storage perspective? Given the ubiquitous nature of recording devices in modern society, is it feasible to store the associated metadata for every image or recording that is produced? * Should this system be tokenized/monetized to encourage adoption (e.g. tokens awarded for committing original images)? * Is this within the purview of government regulation, or would the government be overstepping its bounds by enforcing adherence? In case youre curious as to whether blockchain has been explored for fake news prevention, here are a couple of related articles. The overarching theme is that news stories are validated via community curation, rather than immutable identifiers. URL URL Lastly, heres a journal article from 2016 that discusses exactly this sort of approach (cryptographic image authentication), in much more rigor, but without explicit mention of blockchain as the associated data structure: URL Thanks for taking the time to read this - I would love to hear this communitys thoughts on this approach, as well as if there are any existing start-ups who are focused on tackling this problem. "
27,vulnerability,ethereum,Notes from Ethereum Core Devs Meeting #34 [2/23/18],121,7zpxe3,https://www.reddit.com/r/ethereum/comments/7zpxe3/notes_from_ethereum_core_devs_meeting_34_22318/,2018-02-24 04:49:29,"# Ethereum Core Devs Meeting 34 Notes ### Meeting Date/Time: Fri, February 23, 2018 14:00 UTC ### Meeting Duration: 1.5 hours ### [GitHub Agenda Page](URL ### [Audio/Video of the meeting](URL # Agenda 1. EIP process improvements 1. Constantinople (What to include, timing) 1. Test RPC protocol discussion 1. Easy parallelizability (EIP648) 1. BLOCKHASH opcode (EIP96/EIP210) 1. Client/research updates 1. Timing of next call # Notes Video starts at [[2:57](URL ## EIP process improvements [[3:59](URL - Want a channel where it's easy for people to communicate about what changes they want to happen - There is a group called Fellowship of Ethereum Magicians (Hudson to post link), self-organizing group to maximize technical opportunities - Like IETF for Ethereum, self-organized group of engineers, scientists, technologists who ""keep things running"" - make sure all of our equipment speaks the same protocol, etc. - Will do a workshop at EthCC - Jamie Pitts, Greg Colvin have organized - Will Yoichi be a part of the governance process going forward? A chance he will join again in the future. - Nick: We need to distinguish between writing a standard and adopting it - IETF: Consensus is not about majority votes - Hard fork is the final option - Can we publish things and let people choose whether to support them or not? - Firm up the process of what is considered merged, and the technical requirements of EIP editors - Make it clear to everyone involved that EIP writing is a technical process, and that if something is merged it does not mean that it will ever be adopted - In short, if something is technically well written, it should be merged but may never be adopted - Greg: we don't have a good way to keep technical issues separate from policy issues - It's difficult to move forward with proposals if we're overwhelmed with debate about the wisdom of a proposal before editing, drafting, merging complete - There should not be huge debates about whether this EIP should be assigned a number, it should not be so contentious - [IETF article from Hudson](URL - Avsa: not merging things until all objections addressed? This is very hard, same objection can be made in different language - We could add an obligatory section on every EIP where you list every main objection and address each one somehow - In practice it's hard to separate tech proposals from policy proposals as Greg suggested - Maybe we should not merge things that we never want to become standards - Greg response: things can become a draft, drafts don't have an EIP number. Once it's a draft it can be accepted, deferred, rejected, etc. - Greg: we need a body where we can have these arguments in a civil, deliberative way; doing this esp. at the pre-draft stage in Github comments is not the right forum - Tim: NEO voting - They have an electoral system - Some people verify their addresses and then they have more authority with their votes - Vitalik: In general I dislike allowing coin votes for anything - Random people who happen to have a lot of ETH are not necessarily the people who have strong technical opinions - For things that don't pass developer consensus or have tradeoffs, as much as Carbon Votes are problematic, they're one of the least bad mechanisms we have, esp. in combination with other types of community polling - But I do also feel that rather than only invoking for very controversial stuff like the DAO fork and issuance reduction, maybe we should use it for everything - Carbon Voting has its flaws and should not be a sole signal but it's been used twice, and it's okay to listen to as long as you recognize that it's one of several signals - Avsa: 100 people responsible for 80% of the voting power, this is inevitable due to power distribution of tokens and voter apathy - Tim: as Ethereum becomes more popular you'll get more random feature requests - Vitalik: decision markets are hard because choosing a single objective function is hard--I don't believe it's ETH price - We can return to this in 2-3 years if Maker DAO and other projects find that it's working for them - Vitalik: In general, our governance mechanism is really not that bad, the main flaw is not so much in the mechanism itself but in how we communicate them - E.g. re: standardized ETH recovery, the impression that a lot of community members got from the outside is that if it's merged, it's a lot closer to being accepted than anyone involved in the decision-making process intended to signal that it is - Hudson: can make this clearer, add a disclaimer: ""Just because this has been merged does not mean it is any closer to being accepted, this is just a draft."" - Nick: Some people suggest we should not formalize governance because then it will be vulnerability to exploit capture, etc. - But I am concerned that not formalizing it could have the same outcome - Hudson: We need some degree of formalization, but maybe not too strict, e.g. these calls - Vitalik: Agree that having these calls is good, giving relative indications about status of various EIPs, etc., but then just because everyone on the call agrees an EIP is good it should not 100% necessarily be approved - Avsa: Someone opened an EIP, was probably a joke, can you have one standard negating another? Both can be drafts! ## Constantinople [[32:15](URL - On last call, we decided that some EIPs could definitely go in - [EIP 145: Bitwise shifting instructions in EVM](URL pretty well-formed, but not 100% implemented or tested - [EIP 210: Blockhash refactoring](URL [[32:40](URL - Replace BLOCKHASH opcode, but also has the feature that you can invoke the contract directly to gain access to &gt; last 6 blockhashes - Can access any previous block from the current block in the maximum of three merkle hops - Difficulty to implement? Vitalik: There is already an implementation in at least a couple of clients, just need to write a bunch of tests for it. - Martin: Not that difficult to implement in the client, but is the actual contract code finalized? - Pawe: I would like to see the spec finished, but I made some comments/amendments months ago and haven't had an answer. It should be merged as a draft so I can PR to fix some issues. - Hudson: Vitalik please make final changes to the EIP and merge it - Vitalik: Please look through it again and make sure there are no issues. I'd like someone independent to write some tests for it. Prefer not to merge until the EVM code as written is very very close to final. - Pawe: There is at least one bug in the contract. Would be easier if the code is merged so I can send PR rather than just discuss in the comments. - [EIP168](URL [169](URL - Killing dust accounts, replay protection for this [[42:20](URL - [Andrei's graph](URL - [Alexey Akhunov data](URL - Alexey did some tests, ~1M accounts, roughly less than half the accounts in the state are zero balance - Should this go into Constantinople? - Vitalik: I'm not concerned about arguments about deleting people's money since this would only delete the account if at the end of a transaction it has less than gas_price x 21,000, can only increase the cost of a transaction by more than a factor of 2-epsilon - V: I prefer variant B - Nick: if someone sends a tx with a very high gas price they risk losing that amount of gas x 2 - Martin: we should set a hard limit in the protocol, this would be less risky - Casey: unclear how much benefit clearing the dust accounts would have; per Andrei's post, state goes from ~9.6 to ~7.3 gb (~2.3gb savings) - Vitalik: state size control is important not just for saving disk size but also reducing fast sync time, also the bigger the state, the less you can keep in memory which makes DoS attacks worse - Nick: if we decide not to clean up existing dust accounts but set a rule going forward, we can do the dynamically-adapting thing without risking attacks - Hudson: good idea if we can't decide whether savings are worth it for the risk - Casey: nonce replay protection scheme might also make it more difficult to do later sharding approaches with nonces and merkle proofs - Vitalik: keep in mind that this will not apply to abstracted accounts (if we do account abstraction) anyway since they will all have code - If a few years from now the state space is 3x bigger due to abstracted accounts the actual gain here goes down to maybe 7-8%, in which case maybe that development time would be spent on Casper or sharding - Vitalik: there are intermediate versions we can consider, e.g., if at some point we upgrade tx formats, it would be a great opportunity, 2-3x simpler to implement a one time account clear of some kind, but this is a longer-term thing - Nick: re: EIP169, how do you sign a tx, wouldn't you need to know which block it will be included in? - V: an account going from non-existent to existent is not something the owner of an account can do - You can only send a tx from an account that already exists - Nick: we could do 169 without 168 initially - New nonce scheme, gives people a chance to adapt to that - In a later fork, implement dust cleanup which requires it - Tim: does account abstraction supercede this? - Vitalik: account abstraction only applies to new accounts - Avsa: people who have moved ETH to WETH would not be affected by this as there is no dust cleaning for tokens - Martin: don't think people would mind if dust is cleaned, most of it is probably from people who tried to move all ETH out of an account but didn't use Javascript bigints and didn't get the math exactly right - Hudson: no clear agreement on this so let's move on - [EIP859: account abstraction](URL [[58:42](URL - Last time we agreed to table this and focus on things like Casper - Vitalik: This will happen anyway inside sharding, it will exist in some clients in some form; at some point the code will be mostly written but that's still some time away - It's a fairly substantial undertaking, esp. because of things like miner strategies - So if we try to do it very quickly (in time for next hard fork) we don't get the benefit of piggybacking on work being done on sharding side - Personally I would therefore lean towards not putting this into Constantinople - Main reason to do this would be some urgency for some particular applications that could take advantage of abstraction, but there may also be simpler kludges to provide it with off-chain protocols - Hudson: as discussed last time, too much work for Constantinople but should be reassessed after Constantinople esp. depending where sharding is at that point - [EIP232: New tx formats](URL [[1:02:18](URL - Creates two new types of transactions - Vitalik: overview - Superset of earlier abstraction proposal - Chain ID replay protection against ETC chain - We had to do a series of kludges for this - This got a bit too complicated - The idea was to make a clean, new type of tx where the first number would always be a transaction version number, second value the network ID, then from there it depends on transaction version number - Benefit: way more forward compatible - Would be convenient to do at the same time as account abstraction, if not adding any new tx types then we're not getting much benefit, whereas if done at the same time, it makes sense because there is an some actual, new tx format - Hudson: okay, so this doesn't need to go into Constantinople either - Timing [[1:05:44](URL - [EIP 145: Bitwise shifting instructions in EVM](URL - agreed upon - [EIP 210: Blockhash refactoring](URL - need to work on some more, but going in direction of being approved for the next hard fork - Are there other things we want to add? Or should we just continue to focus on casper and sharding? - Vitalik: We should consider a substantial reduction in gas costs of curves, ZK-snarks opcodes, this would be a fairly trivial EIP to put into the hard fork - Actual numbers are in [benchmarking repo](URL - CPP, Geth, Parity covered - But not necessarily using the same test vectors in all cases - Geth has the most compehensive test benchmarks - karalabe: performance is about 18x faster than current implementation, so if we can implement that then gas costs can go down significantly - Go was slower of implementations - So if we get 16-18x faster how does that compare to other clients? - Dmitrii: we do not have these benchmarks for EthereumJ - If we can finalize this stuff over next month or so, we can lock in dates for testing Constantinople - Also tied to first Casper implementation - Would be good for clients to add this to their roadmaps # Test RPC protocol discussion [[1:11:48](URL - URL - Dimitry: I started to work on this new approach which would allow us to generate consensus test from any client which implements new testrpc method - Clients can use this to generate new tests # EIP648: Easy parallelizability [[1:13:29](URL - URL - Tim: Wondering if you guys think it's important enough to start considering - Similar to introducing a new tx type for [EIP232: New transaction formats](URL Not quite - Vitalik: New tx type is cosmetic whereas parallelizability requires changes to protocol guarantees and architecture - Pretty sure this could open us up to call stack depth attacks - Deep changes are the parts that include actually parallelizing contract execution - It's totally fine for people to try implementing but I'm curious realistically how you would test this and what info you would get from the test - Tim: I'm also wondering, which client would be good for making a branch for this - Vitalik: Use a pretty simple algorithm to retroactively assign lists to previous tx - Try to run in parallel and see what the speed up is - Call stack depth attack: when an attacker creates a tx which calls a contract, which calls itself a bunch of times and then calls a target contract, but when the target tries to call out to something else it fails because call stack depth too high - In current parallelizability proposals a contract has to specify a list of addresses it can call, any attempt to go outside that range leads to an immediate exception - So it also lets you make a tx which calls some contract, if it will call another contract then the second degree call could be outside the access list so it would fail - Casey: so if a contract assumes its calls always succeed, that would be the vulnerability - V: You cannot assume a call succeeds and need to handle the case where it fails - We did come up with a bunch of other countermeasures before fixing this issue - Hudson: need to explore this more before the next core devs meeting - Martin: parallelizability definitely will not go into Constantinople since it requires large changes - Casey: until we know bottleneck about disk I/O and how to optimize it, this EIP doesn't make it possible to increase block gas limit without some of the other disk I/O optimizations that are being explored with e.g. TurboGeth - TurboGeth disk I/O optimizations are therefore the most important things to work on prior to this EIP - Hudson: Not going into Constantinople # BLOCKHASH opcode refactoring (EIP96/EIP210) [[1:20:26](URL - URL - URL - Pawe: already discussed on this call - note: 96 was abandoned and replaced by 210, we can close out the old one # Client/research updates [[1:21:39](URL - Parity (Afri) - no update - Geth (Pter) - Just had major release (1.8.0, 1.8.1) - Happy that the light client is again seemingly functional modulo some rough edges and bugs - Martin implemented and we merged in bitshifting EIP - If anyone wants to write tests or needs a client that has this, they can use geth - EthereumJ/Harmony (Dmitrii) - We are working on the next release - reduced memory from 4gb to 1.5gb - very stable but found a bug with Windows and DB library, need to fix this bug before release - we expect to do this in about two weeks - For Casper, now debugging mining and validator - We can participate in this in the next week - CPP - Pawe: nothing to share, no new features - Dimitry: testeth tool now separated from cpp client, I've been working on retesteth repository, current version of testeth supported by Yoichi in his fork of cpp-ethereum, will remove from cpp client and make it more stable - EthereumJS (Casey) - no updates - Most team members working on cpp-eth and ewasm - ewasm: working on dockerization, planning a demo at ethcc - PyEVM/Trinity (Lane) - sharding branch merged into master - work continuing on networking code and async python - Research update (Vitalik) - Casper: EthereumJ close to having something testnet compatible, last round of changes to the spec before audit - sharding: lots of discussions past couple of weeks on sharding designs, what to do first, what's compatible with what, what right path forward re: different stages, all of this on URL forum, being discussed a lot between Vitalik and Justin - Solidity (Christian) - Release recently, will have one soon - 0.4.21 hopefully last before 0.5.0 - We're adding tons of breaking changes - I'm confident we're making great progress in last few weeks # Timing of next call [[1:30:38](URL - Skipping meeting in two weeks due to EthCC (many participants will be there) - nothing especially urgent such that one week would make a difference, next call in a month, i.e. March 23 ## Attendees - Afri Schoedon (Parity) - Alex Van de Sande (Mist/Ethereum Wallet) - Casey Detrio (Volunteer/EthereumJS/ewasm) - Christian Reitweissner (cpp-ethereum/Solidity) - Daniel Ellison (Consensys/LLL) - Dimitry Khokhlov (cpp-ethereum) - Dmitrii (EthereumJS) - Greg Colvin (Fellowship of Ethereum Magicians) - Hudson Jameson (Ethereum Foundation) - Jutta Steiner (Parity) - Jared Wasinger (EthereumJS/ewasm) - Lane Rettig (Ethereum Foundation) - Martin Holst Swende (geth/security) - Nick Johnson (geth) - Pawe Bylica (cpp-ethereum/ewasm) - Pter Szilgyi (geth) - Tim Siwula - Vitalik Buterin (Research)"
28,vulnerability,ethereum,"Ethereum's future is bright, the DApps are coming! (x-post from r/ethtrader)",86,82hqpb,https://www.reddit.com/r/ethereum/comments/82hqpb/ethereums_future_is_bright_the_dapps_are_coming/,2018-03-07 06:19:01,"###[The DApps are coming, the DApps are coming!](URL Chin up boys and girls  the DApps (Decentralized Apps) are finally coming. _**Utility**_, not speculation/manipulation/shilling etc., is what, in the end, will give/justify the value of blockchains. &amp;nbsp; [Of the top 100 tokens, 91 of them are on the Ethereum blockchain (ERC-20).](URL The most valuable non-Ethereum tokens by market cap are USDT (4) and GAS (25). Eventually, ICX (6), VeChain (3) and EOS (1) and several others will be migrating to their own blockchains. Still, this leaves Ethereum with an overwhelming market dominance for tokens (aka DApps) and Ethereum has been clearly recognized as *the* blockchain to launch ICOs/DApps. &amp;nbsp; We have already seen several DApps successfully launch on mainnet including [CrytptoKitties](URL [Crypto Sportz](URL [Edgeless](URL [Etherbots](URL [Ethercraft](URL [Etheroll](URL [Forkdelta](URL (RIP Etherdelta), and [0xBitcoin](URL among others. Check out a whole list on [DappRadar](URL and track the progress of some lesser known, smaller projects on [StateoftheDApps](URL (**Note**: I cannot vouch for all of these DApps. There have been and always will be scammers in the crypto space. **Please**, always do your own research!) &amp;nbsp; For the rest of March + Q2 (April - June) we are going see **the biggest implementation of DApps on the Ethereum mainnet to date.** Below Ive laid out, in alphabetical order and in varying detail, whats happening between now and the end of Q2 of this year. (Ive also added some info, where especially relevant, of big stuff coming after Q2). I hope any biases I may have do not come through too much in the writing. &amp;nbsp; To hammer home on utility once more: One year ago today, the daily transaction count was at 57,000. Yesterday, the network confirmed over 752,000 transactions (a 13x increase) (And remember, ATH in January was 1.349 million txns!) [[Source]](URL --- &amp;nbsp; ###On to the DApps: &amp;nbsp; [**Airswap**](URL [Subreddit](URL * AirSwap is a decentralized exchange for trading Ethereum based tokens. It allows its users to trade tokens in a peer-to-peer fashion across the Ethereum blockchain. The [token trader](URL is currently live, in a limited capacity, trading AST and (W)ETH. * More token pairs will be added before the end of the Q1, as part of the upcoming release, Token Marketplace. A mobile app is also in development and will be entering beta soon. &amp;nbsp; [**Aragon**](URL [Subreddit](URL * Aragon is a project that aims to disintermediate the creation and maintenance of decentralized organizational structures by using blockchain technology. ""We provide the tools for anyone to become an entrepreneur and run their own organization, to take control of their own lives."" Originally slated for a February release, Aragon Core v0.5 (which is a fully functioning version of the DApp on mainnet) should be released any day now. &amp;nbsp; [**Augur**](URL [Subreddit](URL * Augur is a fully-decentralized, open-source prediction market platform built on the Ethereum blockchain for any and all predictive markets. Augur Beta is currently live on Kovan testnet and launch is months away. * In order to mitigate bugs and problems, the first market on mainnet will be something along the lines of 'Will there be a critical vulnerability discovered in Augur by a certain date? Given Augurs development history, this could be launching a little after Q2, but the progress looks promising. &amp;nbsp; **[BlockCAT](URL [Subreddit](URL * BlockCAT lets anyone create, manage, and deploy smart contracts on the Ethereum blockchain with just a few clicks. No programming required. BlockCAT will be releasing their first visual smart contract on the mainnet on March 14 (the full details of exactly what this contract does, will also be released when it goes live.) &amp;nbsp; [**Digix**](URL [Subreddit](URL * Digix is a DAO (Distributed Autonomous Organization) and is composed of two main parts: DGD and DGX, both of which are ERC-20 tokens. * DGD is a governance token that allows holders to vote on proposals that are submitted for the growth of the Digix ecosystem and offers rewards to holders on the basis of their successful contribution to the Digix Ecosystem. * DGX is a gold-backed token and is slated for a public market release by end of Q1 2018. DGX is backed by physical gold on a basis of 1 token to 1 gram of gold. ""DGX represents value on the blockchain that can be retained over time with relatively little volatility; giving it greater utility than Ether for a wide range of use-cases. Retail, Rentals, Salaries, Commerce, Lending, Wealth Management."" &amp;nbsp; [**Ethorse**](URL [Subreddit](URL * Ethorse is a DApp for betting on the price of Cryptocurrencies and winning ETH from everyone who bets against you. Users bet with ETH on one of the listed coins or tokens to have the highest price gain in a fixed period. Currently live on the Kovan testnet, with mainnet launch before end of Q2. &amp;nbsp; [**FunFair**](URL [Subreddit](URL * FunFair is a decentralised gaming technology platform which uses the Ethereum blockchain, smart contracts and their own Fate (State) Channels to deliver casino solutions with games that are fun, fast and fair. FunFair has been on testnet for many months now and the [Showcase](URL has been live for even longer. Currently on-boarding casino operators, FunFair is on schedule to launch with its first operator in early Q2. &amp;nbsp; [**FundRequest**](URL [Subreddit](URL * FundRequest is a decentralized marketplace for open source collaboration. It introduces an easy and secure way to reward bugfixes and feature builds on any project. The FundRequest platform will be going live on mainnet in Q1-Q2 and will allow users to fund and crowdfund open source issues on GitHub using the FND token. Developers can claim the FND token after theyve successfully resolved the GitHub issue. Q2 will also bring the ability to use any ERC-20 token to fund Open Source Issues on GitHub. &amp;nbsp; [**Giveth**](URL [Wiki](URL * Giveth is an Open-Source Platform for Building Decentralized Altruistic Communities. The first working prototype of their Minimum Loveable Product, the Giveth Donation Application, is live on testnet and they expect to fully open the platform for the public in March 2018. &amp;nbsp; [**Golem**](URL [Subreddit](URL * Golem has branded itself as the worldwide supercomputer. Golem Brass beta will be releasing on the mainnet before end of Q2, allowing users to sell their computing power and earn real GNT for the first time. &amp;nbsp; [**iExec**](URL [Subreddit](URL * iExec is a decentralized cloud computing platform that is blockchain-based. Using a decentralized cloud that connects users to one another it aims to tackle the current limitations of centralized cloud computing that are holding business and innovation back. * Launching by March 31, iExec 2.0  Cloud Marketplace will include the full marketplace platform network, with the PoCo algorithm [(Proof-of-Contribution)](URL enabling the first decentralized cloud. &amp;nbsp; [**Kyber**](URL [Subreddit](URL * Kyber network is an on-chain protocol which allows instant exchange and conversion of digital assets and cryptocurrencies with high liquidity. Launched on mainnet in February and was at first only available to people on the ICO whitelist but has since slowly started allowing new user on the platform. Currently only has a few tokens listed but that list will continue to grow and will hopefully bring along with it a surge in daily users/volume. &amp;nbsp; [**Melonport**](URL [Subreddit](URL * The Melon protocol is a portal to digital asset management on the blockchain. The frontend operates on top of IPFS, while the backend leverages off a set of Ethereum smart contracts. Melonport just launched on mainnet and they currently have a bug bounty with 500 MLN in it. In a few weeks, the current version will be shut down for fixes and a new version will roll out. Melonport: ""Disrupting the US$84.9 trillion asset management industry, one block at a time."" &amp;nbsp; [**OmiseGO**](URL [Subreddit](URL * OmiseGo is the Plasma decentralized exchange, hosting an open-source digital wallet platform created by parent company, Omise, connecting mainstream payments, cross-border remittances, and much more. They just had their White Label Wallet SDK [public release.](URL * In Q2, OmiseGO will deliver the OmiseGO network and lay the foundations in preparation for Plasma. In Q2 we will see the OmiseGO Proof of Stake public blockchain release, meaning staking will be possible. * (OMGs cash in/out interface and the Plasma mainnet launch are scheduled for the tail end of 2018/early 2019. Learn more about Plasma from the most cheerful person I know, Karl Floersch, [here](URL &amp;nbsp; [**Request**](URL [Subreddit](URL * Request is a decentralized network that allows anyone to request a payment for which the recipient can pay in a secure way. The first iteration of Request working with Ethereum on mainnet is still on track to launch before March 31. The code for mainnet is currently being audited and when the audits are done, a bug bounty program will follow. &amp;nbsp; [**Spankchain**](URL [Subreddit](URL * A cryptoeconomic powered adult entertainment ecosystem built on the Ethereum network. Basically, a decentralized cam site (plus a lot more!) Launching on mainnet in Q2 is SpankChain Camsite v1 which will allow for ETH + ERC20 payments and public and private shows all while implementing a low 5% fee for performers (According to their [whitepaper](URL most adult camsites take between a 30-50% cut of performer earnings on top of payment processing fees). &amp;nbsp; [**status.im**](URL [Subreddit](URL * A mobile Ethereum OS. Currently in Alpha with mainnet Beta scheduled before end of Q2 (likely even sooner). * (Bonus: some other cool working Ethereum OS apps: [Cipher](URL [Toshi](URL and [Trust Wallet](URL &amp;nbsp; [**The 0x Protocol**](URL [Subreddit](URL * 0x is a protocol that facilitates trustless peer-to-peer exchange of ERC20 tokens. 0x protocol is free to use and allows anyone to create a decentralized exchange; we call these relayers. This isnt a DApp, but allows for the creation of DApps. * A list of some of the DEXs, in varying states of development, that will be utilizing 0x: - [DDEX](URL - [Dextroid](URL - [ERC dEX](URL - [Ethfinex](URL - [OpenRelay](URL - [Paradex](URL - [Radar Relay](URL - [Shark Relay](URL - [The Ocean X (previously called The 0cean)](URL &amp;nbsp; Also, an informative article about some of the differences between the various decentralized exchange protocols [here.](URL --- &amp;nbsp; Some **general Ethereum** news to be excited about: &amp;nbsp; * Vitalik recently hinted, in a since deleted tweet, that the sharding testnet will be coming online in the near future (I think Q2 isnt too early a guess). * What is sharding? Sharding is where the entire state of the network is split into a bunch of partitions called shards that contain their own independent piece of state and transaction history. In this system, certain nodes would process transactions only for certain shards, allowing the throughput of transactions processed in total across all shards to be much higher than having a single shard do all the work as the mainchain does now. [[Source]](URL &amp;nbsp; * [Alpha Casper FFG testnet](URL has been successfully running since Dec. 31, 2017. * What is Casper? Casper FFG aka Vitaliks Casper is a hybrid POW/POS consensus mechanism. This is the version of Casper that is going to be implemented first. In a Proof of Stake system, validators stake a portion of their Ethers and start validating blocks. Meaning, when they discover a block which they think can be added to the chain, they will validate it by placing a bet on it. [[Source]](URL &amp;nbsp; * [The Ethereum Community Conference (ETHCC)](URL is March 8-10 in Paris. Talks will focus around scalability, anonymity, development tools, governance compliance among other topics. * Speakers include representatives from the Ethereum Foundation, Ledger, Metamask, Shapeshift, Oraclize, Uport, Web3Foundation, Melonport, ConsenSys, JP Morgan, Coinbase  Toshi, Parity, SpankChain, FunFair, Aragon, AirSwap, EEA, IExec, Cosmos, OmiseGO, Circle, Gnosis, among others. * [The Ethereum Developer Conference (EDCON)](URL is May 3-5 in Toronto. This will be the biggest ETH dev conference since DEVCON 3 last November. The agenda is still being worked out, but speakers include representatives from the Ethereum Foundation, Polkadot, Parity, Plasma, OmiseGO, Cosmos, Tendermint, Giveth, Maker, Gnosis, and many others. * The Enterprise Ethereum Foundation (EEF) just keeps [growing and growing and growing.](URL --- &amp;nbsp; ###More, because I just cant stop: - Metamask recently passed 1 million installs! - 5.6 billion requests per day for Infura.io (Decentralized web3 infrastructure) - 280,000 downloads of TruffleSuit (ETH development framework) [[Source]](URL &amp;nbsp; * [ConsenSys](URL has grown to over 600 employees in six major offices located around the world. I personally think ConsenSys is important (and awesome) because they are huge Ethereum evangelists and provide (in)valuable resources to help bring DApps come to life! * From their website: The ConsenSys hub coordinates, incubates, accelerates and spawns spoke ventures through development, resource sharing, acquisitions, investments and the formation of joint ventures. These spokes benefit from foundational components built by ConsenSys that enable new services and business models to be built on the blockchain. &amp;nbsp; * Several of the projects I listed above are ConSensys formations including AirSwap and MetaMask. --- &amp;nbsp; Thanks for reading this far! Hopefully it wasnt too exhausting of a read. &amp;nbsp; I am certain I have forgotten some DApps, so please feel free to comment/PM any and all suggestions/corrections to make this list more informative/inclusive/accurate and I will update it. [TL;DR](URL"
29,vulnerability,ethereum,"New Working Wallet DAPP: Protects you from losing your keys, from hackers and allows your family to claim your funds if you become incapacitated",23,7sfswy,https://www.reddit.com/r/ethereum/comments/7sfswy/new_working_wallet_dapp_protects_you_from_losing/,2018-01-24 03:59:59,"**TLDR**: Heres a [link](URL to a sample wallet that is deployed on Mainnet. You need MetaMask in your browser to be able to view it. This wallet has some real Ether in it. I talked about this idea [here](URL and [here](URL and it seems to have been well received. The wallet should have several users, just like a multisig. The key idea is when a user initiates a transaction, she has to wait for some period of time before being able to actually execute it. This delay can be different for different users. A transaction can be canceled while it is pending (after it was initiated, but before it was executed). Heres how to use the wallet practically. Add a key of your friend with a delay of 1 year. Add a key of some family member with a delay of 6 months. Add your hot wallet key (such as Metamask or Parity) with a delay of 2 months. Add your hardware wallet key (such as Ledger Nano S) with a delay of 2 weeks. Add your most secure key, such as a paper wallet and set the delay to 0. The idea is that the lower the security of the key, the higher the delay should be. If one of the keys gets hacked, you can always cancel its transactions (and remove the key), using a key with with a lower delay (which means it has more privileges). You should keep an eye on the wallet from time to time to make sure there are no unexpected pending transactions in it. If you forget some of your keys, you can still access your funds using your other keys. Even if you lose all of your keys, your friends/family can help recover your funds after a few months of waiting. If you become incapacitated, your family/friends can still access your funds. It currently works on Both Ropsten and Mainnet. To create a wallet, select Ropsten or Mainnet in MetaMask and go to [this page](URL and click Create New Wallet. This will deploy a new contract. To test it out for free, switch to Ropsten in MetaMask. The gas fee to create a new wallet on Mainnet is around 1 USD if you set the gas price to 1 GWEI. [Here](URL is a sample wallet that I deployed on Ropsten. [Heres a wallet](URL I created on MainNet. As you can see, the wallet has several active users. Each user has a different waiting time. Some users were removed. There are 3 executed transactions, 1 canceled transaction and 1 pending transaction. The pending transaction can be executed in about 8 months from now. [Heres](URL a link to it on Etherscan. The wallet has some real Ether in it. Please try to steal it :) I am also offering a bug bounty. If you report a critical vulnerability in the contract, Ill send you 0.5 ETH (this offer stands until June 1, 2018). The source code for the factory contract (contract that deploys wallet contracts when users click Create New Wallet) is verified on Etherscan on both [Ropsten](URL and [Mainnet](URL"
30,vulnerability,ethereum,How can decentralized trading ecosystems deal with Oracles?,13,7nsx6i,https://www.reddit.com/r/ethereum/comments/7nsx6i/how_can_decentralized_trading_ecosystems_deal/,2018-01-03 17:43:07,"Despite being decentralized, the one apparent vulnerability in trading platforms could be the use (however judiciously) of Oracles. While they remain the simplest means of bringing external data on-chain, what are the best ways in which this vulnerability can be countered? "
31,vulnerability,ethereum,Intel CPU vulnerability a cause for concern for exchanges?,19,7ny7g5,https://www.reddit.com/r/ethereum/comments/7ny7g5/intel_cpu_vulnerability_a_cause_for_concern_for/,2018-01-04 09:15:25,Any chance the vulnerability could be used to compromise users funds in any way? Should exchanges be putting transactions on hold until patches are released?
32,vulnerability,ethereum,"If a few virtual cats can crash your network, you have a dDOS vulnerability problem",0,7hhvmf,https://www.reddit.com/r/ethereum/comments/7hhvmf/if_a_few_virtual_cats_can_crash_your_network_you/,2017-12-05 02:09:39,short eth long cryptocat
33,vulnerability,ethereum,"I reused an Ethereum receiving address multiple times. Is my balance safe? If not, how can I secure it?",0,78bcom,https://www.reddit.com/r/ethereum/comments/78bcom/i_reused_an_ethereum_receiving_address_multiple/,2017-10-24 09:20:05,"I frankly can't follow this suggestion, but it suggests reusing an Ethereum address is a vulnerability. What should I do to counter this? URL"
34,vulnerability,ethereum,Legal vulnerability in Ethereum?,3,7c2lhi,https://www.reddit.com/r/ethereum/comments/7c2lhi/legal_vulnerability_in_ethereum/,2017-11-11 04:35:41,"This topic has be brought up about a year ago, but I dont think it has been taken seriously enough. I think there is a serious vulnerability in Ethereum (and most other blockchains) that allows an attacker to induce governments around the world to ban it. The censorhip-resistant nature of the blockchain allows anyone to submit arbitrary transactions to the network and have the data submitted with these transactions to be forever persisted in the blockchain, being downloaded and redistributed by every single node in the network. This means that, if someone uploads illegal data to the network (copyrighted material, child porn, terrorist propaganda, hate speech etc) the whole network will start replicating it, thus making every node become a possible target for prosecution by governments around the world. (for an example of uploading arbitrary data to the chain see URL For example, a transaction in Ethereum can contain arbitrary data. Uploading a 40KB jpeg within a transaction would currently cost only a few USD. Flooding Ethereum with thousands of illegal images infringing a range of laws in most countries would take only a few thousands of dollars. Even if ultimately no government prosecutes participants, the mere risk of it happening could be enough to significantly depress the value of the currency, possibly benefiting an attacker who has shorted it. My intent with this post is not FUD, nor am I bashing Ethereum. Im an enthusiast, I develop for the platform and I firmly believe that Ethereum will keep evolving until it truly delivers on all of its promises. I am also not a lawyer and maybe all the above is completely wrong. Id love to be proven wrong. If Im not completely wrong about this, though, I think it is worth thinking of possible technical, legal or legislative workarounds for this issue. Maybe light clients could be used to minimize risks for most users? Id be specially interested in the opinion of any lawyers that might be reading this."
35,vulnerability,ethereum,"How will ""miners"" be protected when PoS launches?",11,70r351,https://www.reddit.com/r/ethereum/comments/70r351/how_will_miners_be_protected_when_pos_launches/,2017-09-18 09:26:16,"The answer may be out in a document somewhere but I haven't found it or don't remember seeing it so here's my question: When staking your ETH I'm assuming you need to hold the actual eth on the node you are staking it with. What's protecting that ETH from an application/operating system vulnerability? I keep thinking about what I'll actually do when PoS launches and it makes me too nervous keeping my funds anywhere outside of my hardware wallet. Could there be a system developed where you simply hold the funds that you are staking in 1 address, then that address is associated with some sort of reputation system and all transactions rely/check on that reputation system? So basically I say I'm staking all within this address (that address holds my funds on a HW wallet) then while staked that address can't make any transactions except for when they want to no longer stake? (some sort of contract function to remove from stake). Then, if I compromise that addresses reputation by participating in some sort of attack on the network....it essentially puts my address (and funds) in a bad reputation state which would mean I could never spend them. Something like this?"
36,vulnerability,ethereum,Removed question in r/Iota - Are there any deliberate defects in the Flash Channels network that have not been disclosed?,3,72hm8w,https://www.reddit.com/r/ethereum/comments/72hm8w/removed_question_in_riota_are_there_any/,2017-09-26 13:03:18,"The original post has been deleted where I asked this. What is the admin there afraid of people discussing? Censorship to avoid topics not suitable for netizens? see URL The content of the question has been removed. For posterity ... *** #Are there any deliberate defects in the Flash Channels network that have not been disclosed? I just want to make sure so that we don't have to go through what we all went through when Curl hash algorithm was 'purposely fudged to thwart adversaries' with an easy to crack vulnerability. It's a matter of integrity and to ensure that another cover-up isn't in the horizon. It is also a moral essential to make sure that the foundation protects people's balances and doesn't provide back doors that could be used against the foundation and users. *** PS - User pitbullworkout might show up and rant below. He follows me everywhere on reddit and posts the same things on all my posts everywhere. Literally everywhere. \\\_()_/ PPS - Well ... there she goes. r/Iota banned me. Yet they leave slanderous and idiotic stuff like this up. URL Who's trolling who? There is no proof of any inappropriate behavior or discussions contrary to the theme or rules of the subreddit. Even the peeps there don't see the problem - URL PPPS - re pitbullworkout's accusations below. I deleted my entire Reddit history because I felt threatened by an r/Iota user and also for personal reasons. I have nothing to hide. Anyone that wonders can pull up Google's cache for 5mincoffee and you will see my posts and comments going back years that have been well received, and I always thought very constructive and proper here all across reddit. PPPPS - Just for the cleverly insightful, altogether wise judge and jury, the extraordinary u/pitbullworkout, here is my history on Reddit to assuage his grief that I deleted my entire history. Eat your heart out! URL PPPPPS - I found The Coordinator! URL Ha ha ha... I do have a sense of humour. *** QUOTE: Can you post links of him doing inapropriate behaviour or being lack all ethics and values in this sub? please provide proof for any accusation. I've had more than a couple of discussion/arguments/debates him, back and forth several times.. but I never find any inappropriate behavior, nor if he lack all ethics and values. critiques (bashing?) and raising questions on the capabilities, and the tech, and even developers choices / desicions are not inappropriate behavior, on the contrary it is necessary for the community to grow if he has any agenda... what's the problem with that? if he is a paid shill, good on him for making some cash while redditting.. but as long he never post inapropriate comments / post, he is ok. this sub is a place for lots of things: discussion, education, sometimes fun meme, debate, technical announcements, etc. but lets try not to make it some save space echo chamber. that just childish / entitled behaviour he said something you disagree, debate him, proof him wrong.. his comments full of crap? click downvote. done ***"
37,vulnerability,ethereum,Weird ETH and OMG transactions.,1,72oban,https://www.reddit.com/r/ethereum/comments/72oban/weird_eth_and_omg_transactions/,2017-09-27 09:22:05,"Hello /r/ethereum! I'm baffled by what happened to me about a week ago. What I did was withdraw some funds from Bitfinex to my online wallet I made for storing my ETH and tokens at myetherwallet [0xd178635b35d8f5aeBdF594c655105c9D8efc6114](URL Checked both sites having SSL with the right certificates being present and I had made one successful withdraw before with bitcoins and all withdrawal usage was from my office with great network security to outside world and browser is chrome with Disconnect, uBlock Origin and F-Secure Browsing Protection. So I was pretty sure I was all set to do the transactions. In addition I have sent all my verification info to Bitfinex back in March 21 2016, but they have yet to answer my emails nor approve any of the documents. Whatever, I'm not dealing with dollars anyway. Anyways, I do the withdrawal process, making sure I enter the right address. check more than 3 times for both ETH and OMG and get the emails and check the addresses, go and confirm. Now I just refresh the transactions [ETH](URL and [OMG](URL from etherscan and after a couple minutes I realize it is not my address in the receiving part. I go check Bitfinex and yeah, my mighty virtual currency is suddenly being sent to this other wallet. Checked Bitfinex login-logs or my gmail being compromised, no dice, only me using. The email sender was correct, the link was correct and resembled the earlier bitcoin transfer confirmation link. There is nothing remotely typo-able between my wallet address and the one which did receive them. Checked everything in my browsing history for this wallet address but ended up with nothing. So yeah, now I know to whitelist only my address for withdraws and enabled 2FA and make a small test payment beforehand. Does this sound familiar to anyone else? Am I missing something from the technology itself? I did google but found nothing really interesting. Only one similar case but the reason being the developer using wrong syntax when accessing the right objects inside arrays inside his project source. Guess there could have been a possibility of someone injecting this wallet value at some point with some vulnerability of either my system or Bitfinex having vulnerability/bug in their source? Latter seems unlikely since it seems this has happened only to me. Well luckily it wasn't a big amount and I guess what to take from this is that always take the extra steps for your security, shit happens. **tl;dr** Sent eths and assets to my wallet and they got sent to a whole different one with no chance of typos. Rip in peace. Be careful. "
38,vulnerability,ethereum,"Does this newly discovered vulnerability have any impact on Ledger, Treezor or anything else?",47,76qhpn,https://www.reddit.com/r/ethereum/comments/76qhpn/does_this_newly_discovered_vulnerability_have_any/,2017-10-17 00:33:32,"Does this have any implications Quote from the study: ""A newly discovered vulnerability in generation of RSA keys used by a software library adopted in cryptographic smartcards, security tokens and other secure hardware chips manufactured by Infineon Technologies AG allows for a practical factorization attack, in which the attacker computes the private part of an RSA key. The attack is feasible for commonly used key lengths, including 1024 and 2048 bits, and affects chips manufactured as early as 2012, that are now commonplace. Assess your keys now with the provided offline and online detection tools and contact your vendor if you are affected. Major vendors including Microsoft, Google, HP, Lenovo, Fujitsu already released the software updates and guidelines for a mitigation. Full details including the factorization method will be released in 2 weeks at the ACM CCS conference as 'The Return of Coppersmith's Attack: Practical Factorization of Widely Used RSA Moduli' (ROCA) research paper."" Julian Assange Tweeted ""Gaping five year long vulnerability (bugdoor?) in the Infineon chipset used by many crypto-tokens/crypto-cards (inc. Google, MS, HP, Levovo, Fujitsu) permits offline recovery of RSA private key from RSA public key "" URL URL "
39,vulnerability,ethereum,PSA: WPA2 wireless protocol has been compromised,69,76qszu,https://www.reddit.com/r/ethereum/comments/76qszu/psa_wpa2_wireless_protocol_has_been_compromised/,2017-10-17 01:25:23,"**[Key Reinstallation Attacks: Forcing Nonce Reuse in WPA2 by Math Vanhouf (PDF)](URL [Ars article](URL [KRACK Attack on Android &amp; Linux (video)](URL **ELI5:** There is a fundamental flaw in the WPA2 protocol that allows for exploitation including traffic sniffing (stealing login credentials, passwords, private keys, chat messages, etc), traffic injection (rerouting to malicious sites, malware injection), and can be paired with other malicious software like SSLstrip to bypass HTTPS and compromise secure channels. **What can I do?** Wait for updates to your wireless devices (smart phones, laptop/desktop wireless drivers, routers, smart TVs, IP cams, etc.) and install them when the are available. This may mean upgrading your firmware on many devices, which will likely require some research. **Why is this important to me as a cryptocurrency holder?** This is important for anybody using a wireless device, but it's particularly important for us crypto holders because there is absolutely nothing we can do once our crypto has been stolen, so we must be proactive in our security measures to prevent that from happening. We are individually responsible for our own security, and it unfortunately just got a lot harder. I recommend reading my 3 part security guide that starts [here](URL Privacy is going to be your best friend in a situation like this where the vulnerability affects everyone. Take measures to lock down your digital presence and think about your attack surface. Secure your funds if you think there's a possibility that you may be targeted."
40,vulnerability,ethereum,It was not Ethereum's faul-,1,6objde,https://www.reddit.com/r/ethereum/comments/6objde/it_was_not_ethereums_faul/,2017-07-20 07:08:57,"&gt;The interesting part is that this isn't a vulnerability is the wallet itself (like a buffer overflow, or incorrect signing), but in the ethereum code template that they use to implement multisig."
41,vulnerability,ethereum,A Modified Version of a Common Multisig Had A Vulnerability - The WHG Took Action &amp; Will Return the Funds,287,6obofq,https://www.reddit.com/r/ethereum/comments/6obofq/a_modified_version_of_a_common_multisig_had_a/,2017-07-20 07:30:17,"The White Hat Group were made aware of a vulnerability in a specific version of a commonly used multisig contract. This vulnerability was trivial to execute, so they took the necessary action to drain every vulnerable multisig they could find as quickly as possible. Thank you to the greater Ethereum Community that helped finding these vulnerable contracts. The White Hat account currently holding the rescued funds is URL If you hold a multisig contract that was drained, please be patient. We will be creating another multisig for you that has the same settings as your old multisig but with the vulnerability removed and we will return your funds to you there. We will be using the donations sent to us from The DAO Rescue to pay for gas. Effectively we will upgrade your multisig contract for you, all you will have to do is, be patient, find your new multisig address once we have finished, and it will be like nothing happened. We will not be responding to any social media posts. Edit: Do not trust any address posted below as a donation address. There are a lot of phishers in the community right now. In general always verify any address or link you find on reddit."
42,vulnerability,ethereum,ELI5 : timeline of the attack: how much time elapsed between the 0day hack and the White Hat could replicate the attack?,3,6ompyq,https://www.reddit.com/r/ethereum/comments/6ompyq/eli5_timeline_of_the_attack_how_much_time_elapsed/,2017-07-21 18:52:48,"Hi guys, can someone explain me by pointing at TX how much time elapsed since the 0day was exploited the first time by the black hat, and the instant the hack was exploited by the white hat? Let's assume that the whitehat hacker group was just compusively refreshing the balance of all the multi-sig wallets at that very moment. thereby excluding the natural time that occures before someone realised the funds are stolen, and from which wallets, and then call the white hat to the rescue. (likely one hour) . So if we are talking Minutes : how the heck is this white hat so good in realising a bug that no-one have discovered in months? Was it so easy to see by the original attack? if we are talking one hour ore more: why the hell was the black hack so lazy he forgot to rob the other 600+ wallets involved? How could possibly anybody that found the vulnerability later, being faster than the black hack exploiter at robbing 600 wallets, vs only 3 by the original attacker? Isn't this likely to be an aimed attack to those very three projects instead? please explain the timeline so we can understand it : fill the blanks and order the following events for us please 00:00 ----&gt; 0day Black Hack robs aeternity 00:00 ----&gt; 0day Black Hack robs edgeless 00:00 ----&gt; 0day Black Hack robs Swarm city 00:00 ----&gt; WhiteHat Group hacks 500+ addresses "
43,vulnerability,ethereum,Aeternity Updates and Developments,0,6oyq1s,https://www.reddit.com/r/ethereum/comments/6oyq1s/aeternity_updates_and_developments/,2017-07-23 11:26:43,"**Parity Multisig Wallet Hack** *Update on the Parity 1.5 (or later) vulnerability exploit.* ___ Due to a zero day exploit in Parity 1.5 or later, funds were moved out of a number of ETH multisig wallets without any authorization by unknown perpetrator(s). ___ aeternity was using a parity enhanced multi-signature wallet on the latest parity update. **Many projects in the space have used the same practice and have been affected as well**. ___ As far as we know three project multi-sig wallets have been affected by the black hat attack: ___ **Read more**: URL ___ *Change log summarizing current development of the aeternity blockchain up until mid of July.* **As of the beginning of May 2017, Zack Hess, our tech lead, was ready with the implementation of essential parts of the blockchain. These include;** ___ 1. Handling accounts and keys. 2. Exchanging p2p peers. 3. Syncing blocks. 4. Signing, bundling transactions and mining blocks. 5. Channels, Oracles, Governance. 6. Exposing HTTP interface for all transactions: accounts, channels, payments. 7. Persistence layer. 8. Trie itself and wrapper covering: accounts, channels, existence, oracles and governance. 9. Important use cases that require optimized blockchain design like lightning payment. 10. All of that supported by initial version of documentation and tests. ___ **Read more**: URL ___"
44,vulnerability,ethereum,Probably a stupid question about MEW vulnerability,0,6s1wzp,https://www.reddit.com/r/ethereum/comments/6s1wzp/probably_a_stupid_question_about_mew_vulnerability/,2017-08-07 09:56:07,"If it's possible to download myetherwallet, and use it to generate public address / private key pairs offline, what is keeping someone from writing a script that generates millions (billions? trillions?) of addresses offline, and then searches etherscan.io to see if any generated public addresses have funds on them? I know it's probably a misinformed question, but it seems like this should be possible if 1) there is a finite number of ethereum addresses available, and 2) it's possible to make addresses in bulk offline. Can someone correct me if I'm wrong? I feel like there is no way kvhnuke could've let something as obvious as this slip."
45,vulnerability,ethereum,New Research on Market-based Approaches to Securing Dapps,0,6s9zh3,https://www.reddit.com/r/ethereum/comments/6s9zh3/new_research_on_marketbased_approaches_to/,2017-08-08 10:46:52,"Hello, I'm a long-time lurker in this subreddit. I thought I would finally sign up to get some community input on [recent work](URL from my research group at UMass. We've been working on approaches to securing Dapps against theft that rely purely on financial instruments / incentives. There are two key ideas in the paper linked above. * Contract logic might contain flaws that allow unauthorized withdrawal of ether. But a Dapp can charge a small fee for withdrawals that is used to purchase short futures contracts, which hedge against a future drop in price. For example we show that, assuming relatively stable futures prices, a 5% withdrawal fee is enough to ultimately recoup half of the stolen ether. * For a Dapp that issue tokens, the structure of its ICO can impact the behavior of hackers with knowledge of a vulnerability in the contract code. Specifically, by conducting the token offering in two or more rounds, the Dapp can incentivize would-be attackers to short Dapp tokens in the futures market instead of actually exploiting a vulnerability in the contract. The end result is that some theft risk is offloaded from the Dapp to the market. I'm interested to hear your thoughts on the strengths and weaknesses of the proposed approaches as well as any related ideas. The work is preliminary and we're hoping to move it in a direction that would be most useful in real world deployments."
46,vulnerability,ethereum,DISCUSSION - Mutable Contracts,1,6ilnpm,https://www.reddit.com/r/ethereum/comments/6ilnpm/discussion_mutable_contracts/,2017-06-21 23:00:09,"Last night we had some back and forth in our channel with Mark Wilcox regarding the vulnerability that having opcode on-chain creates. So I disagreed with just about everything initially until I better understood exactly what he was getting at which he was gracious enough to explain in full detail, you'll have to find the thread to get all of it but I'll summarize and propose a question for the community. Basically, contract accounts are ultimately controlled by the network via the fact that they're ""autonomous"" away from the creator once deployed and state can be changed in the event of a fork whereas EOA's are are in direct control of the users. Now I contend that after learning curves and development overall, the opcode will get better and lead to a sustainable risk on-chain, and the economics for doing a fork more harmful than beneficial just don't line up. Having said that here's the question we may ask ourselves: Can contract accounts be sandboxed in a way that allows for mutability without affecting the rest of the chain? Consideration for users to become aware of those changes, particularly contract users, if the contract is payable, how those funds would be affected, should a contract simply be nullified after creation by the creator without a fork and distribute any deposits back to original depositors? This sort of thing may be worth the time to think about."
47,vulnerability,ethereum,How secure is Metamask?,12,6j7445,https://www.reddit.com/r/ethereum/comments/6j7445/how_secure_is_metamask/,2017-06-24 18:25:35,"I'm trying to setup an easy to use wallet that also has a backup seed in case my gf forgets the password. My question is, is metamask safe to store ether for a non technical user? Or is it more like a hot wallet like Jaxx? We were using jaxx until its Yuge vulnerability was found. I'm wondering if metamask has the same issue. Also I remember metamask saying some time ago that it was still in beta and to not store ether in it long term. Is that still the case? Thanks "
48,vulnerability,ethereum,"Realistically, how ""deep"" can I get into Ethereum knowledge and understanding without a background/skill set in computer science?",46,6l5krp,https://www.reddit.com/r/ethereum/comments/6l5krp/realistically_how_deep_can_i_get_into_ethereum/,2017-07-04 17:10:24,"Title states it. Long time tech enthusiast, avid reader and feel very competent in my ability to research and gain context. Been on the crypto study for over a year, Eth since January. My main concern is that a lack of technical background will hamper my plans of building a financial career based in blockchain, and I'm debating pursuing a hard self-study of the relevant languages to the eth blockchain. I'm not interested in being a developer, but do not want my long term financial analysis to suffer from a lack of understanding the nitty gritty details of the code. People more technically educated than me, how much of a vulnerability do you think I absorb not being able to understand and audit code myself?"
49,vulnerability,ethereum,Underhanded Solidity Coding Contest  These are not the backdoors you are looking for.,39,6lnxsj,https://www.reddit.com/r/ethereum/comments/6lnxsj/underhanded_solidity_coding_contest_these_are_not/,2017-07-07 04:56:35,"Stumbled across this contest through [a blog post](URL by the IT security expert Fefe. URL &gt;**Brief** &gt; &gt;Entrants must write a contract that in some way relates to ICOs - such as an ERC20 token contract, a contract for selling tokens, or one that conditionally pays funds out to project creators - with some critical vulnerability that can be exploited to enrich the project creators. Examples might include: &gt; &gt;* A crowdsale contract that allows certain participants to get more &gt;tokens than they ought to. &gt;* A disbursement contract that lets the project creators withdraw &gt;all the funds at once. &gt;* A token contract that allows stealthy creation of additional tokens. "
50,vulnerability,ethereum,Casper contract as a hacking target?,14,6mcc6l,https://www.reddit.com/r/ethereum/comments/6mcc6l/casper_contract_as_a_hacking_target/,2017-07-10 14:51:02,"With the upcoming transition to POS and the Casper gadget contract, I was wondering if there is any fear of the contract being a prime target for any kind of hacking and vulnerability finding of the same style the DAO was, for the sheer amount of ETH stored in it? Aside from the time component that is being put on withdrawals, is there any other mechanism in play to protect that contract and it's funds? (This might be a stupid question)"
51,vulnerability,ethereum,"The Evil Fiduciary Problem, or Nothing Actually at Stake",1,6nfw62,https://www.reddit.com/r/ethereum/comments/6nfw62/the_evil_fiduciary_problem_or_nothing_actually_at/,2017-07-15 23:19:56,"[E: apparently moderated off the thread for some reason] Consider a token that gives rights to the rewards from a staking pool. If the ETH staked from this pool is slashed, who loses? The token-holders lose. Obviously. However, the fiduciary responsible for these tokens (e.g. the person or entity that controls the actual validator decisions) can himself arrange to have an insignificant stake in the pool, and therefore may have an actual (personal) stake approaching nothing. Yet this same person or entity could direct the pool to undertake actions. Therefore validating with nothing at stake, and personally immune to the economic penalties of Casper. Since pools can be arbitrarily large, and of arbitrary number, it would not be possible to determine in advance whether the network is exposed to a 1/3 ""fail-to-commit"" attack, orchestrated by a series of evil fiduciaries who can arrange to have more to gain than they stand to lose. Since each individual staker does not know all of the other stakers, they can never be certain that a sufficient minority of others have not unwisely trusted their stake to an evil fiduciary. This appears to me to be an indefensible vulnerability in Casper as currently contemplated. How do we fix this?"
52,vulnerability,ethereum,"Proof of Stake leads to centralization, with worse consequences than PoW",56,6d1mca,https://www.reddit.com/r/ethereum/comments/6d1mca/proof_of_stake_leads_to_centralization_with_worse/,2017-05-24 21:48:07,"Please let me preface this by saying PoS is a *technical* improvement beyond PoW. It allows the network to use significantly fewer resources in mining. This is good because it doesn't require the energy requirements of a small country to maintain the network. That said, once it interacts with the real world and economics it is no better than Proof of Work. Proof of Work is based upon a numbers game of who has the most hashing power while proof of stake is based upon a statistically fair game of whoever has the most crypto. Each nominal unit of coin has equal odds to be picked for its wallet to be the next miner. One stipulation of PoS, however, is that the wallet must be online. To be online, it requires resources (hardware, electricity, and internet connection). Resources have a real world cost. Due to the fact PoS doesn't require you to fight with hashing power, the energy cost and hardware costs don't rise with odds of being chose to mine the next block (the mining lottery). Because of this, larger stakes, have a cheaper cost to mine than smaller stakes. To illustrate this fact, imagine you have a PC in your house with 1 ETH and your neighbor has an identical PC setup in his house but with 2 ETH. The energy requires to run the two setups are exactly the same and the overhead hardware are the same so the cost to run each of your mining operations is the same. However, your neighbor has 2x odds you do since he has 2x more ETH. Since each block will offer the same mining reward regardless of your stake size, the expected value (odds*payout) for each unit of ETH is the same, you and your neighbor both have the same expected EV. However, because those machines have a cost to run, their profitabilities are different. Your neighbor has 1/2 the cost per unit of production, as you. Given the fact that the larger stake holder ends up with a larger profit margin, as a rational investor, he would keep more of the mined ETH to increase his production ability. So a larger stake holder would grow his ETH stake faster than a smaller stake holder. After a point, the cost of being part of the mining operation would be too high relative to the payout for small stake holders and they would rationally drop out of the mining business, taking their wallets offline. This leads to centralization of mining and the rich get richer, faster. The alternative would be for smaller stake holders to band together and move all of their wallets to a central service then share all mined ETH and running costs as it would reduce the per unit cost of the operation. This is called economies of scale. We saw this early on in Bitcoin. The difference with Proof of Stake is that it would require all of the smaller holders to put their stakes in the same location. This creates a vulnerability not only to hacking but to outside jurisdictional force such as regulation, taxation, etc. So one way or the other, PoS will lead to centralization the same way PoW does due to economies of scale. While it does end up reducing the energy cost to run the backbone of the network to a fraction of what PoW requires, it ends up introducing a significant amount of new risk which cryptos aren't designed to handle (i.e. outside regulation and jurisdictional control). **EDIT**: Just to clarify, this isn't an issue of comparing one person with 100 ETH and the guy next door that holds 200 ETH. It's more like the guy holding 100 ETH compared to Staking business next door that's holding 100k or 1M. The cost difference in operations *does* end up making a massive difference. **EDIT 2**: Thanks to /u/Miffers (below) for the link to the other thread. So only 250 validators will be allowed (unless the devs can figure out a way to open it up to everyone, later on) URL So yeah, Vitalik and Vlad *know* PoS is going to lead to centralization and worse, centralized pools. I wonder if they're considering the risk they're exposing from outside forces."
53,vulnerability,ethereum,How will Ethereum handle the discovery of a major vulnerability in its hashing algorithm?,3,6dj212,https://www.reddit.com/r/ethereum/comments/6dj212/how_will_ethereum_handle_the_discovery_of_a_major/,2017-05-27 05:17:33,"Under the hood, Ethereum uses the KECCAK-256 hashing algorithm. Currently, there are no known major vulnerabilities, but given the tendency of cryptographic algorithms to be the target of researchers, hackers, governments and various institutions, the chance that a major vulnerability will be found somewhere in the future is non-zero. How will Ethereum handle such an event, assuming there's a viable alternative hashing function available at the time?"
54,vulnerability,ethereum,Can someone eli5 the ENS upgrade process,3,6e0180,https://www.reddit.com/r/ethereum/comments/6e0180/can_someone_eli5_the_ens_upgrade_process/,2017-05-29 22:35:17,"I've found the source code here: URL And there is the text at the bottom of this post on the URL site. But my question is more on how this would actually work. How would the current owners of the current domain names move to a new / upgraded contract? I'm assuming that when they sat 'ENS Root' they mean a contract that runs the registrar. Please correct me if I'm wrong. I'm interested because it seems like they have fairly good upgrade pattern in place that a lot of people are putting faith in and I'd like to emulate it in my own contracts, but I'm fuzzy on the actual process of moving data around. Text from the site: MANAGING THE ENS ROOT To facilitate the possibility of upgrades and maintenance, and in exceptional circumstances to handle problems with ENS, the ENS root will initially be owned by a multisig, with members of the Ethereum dev community as keyholders. In the long term, we would like to see the root multisig replaced by some form of distributed decision making process, but developing such a process will require time, thought, and care, which we anticipate will be a longer term effort than the development of the permanent .eth registrar. The current root keyholders are: Aron Fischer Dan Finlay Nick Johnson Juan Benet Piper Merriam Taylor Monahan Vlad Zamfir A majority of at least 4 of the 7 keyholders is required to effect any change to ENS. All keyholders agree to act with the consensus of the community in facilitating the following ENS development activities: Migrating the interim registrar to the permanent registrar once the evaluation period is over and consensus for how to build the permanent registrar has been reached using the standardisation process. Making changes to the ENS registry, primarily through additions of new TLDs when the community and the keyholders agree that such change is necessary. To eventually work towards replacing the root multisig with a distributed decision making process once each keyholder, in his or her own discretion, determines t the proposed replacement can effectively manage the governance of the permanent registrar. To take necessary action in the case of an unforeseen emergency, such as a critical vulnerability in one of the root registrars or the ENS registry itself. Although these are the stated goals of the community and the ENS keyholders, all parties that participate in the ENS understand and agree that the ENS is and will continue to be a work-in-progress and no specific result can be guaranteed. Participants in the ENS can view the source code for the ENS which is on the publicly-available repo here. The interaction between ENS solidity code and the practical real-world operation of the ENS is an experimental effort and any problems or issues with the operation of the ENS are not the responsibility of the the ENS many contributors or even the keyholders, but rather a natural result of how the ENS code has been used. It is up to all individual participants in the ENS, no matter their role, to suggest changes that will improve the utility of the ENS for everyone in the community. In the interest of clarity, once the ENS registrar launches, it is not within the control or direction of the Ethereum Foundation. Keyholders and others involved in the ENS registrar, each choose to participate solely in his or her individual capacities, wholly separate and apart from the Ethereum Foundation, and not as representatives, employees or any kind of agents of the Ethereum Foundation."
55,vulnerability,ethereum,Beyond The Hack: Business Lessons Learned From The DAO,1,6h91my,https://www.reddit.com/r/ethereum/comments/6h91my/beyond_the_hack_business_lessons_learned_from_the/,2017-06-15 03:32:56,"Now I understand that its easy to hate on The DAO, and that why I am writing this article, to get some sweet sweet karma. But also as someone who is claiming to be creating another DAO I should understand why The DAO failed and how to prevent my DAO from making the same mistakes. So this is a look into my mind as the creator of Seglos DAO. ###The DAO Starting a Venture Capital fund is a great way to lose a lot of money, this especially becomes a problem when your token is liquid and the asset youre investing in is illiquid. When the DAOs invested in startups wealth left the Fund with nothing to show for it. And as the Ethereum wealth was leaving the blockchain it was also leaving the control of The DAO; which turned The DAO into a glorified voting system and negated the benefits of having it be on the blockchain. Some how this voting system was mistaken for autonomy. The definition of autonomous is acting independently or having the freedom to do so independently (think AI) is the key word, the DAO definition of autonomy was decentralized decision making. There were too many tasks that had to be done off of the blockchain so they shifted that responsibility on to token holders. This required too much action from the token holders without much reward, leading to many participants being inactive and the few active participants having too much control. In line with that, The DAOs definition of decentralization was an organization with no hierarchy and no real organization tool. which sounds like a bad idea giving the amount of responsibility given to token holders. Not only is Venture Capital a great way to lose a lot of money, it also doesn't help that its more of an art rather than a science. The whole idea of wisdom of the crowd is to make better decisions than what a single venture capitalist could. But people are dumb, and in order to make the crowd wise we need a scientist to extract that wisdom. For example when proposing an investment, if 20% vote No and 80% vote Yes that actually might be a good indicator Not to invest. Because the normal probability could have been closer to 5% No and 95% Yes, but those 15% who are voting against the proposal because they have some information that the rest of the crowd does not. This phenomenon which is central to the idea of wisdom of the crowd was not taken into consideration when voting on DAO proposals, and the DAO did not incentive people with more information to share their wisdom. No one was really sure what problem The DAO was solving or where its value was, yet the solution was decentralization and autonomy. The most valuable asset that the DAO had was its users. I believe that Cryptocurrency / blockchain is a social innovation not a technological. Also the biggest barrier to financial innovation isnt the lack of technology, but rather the regulatory environment. (regardless of the moral implication of that innovation i.e. derivatives) For example I believe that The DAO could have succeeded had they become a regulatory arbitrage platform for foreign entities who wanted to invest in american startups; similar to how cryptocurrencies have succeeded by facilitating international remittance outside the regulatory framework. Because the creators of The DAO thought they were solving a tech problem they kept making the system more complex, and this obviously led to the DAO hack. Academic Emin Gn Sirer, who was involved in troubleshooting the DAO vulnerability, told CoinDesk that the workflow The DAO was designed to follow is so complicated that it will be very difficult for anyone to say what will happen next. More unit test could have perhaps discovered the vulnerability, but the mistake was more fundamental. Smart contracts are supposed to be trustless of humans and trustful of code, and if the code is so complex that the average consumer cannot understand it, how are they supposed to be trustless. Its literally like signing a contract that they dont understand. Building applications on Ethereum is unique in many ways. For example, because everyone will see your Solidity code, its now part of your marketing strategy (a programmers worst nightmare). Almost everything on the blockchain should be approached from a new way. Applying traditional ways of thinking to the blockchain will fail because they were made for the traditional world. On the blockchain you have the freedom and flexibility to build your own system from scratch. Solutions need to be consumer centric and most importantly built with the technological restrictions state of the Ethereum blockchain in mind. So the tech should dictate your business model, not the other way around. ###Seglos DAO To understand what Seglos is, please take a look at [this article](URL In summary Seglos is a 100% decentralized and autonomous fund that allows users to trade ETH/USD in a secure and anonymous manner. The Seglos has a compelling reason to be decentralized. Building on top of Ethereum helps tie our security to the blockchain, allow our users to remain anonymous and our lower cost. It also solves a real problem. Many users want to use their Ethereum wealth for living expenses, but dont want to lose out on the gains of their Ethereum investment. So they sell half their Ether for cash, and then come to Seglos to use the other half as margin to borrow more Ether so they make the same amount of profit. The Seglos smart contract is simple. It has less than 350 lines of code with 90% of those lines being constant functions. This is so every consumer can audit the code for themselves. If Ethereum applications are smart contracts then you should know what you are signing. Seglos dont take wealth off the blockchain by converting Ethereum to USD. The Ethereum will at all times remain in the sole control of the Seglos smart contract. This is so that even if every token holder decides to pull their money out of the fund at the same time they can all be fully compensated. Autonomous mean fully independent of human intervention, not decentralized decision making. I think of Seglos as a very simple AI, everything it needs to function is written in the smart contract and it operats without any human decision making. all the current administrative decisions can later on be made autonomous or be controlled by the token holders. The blockchain has an oracle problem, to mitigate that we limit the interaction with the outside world. With the Seglos DAO the only information that comes from the outside world is the exchange rate of ETH/USD, and this can also be fully decentralized with a process outlined by Vitalik Buterin here: URL"
56,vulnerability,ethereum,Ultimate security for wallets,2,62dri4,https://www.reddit.com/r/ethereum/comments/62dri4/ultimate_security_for_wallets/,2017-03-30 23:56:38,"Just sharing here my way to store a big amount of coin, and your are welcome to challenge it. ### Confidentiality - (""*keep the private key secret*"") I just use hardware wallet (cheap and simple). Remaining vulnerability: the content of (my) hardware wallet is not encrypted. If it get stolen, my coins could also be stolen (not easy for attacker but still). ### Availability - (*""don't lose the recovery seed""*) I split the [seed](URL using the [Shamir Secret Sharing algo](URL It allows to store each recovery key to trusted 3rd parties (ex: clouds providers, friend, office, buried somewhere, etc.). Remaining vulnerability: highly depends of your recovery plan. The good thing is that you are free to balance the risks according your threat model. Also, all this initialisation process if made on a live USB and offline operating system. Being paranoid, would you do it differently? Why? "
57,vulnerability,ethereum,Question about the Ethereum Blockchain from a noob,13,5zdau9,https://www.reddit.com/r/ethereum/comments/5zdau9/question_about_the_ethereum_blockchain_from_a_noob/,2017-03-15 03:53:33,"Hi all, I am relatively new to Ethereum and the blockchain, and I am really trying to deepen my understanding of it. However, I have a few questions that need answers and I can't find any better way to get them that to post them here. EDIT: added a question &amp;nbsp; **1. Observation:** Ethereum transactions can't be reversed. Once set, smart contracts can't be modified. Transaction reversal seem like a basic ""feature"" that a lot of people expect. Ex: Booking a room (creating a contract) and then cancelling the reservation (???) Buying an item (creating a transaction) and then returning the item (???) **Question:** How can companies tackle this? Is there a way to modify a smart contract once it's set? &amp;nbsp; **2. Observation:** Adding data to the blockchain costs fuel. Fuel, in the form of ether, varies in price. **Question:** Whats the minimal amount of fuel needed to create a contract or run a transaction? As the cost of Ether increases, will it not make it more expensive to use the blockchain? &amp;nbsp; **3. Observation:** Ethereum is the fuel miners ask for to mine the blockchain. This fuel, a fee, has no cap in terms of cost. On the bitcoin network, fees are getting out of hand to create a transaction. **Question:** Isn't the same problem going to happen to Ethereum as is becomes more popular? What steps are taken to prevent this? &amp;nbsp; **4. Observation:** From a browser, an extension (metamask) is required to access the Ethereum network. **Question:** Will the access from a browser ever be simplified? Will developers working on browsers (google, firefox, etc...) include blockchain access capabilities to ease access to the network? &amp;nbsp; **5. Observation** With Ethereum, creating a private blockchain is a capability. **Question:** Does this private blockchain run on top of the public blockchain? Is this private blockchain running on as many computers or is it limited to the computers running that private blockchain? &amp;nbsp; **6. Observation:** The current mining time of a block is currently around 10-15 seconds. This means that writing on the blockchain takes maximum this amount of time. When paying, or making a modification to the blockchain, faster data processing might be required. **Question:** Will the mining time of block ever be reduced? &amp;nbsp; **7. Observation:** To be settled, a smart contract needs an event. **Question:** Can an outside event be communicated to the smart contract via an API or a web hook/feed? If yes, then isn't that a vulnerability in the technology in the sense that the web hook itself could be hacked? "
58,vulnerability,ethereum,Vulnerability to 51% Attack Before PoS,4,60cmrc,https://www.reddit.com/r/ethereum/comments/60cmrc/vulnerability_to_51_attack_before_pos/,2017-03-20 08:50:48,"As we get closer to proof of stake, wouldn't miners start selling off their hardware to preserve capital, thereby lowering the hash rate, and weaken the network security before PoS gets fully implemented?"
59,vulnerability,ethereum,Chronobank Smart Contracts Security FAQ,14,5tohoq,https://www.reddit.com/r/ethereum/comments/5tohoq/chronobank_smart_contracts_security_faq/,2017-02-13 08:43:49,"## Chronobank Smart Contracts Security FAQ The following report details the finding made by Mikko Ohtamaa during his security audit of ChronoBanks core software, including the smart contracts code that will govern the issuance of Labour Hour (LH) tokens and the decentralised LaborX exchange. Experience Ohtamaa was chosen to conduct the audit due to his extensive experience in the smart contracts and wider blockchain ecosystem. Mikko Ohtamaa is CTO of [TokenMarket.net](URL a digital asset crowdfunding and secondary market service. Previously, he acted as CTO for peer-to-peer exchange service LocalBitcoins and has written a book about Operations Security (OPSEC). Ohtamaa has been developing smart contracts since 2015 and regularly speaks at conferences on running security-critical development operations. Layers of security and measured approach to development The ChronoBank team has planned for different risks, summarises Ohtamaa. Instead of trying to create a perfect smart contract, ChronoBank builds upon several layers of security and corrective actions. Issues can be mitigated and resolved without needing blockchain forks. In the end, despite how careful you are, human errors and external factors always find their way in. If it happens for space crafts, it may happen for your project too. In particular, Ohtamaa praises the teams measured attitude towards development and launch of the core ChronoBank software. The Ethereum community is young. In the past, teams have rushed forward to make a name for themselves. ChronoBank values investor protection and acts over longer, stabler, development and testing paths. Overall, the audit focuses on a number of different areas, from ChronoBanks broader approach to issues of security down to specific issues such as loss of private keys and smart contracts testing. These can be seen in the following, unedited report made by Ohtamaa: [URL How ChronoBank team approaches security? ChronoBank moves forward carefully. Security and investor protection are some of the main concerns in decentralised environments. Blockchain technologies themselves are not fully mature yet, so it is important to prepare for both known and unknown risks. ChronoBank plans for a holistic security approach with several layers of defences and corrective actions. The plan is to gradually roll out our decentralised ChronoBank platform during 612 months after ChronoBank crowdsale is over. The platform will be the first run in a testnet. During the roll out ChronoBank internal staff and external security researchers can detect issues and update related smart contracts with fixed versions. Furthermore, after the roll out, ChronoBank smart contracts contain safety and upgrade mechanisms to address the issues with the smart contract themselves. ChronoBank team has planned for different scenarios and risks. All the resolutions are opt-in from the individual community members and with a voting mechanism based on TIME tokens. No blockchain forks are needed for any resolution. How is ChronoBank platform built? ChronoBank platform consists of assets, exchanges and other related smart contracts for Ethereum blockchain written in Solidity smart contract programming language. Smart contracts are [publicly readable and testable in our Github repository.](URL How are ChronoBank smart contracts audited? ChronoBank works together with independent, smart contract developers to audit the security of our contracts. ChronoBank will conduct at least four audits before launching the full production version of ChronoBank. Furthermore, ChronoBank is running an open bug bounty program, one similar to bounty.ethereum.org, where [security researches are rewarded for the issues they find based on the level of vulnerability](URL How is ChronoBank prepared for human error in a smart contract? ChronoBank platform consists of multiple complex smart contracts. The amount of decentralised logic increases the likelihood of any human error. In the case an issue is found within the token smart contract code, ChronoBank can issue an upgrade proposal for the code. See _What is ChronoBank smart contract upgrade proposal mechanism_. What wallets are compatible with ChronoBank? ChronoBank LHT (Labor Hour Token) and TIME tokens are [Ethereum ERC-20 standard compatible tokens](URL Multiple Ethereum wallets support the standardised tokens, including, but not limited to Mist, Parity and MyEtherWallet. What happens if users lose their private keys? Like in all decentralised systems, in Ethereum the private keys are the responsibility of the user. By default, ChronoBank cannot recover or move account balances to a new account in the case the user loses his or her private key controlling the account. However, in ChronoBank platform supports lost wallet access recovery mechanism. The users are free to add recovery keys for their accounts. The users can add an another key, or a trusted party, that can recover their assets in the case the user loses his or her main private key. Can ChronoBank tokens be traded in several exchanges? ChronoBank LHT (Labor Hour Token) and TIME tokens are [Ethereum ERC-20 standard compatible tokens](URL Multiple exchanges have expressed their interest to support trading of these tokens after ChronoBank launch. A diverse community and increased liquidity give additional investor protection. How can ChronoBank recover from a third party exchange incident where somebody manages to steal large amount of tokens? The history shows that blockchain asset exchanges, centralised and decentralised, are subject to vulnerabilities that may lead to large-scale asset losses. ChronoBank is prepared to protect its LHT and TIME investors. ChronoBank itself does not control the transfer of the tokens after their issuance, as with any decentralised system. This is an important factor to ensure all the participants have equally free rights to participate the markets. In the case the incident is severe enough, ChronoBank community can come up with a remedy proposals. The community can decide the course of action between these proposals through TIME token voting mechanism. In the case of split opinions, different parties can continue on different resolution paths. Any resolution does not need the creation of blockchain forks, as ChronoBank itself is not a blockchain, and ChronoBank smart contracts themselves have built-in safety mechanisms. Can ChronoBank do a token reissuance if needed? ChronoBank platform supports trading of several tokens, including TIME and LHT, in a decentralised marketplace. ChronoBank assets implement a specific smart contract interface. In the case of an smart contract code needs to be upgraded ChronoBank can issue an upgrade proposal. For most of the issues, it is unlikely that a reissuance is needed. See _What is ChronoBank smart contract upgrade proposal mechanism_ for more information. What is ChronoBank smart contract upgrade proposal mechanism? ChronoBank assets have an upgrade proposal mechanism. The original asset issuer can propose an upgrade for an existing token code in the case issues have been found in the code. ChronoBank token holders may opt out from the smart contract upgrade. The upgrade proposal does not affect token balances of existing owners. There is a time window of three days to take action. All proposal will be announced and discussed with the community. There will be a voting mechanism where voting rights are based on the ownership of TIME tokens. Furthermore, the duration of opt-out time window itself is to be discussed with the community in the future. What happens if there are issues with ChronoBank platform or exchange smart contracts? In the case the underlying platform or exchange contracts need to be upgraded, new contracts need to be issued. This process is somewhat heavier than with an asset contract upgrade proposal. All old data will be migrated from outdated contracts. ChronoBank maintains separate events contracts, which stores all events, so the audit history remains. Moreover as far as any amount of exchange contract copies can be independently operated by any Ethereum user, in the case of issues community can just stop using exchanges that run wrong contract versions. How are ChronoBank smart contracts tested? ChronoBank smart contracts come with an automated test suite and tests [are automatically run on the TravisCI continuous integration server](URL The test suite is run every time there is a change in the codebase. External auditors can run the test suite on their local computers. How is ChronoBank prepared for Ethereum implementation issues? Ethereum is still an experimental technology. There have been issues with Ethereum node applications. It is not guaranteed the future implementations are issue free and some of these issues might affect directly or indirectly ChronoBank smart contracts. In the case of a bug in an Ethereum implementation that allows unauthorised balance changes through the Ethereum blockchain, ChronoBank is prepared to act with the Ethereum community. ChronoBank fixes all states for the last valid block on the current Ethereum blockchain and will produce the roll back on the new or fixed chain. How is ChronoBank prepared for Solidity compiler issues? Smart contracts are compiled with a Solidity compiler. Like Ethereum, Solidity is still an experimental technology. There has been an issue with the Solidity smart contract compiler. It is not guaranteed the future implementations are issue free either. In the case of a bug in the Solidity compiler implementation that affects ChronoBank smart contracts, ChronoBank may issue an upgrade proposal for a new asset contract. See _What is ChronoBank smart contract upgrade proposal mechanism_."
60,vulnerability,ethereum,Ethereum Morality - A Threat From Terrorists,0,5ukb50,https://www.reddit.com/r/ethereum/comments/5ukb50/ethereum_morality_a_threat_from_terrorists/,2017-02-17 15:48:27,"51% attack one form of technical attack, Morality Attack is another that leverage people's vulnerability. If a group of terrorist have some hostages (let's say some hundreds) and threaten to kill one hostage every day until Ethereum foundation do as they want. The request might falll into two categories: **Soft Demand** Some requests that is less troublesome and some certain people may feel comfortable to compromise to get over the situation. An example could be a ransom, a request for new Ether issuance (such as 0.25% of the system) specifically for a special address. This is the same as when Japanese government gave ransom to ISIS (after they killed some to prove that they could). **Hard Demand** Some requests that is more troublesome and some certain people may be strongly against it as it mess them or their future prospect a lot. An example could be a demand for a Hard Fork to change some certain rules for a limited period of time to favor it (they might keep some hostages for a while to ensure that no rollback happen). If the situation comes, maybe not in the form of people lives but something else, how would be the best approach to tackle them? Or we just leave it? *In a more centralized Ethereum version, the hostages might be the family members of the Ethereum community influencers (Ethereum foundation for example) and the terrorists might secretively bargain instead of making noise.* "
61,vulnerability,ethereum,Truffle updated to v2.1.1 - upgrade to solc 0.4.4,20,5asqbi,https://www.reddit.com/r/ethereum/comments/5asqbi/truffle_updated_to_v211_upgrade_to_solc_044/,2016-11-03 08:35:54,"Truffle has been updated in light of the Solidity storage vulnerability. Please uninstall and reinstall Truffle to ensure you're using the latest Solidity compiler: $ npm uninstall -g truffle Then: $ npm install -g truffle All credit goes to the great work of Solidity developers. Thanks guys! Cheers! Tim ------------------ Truffle beta has been updated as well. Please replace ""truffle"" in the above commands with `truffle@beta`."
62,vulnerability,ethereum,Question about Hashimoto attack vulnerabilities,6,4zcf0w,https://www.reddit.com/r/ethereum/comments/4zcf0w/question_about_hashimoto_attack_vulnerabilities/,2016-08-24 22:53:58,"Greetings! I was doing some research on IO/memory bound algorithms and stumbled across T.Dryja's ""hashimoto"" [paper](URL I noted in Etherium's [wiki](URL this statement on a pure ""hashimoto"" type of algorithm: * ""'Blockchain-based proof of work' - a proof of work function that involves running contracts taken from the blockchain. The approach was abandoned because it was long-range attack vulnerabilities, since attackers can create forks and populate them with contracts that they have a secret fast 'trapdoor' execution mechanism for."" Since hashimoto includes a sha256(prev_hash, ... nonce) input, I am a little confused by this statement and am wondering if someone can describe the type of ""long-range"" vulnerability that was a concern. Or if there was a discussion archived a link would be greatly appreciated. Thanks for your time!"
63,vulnerability,ethereum,REX MLS Crowdsale Concerns!!,10,51keer,https://www.reddit.com/r/ethereum/comments/51keer/rex_mls_crowdsale_concerns/,2016-09-07 19:20:04,"Hello everyone, my fellow crypto enthusiasts. I would also like to draw attention from /u/slothbag and /u/stangrotic. I would like to first of all disclose that I have invested my ethers to a good extent in REX MLS as I believe the idea is noble enough. But after the investment, I found out that there is a vulnerability in the token swap contract. I have communicated in the Gitter channel as follows: URL Keshav Gupta @kgrgpg Aug 31 02:05 @Stangrotic @slothbag I was just going through the source code of the deployed contract. ""tokenswapclosed"" is not set to true if the target of the crowdsale is not met in agreed amount of time. It is only set to true if the creator closes the sale himself by calling the ""CloseTokenSwap"" function or if the raised amount exceeds the max cap. This opens up a potential attack vector as it compromises the trustlessness while becoming vulnerable to human error of not calling the ""CloseTokenSwap"" function. Also, in this situation the creator can send the ether to an address after 4 weeks of end date of crowdsale... Correct me if I am wrong, please.. slothbag @slothbag Aug 31 02:17 Hi @kgrgpg , yes you are correct, in the event the tokenswap does not reach its goal I will flag the event as closed. This was an oversight, it could easily be done automatically in the contract. However the contract will not allow any more contributions once the enddate has been reached so there is no incentive for us to keep it open. Feel free to submit a pull-request to improve the token swap contract for others Also, yes it is true after 4 weeks we can transfer out any remaining balance. We have already had minor issues with ETH getting locked in contracts and not being able to be retrieved. This is a failsafe to protect against that. Contributors have 4 weeks to withdraw in a trustless manner, even after the 4 weeks we will not interfere unless there is an issue. slothbag @slothbag Aug 31 02:57 Oh I see your concern, it is possible to not flag the tokenswap as closed, hence people can't withdraw, then the creator can withdraw after 4 weeks. This is a valid concern and one which I had not considered. Check back here upon the end of the token swap, I should have closed it within a few minutes. Now as you can see, the responses have been reasonable from the founding team. But as of now, the crowd sale has only gathered 23k of minimum 45k ethers goal. About 17 hours ago, /u/stangrotic , has made this post URL Which basically says that they are in conversations with some investors to raise the remaining amount to reach minimum crowdsale goal. Now my concern is as follows which I have also posted: We would like the identities of the investors to be made public. Given the growth trend of your sale, I am skeptical about your popularity within the crypto community. Since you are still more than 25k ethers away to reach your minimum target, I have a reason to believe that you might put in the remaining ethers yourself to claim the ones that the crowd sale has gathered until this point. If you do not make the identity of your investors public then I am issuing a legal notice to audit your crypto accounts. Note that this post is not meant to offend REXMLS founders' intentions in any way but a genuine concern from an investor in the crowd sale."
64,vulnerability,ethereum,Optimal Strategies for an ETC-Killer Pool,0,4ufrd6,https://www.reddit.com/r/ethereum/comments/4ufrd6/optimal_strategies_for_an_etckiller_pool/,2016-07-25 09:53:05,"Although I'm a staunch pro-forker, I just want to start by saying that I'm not interested in giving a screed against ETC here. I actually find the fact that exchanges are going to start trading it extremely interesting, and I have a great degree of respect for the dedicated folks who made sure ETC happened. In that vein, I'm not so much intending to advocate for the destruction of ETC here, any more than discussions of the DDOS vulnerability created by the soft-fork constitute advocacy for actually executing a DDOS attack on the network. This is simply intended as a discussion of a long-term attack strategy, implementable by anyone capable of setting up a mining pool, that I think ETC can fundamentally not be secured against, as long as it's the minority chain, because the opportunity cost for miners to execute the attack is theoretically very close to zero, and even negative sometimes. So, here goes: ----- A few well-equipped individuals unilaterally deciding to make a 51% attack on ETC, while it might be an effective short-term strategy to stomp out a relatively unsupported ETC, is simply not a sustainable strategy, once ETC has anything more than an insignificant minority of total ETH + ETC hashing power dedicated to it. In order for an ETC killer strategy to be sustainable, it *must* be designed to work based on the same fundamental principle that governs all blockchain growth - it must be the economically optimal strategy for miners to pursue. This strategy is implemented at the pool level, because miners are essentially lazy about detailed strategy, generally preferring to make a coarse choice in strategy by choosing to mine in a pool that implements the details of some strategy the miner prefers. Right now, it is more profitable to mine ETC than ETH, however, in order to provide a first order incentive for miners to attack ETC (i.e. not one based on predicting that attacking ETC will eventually increase the value of held ETH), miners need to be able to attack ETC, with an expected payout greater than or equal to the payout of mining either ETH or ETC. First, the attack itself, in this case, consists of all participating miners simply mining empty ETC blocks, and rejecting all non-empty ETC blocks. As long as the attackers maintain the longer chain, this essentially freezes all extant ETC. Since the ETC-killer pool will be rejecting all blocks with actual transactions in them, for the sake of simplicity, it should assign block rewards in newly mined empty blocks directly into an exchange account deposit address, then automatically convert to ETH on the exchange each time the pool mines a block, and then distribute ETH to addresses of participating miners according to pool split rules. Next, it should only mine empty ETC blocks if the pool's HP is &gt;110% of ""real"" ETC mining power, and mining ETC is at least X% as profitable as mining ETH, otherwise it should simply mine ETH blocks like a normal pool. It should also implement connection interfaces for multiple profitability tiers for X, so miners can choose the rough profitability discount threshold at which they want to participate in a fruitful attack. The existence of profitability tiers below 100% allows for miners to also factor 2nd order incentives into their decisions. The resulting pool is configured such that ETH miners connected to the 100%+ profitability interface will always have at least the same expected payout mining in the ETC-killer pool, as mining in a standard ETH pool, so there is theoretically zero opportunity cost to ""signing up"" to participate in attacks against ETC, when said attacks are mathematically expected to be fruitful. Furthermore, any time mining ETC has a higher expected payout than mining ETH, all miners who don't want to support ETC can instead opt to get the higher payout by *attacking* ETC, neutralizing the financial incentive to ever mine ETC over ETH, given that there is at least as much ETH hashing power, that is willing to attack ETC for a higher payout than mining ETH, as there is hashing power trying to support ETC. That's basically all I've got at this point, guess I'm just curious what people think."
65,vulnerability,ethereum,I'm dissapointed of this community split.,26,4untrq,https://www.reddit.com/r/ethereum/comments/4untrq/im_dissapointed_of_this_community_split/,2016-07-26 19:38:34,"I got into ethereum because I was fed up with Bitcoin's stagnation and community. I didn't invest in DAO and I though it was crazy to see so much money poured into one experimental contract on a cryptocurrency that is basically only being developed. But I really liked ethereum's vision, I really liked fast transactions, I really liked scalability plans (PoS), I really liked the community, responsivness of developers, high compentency and professionalism of project's leader, Vitalik Buterin. After the DAO vulnerability was found and abused I was split between pro-fork and no-fork. I got both views. At first I was anti-fork as I didn't think it was wise of investors to invest in the DAO in first place. It looked like everyone was just seeing it as a risk-free investment with guaranteed profit. On the other hand, what happened was obviously a theft and since ethereum as a platform doesn't yet have all the development tools, good practises, etc matured, it's understandable that these events might occur in these early stages. If there is a way to get community together and come up with a solution, why not? Once the super-majority of community voted for hard fork, I accepted it and after the hard fork smoothly passed, I thought this is done deal. I was really surprised to see there is now motivation to run two seperate chains. Seeing all this division in community and all the problems associated with it (mainly replay attacks) saddens me. I had to tell my friend to wait before investing in ethereum as I'm currenlty not even sure what IS *the* ethereum. It's like living in some kind of quantum world where the stolen money is both returned and not. It's really mind fucking especially to see more people in ecosystem to embrace it (exchanges, wallet developers, investors,.). I don't want to sound like conspiracy theorist, but it really starts to look like a way to destroy the ethereum. I don't think 2 chains can coexist together and hopefully ETC will become irrelevant very soon as this only creates uncertainty and stops potential investors from investing. "
66,vulnerability,ethereum,"The replay attacks vulnerability is a serious one, and should definitely be addressed by the leadership.",19,4uo8hc,https://www.reddit.com/r/ethereum/comments/4uo8hc/the_replay_attacks_vulnerability_is_a_serious_one/,2016-07-26 21:55:38,"Firstly, very grateful for the Dev team, for the incredible work they've done in Ethereum, and their high level of professionalism through some very stressful times. In regard to the subject at hand, I say this in neutrality- the official Dev team should make a statement about replay attacks. Perhaps give a recommendation on people only using one chain or the other (with no other currency of the other type (Ethereum vs Ethereum classic) unless they really know what they're doing. Perhaps it would be wise to also come out and say which is primarily supported. I don't think its feasible to support both chains equally - by the way, supporting both chains essentially doubles the amount of support thats needed and opens up an enormous can of worms. Clearly, this wasn't the intention or the expectation of almost anyone, and none of us can read the future with 100% clarity, we can only adapt. But Ethereum is evolving to the point where, now that we have a market cap of $1 Billion, sooner or later people are going to start realizing this is real money. I understand the desire to stay impartial, but at a certain point, you need to mitigate security risks and keep the project cohesive. One question I ask is: So the community majority decided to move forward with the fork (and for those who didn't vote that's their fault, just like if one doesn't vote for their elected officials or anything else in life). -- So then shouldn't it be the foundations responsibility to serve the community? On this note, some will argue that EVERYONE didn't want the hardfork. Well is EVERYONE going to agree on everything? No. Are we going to have to support a million different chains because of different things people believe in? Once again, the rise of Ethereum classic has created a serious security risk, I think we were hoping this issue would blow over on its own, but it hasn't. Every day this vulnerability exists, is another day users are at risk, and are getting fleeced. Thus it is the responsible thing to do to protect your userbase, and at the very least clearly warn against the vulnerability and try to deter users from making themselves vulnerable. A statement is probably a good start. Finally, there are other risks too such as scammers selling ""cheap Ethereum"" which is really Ethereum classic to unknowing or disconnected Ethereum users (who might just quickly check the price). In the name of security this should quickly and promptly be addressed to avoid future suffering by unknowing users. That is all. Once again, thank you to the devs, and I'm sorry you guys have to go through these stressful times and decision making. I could only suggest that you meditate, be thoughtful and conscious, try to do the right thing in your leadership positions. God bless! "
67,vulnerability,ethereum,ELI5,1,4upd7p,https://www.reddit.com/r/ethereum/comments/4upd7p/eli5/,2016-07-27 02:02:24,Why wasn't the DAO vulnerability fixed the day it was found??? Is there some problem in releasing fixes quickly with blockchain software?
68,vulnerability,ethereum,Do we now know the vulnerability of frontier smart contract wallet?,6,4v5c49,https://www.reddit.com/r/ethereum/comments/4v5c49/do_we_now_know_the_vulnerability_of_frontier/,2016-07-29 16:46:40,No full technical writeup on the exploit was attached at URL Has the exploit now being revealed somewhere?
69,vulnerability,ethereum,Problems with Ethereum &amp; the fork,1,4vdce6,https://www.reddit.com/r/ethereum/comments/4vdce6/problems_with_ethereum_the_fork/,2016-07-31 04:38:17,"Based on reading these forums, there are a number of current problems with Ethereum, mostly to do with Coinbase: - you have to be really careful sending coins to Coinbase, if you send from the splitting contract they will throw your coins in the rubbish bin and tell you to go fuck yourself. - Coinbase isn't really handling the split and ETC well, there is some vulnerability where you can double your coins or something like that. - You have to be really careful separating your pre-fork coins into separate ETC and ETH wallet addresses before you do anything else, or else you get replay attacks that drain your coins into /dev/null. Is this list accurate? Seems like kind of a scary wild-west type of environment. In a way it is comforting that I can avoid most of the problems by just avoiding Coinbase, but is there a plan in place to make Ethereum stable and safe again?"
70,vulnerability,ethereum,Multisig storage with offline wallets,7,4wi8rn,https://www.reddit.com/r/ethereum/comments/4wi8rn/multisig_storage_with_offline_wallets/,2016-08-07 09:00:36,"**EDIT: DO NOT USE THIS CODE** Leaving it here for just for now. See addendum below. Let's say you're super paranoid about storing your ether. You don't trust that your online computer isn't hacked, so you want to keep the keys entirely offline. On the other hand, you're rather not keep it in a single address. A contract requiring any two of three keys for withdrawal would be nicer. Trouble is, the only wallets we have that can call contract functions (aside from the fallback function) can't conveniently do offline transactions. Myetherwallet is a great tool for generating simple ether sends offline, but doesn't yet work with arbitrary function calls (unless you paste in data generated by some other tool). Maybe one day it will, but in the meantime... Suppose we use a contract that does all the work in the fallback function? We communicate with it by sending ether. It stores three addresses, any two of which can send ether to withdraw funds. The first of the two is the withdraw address, and the withdrawal amount is the sent ether, times a million. Here's the contract. I've done basic testing but haven't really hammered it yet. contract OfflineMultisig { address a; address b; address c; address payee; uint payamount; function OfflineMultisig(address _a, address _b, address _c) { a = _a; b = _b; c = _c; } function () { //if not an approved address, do nothing but keep any ether sent if (msg.sender != a &amp;&amp; msg.sender != b &amp;&amp; msg.sender != c) return; //if null payee, this is first one if (payee == 0) { payee = msg.sender; payamount = msg.value * 1000000; msg.sender.send(msg.value); //ok if fails, want fixed gas return; } //if payee sends again, reset all to zero if (payee == msg.sender) { payamount = 0; payee = 0; return; } //sender is second sig so actually transfer, and reset to zero uint willpay = payamount; address willpayto = payee; payamount = 0; payee = 0; if (willpay &gt; this.balance) willpay = this.balance; if (!willpayto.call.value(willpay)()) throw; } } **ADDENDUM** I've realized this is not secure at all. The problem is an attacker with one key, who monitors transactions on the network. Let's say you send a transaction from key A to withdraw 100 ETH. An attacker who's gotten key B sees your transaction, and launches his own before yours gets in the chain. If the attacker's transaction happens to run first, then all the money will go to the attacker's key, and he's gotten your money while only having one key! With the code above it's even worse since both transactions don't need the same funds. The attacker could withdraw all your funds in a single attack with only one key. This is one of the main types of attack described in the [Oyente paper](URL (pdf). They're planning to release a tool that checks compiled contracts for this sort of vulnerability. **Fixing it** With further thought: Solidity has the msg.data variable, so maybe an easy approach would be to paste the recipient address into myetherwallet's data section, and have the contract convert that to an address. Require the second transaction to have the same msg.value and msg.data, and there's no more dependence on the order of transactions."
71,vulnerability,ethereum,What assurances are there that the HF chain won't go into vulnerability escalation ?,1,4wqi4g,https://www.reddit.com/r/ethereum/comments/4wqi4g/what_assurances_are_there_that_the_hf_chain_wont/,2016-08-09 00:49:57,"I lack the expertise to fully understand the risks of tinkering with the Ethereum ""engine"" in ways that are not supported by the [protocol specifications](URL I understand if this may sound like a stupid question, but could someone give a re-assuring argument why [the state modifications](URL will not lead to more problems down the road ? I ask from the precedent set by how The DAO smart-contract was audited and supported by a large number of core Ethereum devs, but it still managed to include a fairly obvious reentrancy ""bug"". The ""withdraw reentrancy bug"" may not have been obvious at the time because the technology was very new, but in 20/20 hindsight it now looks obvious and a similar mistake would most probably not be made. Would it be too farfetched to think that a similar ""bug"" may now be exposed in the ""application rescue chain"" ? What if this bug is very hard to discover right now, because the technology is so new, but in 20/20 hindsight a few months from now it could be that it is then fairly obvious to everyone that editing and ""hacking"" the state in these ways would cause problems. Is this FUD, or is it a real concern to a system with a market cap 10 times The DAOs ? Gavin Wood mentioned in his talk just after The DAO hack that if he were to recommend a HF, [he would like to do a bunch of tests first](URL Perhaps it would be in place with a few blog-posts that broadly talk about a few of those tests (conceptually), with a few schematics that describe why and how the team came up with a safe way to fork. "
72,vulnerability,ethereum,"ELI5 or Infographic request: Where is the ETH, ETC and DAO tokens on both forks and how did they get there? White hats, Robin hoods, attackers, splits, child DAOs -- OH MY! I need some boxes and some arrows, starting a bounty",24,4xefob,https://www.reddit.com/r/ethereum/comments/4xefob/eli5_or_infographic_request_where_is_the_eth_etc/,2016-08-13 02:38:47,"It's getting worse than Game of Thrones with all these actors and accounts and forks! **I got a $10 ChangeTip if someone can really break it down for me,** and I assume a visual aid would probably be helpful to lots of other community members as well? I understand the DAO vulnerability and how the first recursive drain-attack worked. I mostly understand the hard fork replaced the DAO contract with a refund contract and, what else? Moved all the attacker's funds back into it...? Now there's posts about the group that recovered ETC from the DAO attacker on the classic fork? I thought the ETC-attacker moved his ETC out of his child-split? Were the white hats able to steal from the attacker in a way he can steal back? Edit: graphic in progrerss! URL"
73,vulnerability,ethereum,"the ""No Seppuku Rule"" for when to fork",2,4pl46j,https://www.reddit.com/r/ethereum/comments/4pl46j/the_no_seppuku_rule_for_when_to_fork/,2016-06-24 14:54:35,"**Introduction** There are many reasons why people feel passionately about forking or not forking, but I think the loss (or preservation) of immutability is very high on many peoples list of concerns. Ive tried to read all the comments from the past 6 days, including the heavily down-voted ones, and I think the issue of immutability is the common ground that everyone (roughly) agrees is important. So let me try to assess the general sentiment in this sub. I may be wrong, but its worth giving this a shot anyways. My (current) assessment is that the present divide in the community stems (roughly) from people not agreeing on how strict we should be about preserving immutability in precisely 100% of contracts. And if it is not preserved in precisely 100% of contracts, then by what general rule (or heuristic) do we agree immutability can be lost (if it is to be lost at all)? **The Unstoppable Application Paradox** Let us now attempt to derive such a rule. Well begin with a paradox, because paradoxes tend to be good intuition pumps for making progress on tough problems. The paradox can be stated as, Let C be an unstoppable application that results in some state Z such that Z is a state-of-the-world that stops C. If C is not stoppable, then its definition dictates that Z does not exist, and if Z does not exist, then it contradicts the definition of C as an application that results in state Z. Lets call this contradiction the Unstoppable Application Paradox. This is clearly an antinomy, meaning it is an impossible paradox. So let us now use it as a basis for a new theorem: **Unstoppability Theorem:** *Let C be an application that results in some state Z such that Z is a state-of-the-world that stops C. If Z exists, then C is not an unstoppable application.* **Proof:** *Assume C is an unstoppable application. So by definition, C cannot be stopped. But if some state-of-the-world Z exists such that Z alters C, then C is stopped. But C is an unstoppable application, by definition, so if Z exists, we have contradiction. Therefore Z cannot exist if C is unstoppable. QED* **The No Seppuku Rule""** So far this is all pretty obvious stuff. How does this help with the fork debate? Well, it forces us to face the real possibility that there might exist an application that the Ethereum network cannot render unstoppable (because the Ethereum network cannot protect itself from certain states-of-the-world that jeopardize its own security, which leads to the application being stopped). If we can accept this much, then we can derive a general rule for when to *defensively* fork the network. **The No Seppuku Rule"":** *If a contract is immutable, then it must never result in a state-of-the-world that jeopardizes the security of its own network. Should a contract lead to such a state, then it could not be immutable and so we are not beholden to treat it as such.* Informally, the No Seppuku Rule simply says that we are not obligated to honour a contract that would harm the security of the network, since inaction would eventually lead to that contract being altered once the cost of attacking the network became trivial (due to the network having been mostly abandoned). What does this rule mean? Seppuku is the term for ritual suicide. The idea here is that if there exists a contract that is so terrible it would lead to the demise of Ethereum, then Ethereum is not obligated to honour that contract, since that contract would eventually lead to its own demise by way of the demise of Ethereum. We thus do not betray our principles by altering such a contract, because it does not qualify as an immutable contract. Ill try to rephrase this again, just so it can be better understood. If there exists an application that leads to the demise of Ethereum, then that application was not unstoppable, since it eventually stops itself. The network may thus reach consensus to stop such an application (if it exists), since said application would eventually be stopped by the demise of the network. Importantly, such an act does not betray our principles, since such an application cannot qualify as an unstoppable application (strictly speaking, it is of the wrong *type*). **Conclusion** To summarize, a contract that threatens the security of Ethereum cannot ever be an immutable contract, and so it does not qualify as the kind (or type) of contract that Ethereum is built for. We are thus not obligated to treat it as we would other contracts. Meanwhile, we are still obliged to treat all other contracts as-if they are effectively immutable, conditional on the continued security of the network. The question we should then discuss is, would theDAO contract (with its easy-to-exploit vulnerability) result in a state-of-the-world that threatens the security of the network to such an extent that immutability is lost irrespective of whether we fork or not? If a case can be made that theDAO is such a contract, then it was never an immutable contract, and therefore we do not betray our principles by altering it. It is now quite easy to argue for a fork, because theDAO contract (as it was written and then deployed), would have allowed explicitly malicious attackers to take possession of up to 15% of the ETH supply (potentially more if the sale had been even more ""successful""). This would then have led to risks to Ethereum's security, including the cost-free ability (to the thief) to readily and repeatedly crash the price of ETH such that it becomes (repeatedly) unprofitable for some miners to secure the network. Clearly this opens Ethereum up to a variety of repeated and sustained attacks, any of which could cause chaos, losses and and a mass exodus of users and capital from the network at a point in Ethereum's life where such attacks would be very difficult to recover from. There is also the risk of [wallet poisoning](URL and of course the risk that that much ETH in a the control of a malicious attacker would pose after the transition to PoS. Now, it follows that if we accept that theDAO (as it was written and deployed) posed a very serious risk to the network, then the one risk that we do not need to worry about (per the No Seppuku Rule) is the risk of moral hazard from forking to alter this toxic contract. And this reasoning follows due essentially from the Unstoppability Theorem, which tells us that the theDAO was not, and could not, be an immutable contract because it leads to its own (eventual) demise, and thus it strictly cannot qualify as an unstoppable application. TL;DR: With this post I hope to have merely offered a way to dissolve the ""moral hazard"" of forking on security grounds. **Postscript** There are of course many other reasons to fork with a clear conscience, especially on pragmatic grounds, but only the security angle was explored in this post. Also keep in mind that I may have made an error in my reasoning. It is late, and it's been a long week."
74,vulnerability,ethereum,ELI5 : the upcoming fork,0,4pmppe,https://www.reddit.com/r/ethereum/comments/4pmppe/eli5_the_upcoming_fork/,2016-06-24 22:53:40,"Hi, I've been offline a while, so here are my questions : I see the dao has been hacked but to a child dao so the coins are unspendable for some time, the rest got drained to a white hat dao using the same ""vulnerability"" right? There are talks about forks, and as a miner i'd like to be shure what i'm voting for. From what i understand, there is one option that Will revert transactions to keep the stolen ethers in the dao (Will it revert every transaction since?) And another one that Will make the stolen coins unspendable. How exactly does this work, witch is witch, and Will the ether lost go back to the rightful owners? (If so how) Cheers and thanks for racing the time to answer!"
75,vulnerability,ethereum,"Beyond ""Learning a Lesson"" - How much Eth is too much eth in a smart contract?",3,4puuqv,https://www.reddit.com/r/ethereum/comments/4puuqv/beyond_learning_a_lesson_how_much_eth_is_too_much/,2016-06-26 08:55:58,"I'm not a developer so I apologize if this ends up sounding ignorant to those in the development communities. Having said that, is there a rule that can be put into the protocol or blockchain that would limit the amount of Eth that can be stored in any one contract? I see this as a vulnerability should we achieve mainstream acceptance and newer members flood the Eco-system with little appreciation for history and/or maybe no understanding of the system in general. I also understand that this sounds like a Bitcoin 1mb block size issue that could cause problems down the road. What are the options?"
76,vulnerability,ethereum,The soft fork vulnerability shows that we must take protocol changes seriously,58,4qbtbj,https://www.reddit.com/r/ethereum/comments/4qbtbj/the_soft_fork_vulnerability_shows_that_we_must/,2016-06-29 07:10:02,"The Ethereum protocol is a precision machine, assembled over the course of more than a year by some of the smartest people I've had the pleasure of meeting. It balances dozens of competing design goals against a wide range of possible attacks and usecases, and so far has juggled it all admirably. But, like all precision machines, we must make any changes to it with the utmost care. Imagine it as a literal machine, making widgets in a factory. Even the smallest change to a single part-- shorting a lever by a quarter inch, or using copper instead of steel-- may at best lead to inferior widgets, and at worst could make the whole thing catch fire. With the soft fork, we tried the smallest of tweaks on one of the smallest parts. We didn't even touch the core protocol, just the clients' mining strategy. And yet, this quarter-inch difference was enough that, if it were released, it could have taken down the network's transaction processing capabilities for as long as the change was active. If we understand that the Ethereum protocol is a precision machine, then this shouldn't surprise us, but it should inspire us to caution. While the experts agree that hard forks are in some ways more safe than soft forks, they are certainly not _completely_ safe. Any imprecision in the fork specification, or any difference between client implementations, could lead to an unplanned chain split. Any exchange, retailer, or partially-centralized dapp which doesn't update in time will be exposed to a variety of attacks. And of course there are the ""unknown unknowns"" that are always present when messing with a complex, precision system: we might find a seemingly innocuous change breaks something completely unexpected. None of this is to say that we cannot or even should not do a hard fork. Many good arguments have been raised by smart people on both sides. But if we choose to do it, let's do it with open eyes, and realize what we're doing: choosing to accept systemic risk on behalf of all Ethereum users."
77,vulnerability,ethereum,DOS Vulnerability in the soft fork is actually a good thing,75,4qkdkm,https://www.reddit.com/r/ethereum/comments/4qkdkm/dos_vulnerability_in_the_soft_fork_is_actually_a/,2016-06-30 17:04:56,"This means that Ethereum is more censorship resistant than everyone, including Vitalik, realized. For example, if miners decide that some contract should be censored, and all transactions that interact with it should be ignored, it will be possible to DOS attack them. This means the only way something can be censored on Ethereum is through a hard fork."
78,vulnerability,ethereum,Ethereum vs Emercoin - The Difference of Approach Between Blockchains,0,4qsndh,https://www.reddit.com/r/ethereum/comments/4qsndh/ethereum_vs_emercoin_the_difference_of_approach/,2016-07-02 02:33:48," Original publishing date: 03/11/16 Oleg and Jason worked on a thesis showing the inherent vulnerabilities of a Turing-complete system several months ago now. It is a shame it was not released to the public as it may have persuaded some investors to perform due diligence as to what exactly they were investing in with Ethereum. Since the Emercoin Team publishes technical articles into Russian, there is no person translating these into English, so the DAO Hacker Scandal made many people lost their money, after this event people have remembered this article, but it was too late! For those of you who are looking to invest into a currency that has proven functionality that addresses real-World problems, here is your opportunity. Since 2013 Emercoin has been making real, tangible strides in the industry while the majority of investment capital has gone into outright scams or failed ventures. What this says about the collective mindset of current investors, I will leave up to you to decide. The cryptocurrencies Emercoin and Ethereum appeared almost simultaneously, but it is Ethereum that is on the public's lips. In the short term view, mining Ethereum is profitable, but the technology on which it is based is secondary and has little application for real world solutions. Emercoin not only has innovative ideas and great potential, but is already widely used in various fields of application. Emercoin VS Ethereum Oleg Khovayko, expert in the field of cryptography and computer security and one of the cofounders of Emercoin, explains more about the approach to blockchain development: ""Emercoin and Ethereum appeared around the same time. What is the difference in approach to the blockchain taken by Emercoin and Ethereum?"" To summarize Ethereum  maximum innovation, but a lot of critical pieces left untested. Emercoin takes a more conservative approach  maximum security. Our long term goal is a proven, tested operation without the shadow of failures or errors. With Ethereum, it is possible to incorporate many flexible/complex functions however with the Bitcoin and Emercoin blockchains, minimal functionality is incorporated to ensure the chains work for specific purposes. The blockchains of Bitcoin, Ethereum, and Emercoin all have a similar structure. The differences arises when it is observed what is being added on top of, or to, the blockchain itself. For example, the blockchains of Bitcoin and other top cryptocurrencies are designed with one primary function in mind, the transfer of currency. With Ethereum, extra functions and services each of which may have their own purpose are integrated as a part of the blockchain itself. So what is the difference? Ethereum could be considered a Turing compatible system or ""Turing Complete""  The approach of Emercoin is different. From a development standpoint, we are not advocates of Turing compatible programs. When a system is considered Turing compatible, meaning it can be universally simulated/run, it brings with it common security flaws, errors and other negative factors detrimental to the program itself. As an example, Satoshi used very primitive script in the creation of Bitcoin. It is Turing incompatible: There are no branches or loops, the program is executed in a linear fashion. It is similar to the HTML language, which is also Turning-incompatible: A page or code is presented but it has no loops, so with HTML it is impossible to write a program that will run indefinitely. In Java or C++ it is possible to write loops in to the program, making Java and C++ Turing compatible languages. Ethereum script is similar to these languages in the sense that those who are familiar with them can create scripts for Ethereum. Why do we think our approach is better? It is imperative to clarify the objectives of our project. Security and safety of the network is the number one priority, not the ability to do everything all at once. When working with such cutting edge technology trust is the most important factor in driving adoption. Once trust is established, new innovation and design can be added on top of a secure platform. Adding too much without ensuring security is a reckless move and can lead to platform failure and lack of adoption. This approach of course does not lend to being in the spotlight with constant coverage on development. Instead, we continue to focus on practical applications for the blockchain with a wide horizon of development possibilities. Different approaches to the blockchain dictate different solutions. I believe Ethereum is a good platform for experimentation and verification of new ideas. The contracts can be used for testing, but to use them in critical systems is very risky. The applications are simply not mature enough at this time. What are the pros and cons of these approaches? One of the benefits of the approach taken by the Ethereum developers is great flexibility. There is very much conversation regarding the platform because there are so many opportunities for potential application. From the same attribute that could be considered positive, comes the negatives. There is not a proven level of security that is acceptable for critical applications, especially those that deal with large sums of money or human life. I dont believe there is any piece of perfect software. What we have however is security, stability, and the fact that the Emercoin platform simply works. Everything is based on the original code Satoshi has written and has repeatedly proven it can withstand a wide range of attacks. It has withstood the test of time during its brief existence and at the same time has improved and become more resilient against malicious actions. The Emercoin platform is built as an industrial and business level application and is compatible with many existing components and systems. There is also a laboratory option with Emercoin where it is possible to test with many different new ideas and experiments. Despite this, it seems many people have a different opinion. If Ethereum isn't safe, then why use it? My comments are not to indicate it is absolutely unsecure, just that it truly has not had the development or time to have passed the test. It has not yet earned its rite of passage and may be a long way away from doing so. Long term development of the code is important because it has proven that stress on the network is one of the best forms of security development and preventing crypto-attacks. Therefore, I suppose it would be possible to use in non-mission-critical applications. There are already people using the platform, but it is almost purely for experimentation. My past experience in the security department of the banking sector has left an indelible imprint on me and has a large impact on the technical solutions applied in Emercoin. This drives extra care in the development and incorporation of any external code. What do you think is the reason few people have heard about Emercoin, and so many of them talk about Ethereum? Theres very much excitement when a new project is in the early stages of development and promises great solutions. As an example, when speaking about our EMC DNS system, the proponents of Ethereum said that with their contracts 40 lines of code could create the same system. There are examples on technical forums where users of Ethereum claim that this could be done in two lines of code. These statements have been made but after nearly a year and a half of time to develop the solution using Ethereum, no progress has been made. In general, a significant problem is that technology has become too sophisticated for the average person, or even a small ambitious investor with some knowledge. This brings forth those involved in technology that can represent themselves well, but deliberately mislead those who do not understand their message. These people know that when they make the right presentation about themselves or their technology, it isnt necessary for them to make a serious technical analysis of what they are trying to promote. It is up and functioning  there are sales presentations and numerous prospects. Everyone is trying to sell the future by painting it in bright colors. It is mostly talk without true substance. We prefer to keep our approach simple and take the high road - we simply get things done. An industrial and engineering approach. We make real world solutions. How do you see the future situations of Ethereum and Emercoin? What do you expect to unfold? Most likely everything will disperse. After all, everyone has more or less located their own niche at this point. As Ive said: Ethereum is perfect for experimentation and testing new ideas. Emercoin is a system for industrial application. It will be used by those who appreciate long-term reliability and platforms that get the important jobs done. Not those who are looking for a multitude of extra and unnecessary features. There are some points of doubt I have on the feasibility of Ethereum. Their claims of nearing the performance and transaction processing of Visa when it comes to transaction per second is one I strongly object to. However my objections go beyond the scope of this article. There are many questions I have when it comes to the claims made by proponents of Ethereum, because I have a great understanding of the dangers and vulnerability of their approach. Why do you think banks are cooperating with Ethereum? I certainly dont know the criteria used when the banks are selecting a blockchain to work with. I would suppose that its because Ethereum is in the media spotlight, and useful for testing new ideas. After all, as far as one can assume, banks dont need a cryptocurrency for immediate use. It is a technological basis on which they can attempt to test what they want. So in essence, they are experimenting, collecting some data for themselves. We are taking our own path. Our DNS zones are already being implemented in real sites. EMCSS/EMCSSL systems are already used to control real computer farms. The EMCLNX advertising system already has real traffic and payments. Regarding advanced development - we are currently working with the Microsoft Azure platform. We are creating a series applications for the Azure market. The first application will be an online wallet without a miner, and with some other modifications. In addition to existing ideas and plans we are looking how we can push development even further, thus creating interaction between Microsoft and the OpenLedger exchange. After a bulk of this development has been completed, we will let the market appreciate and decide what is required. I believe all we have to offer will be found useful for users around the world. Let a hundred flowers bloom! Official Emercoin Website Twitter: @EmerCoin_EMC Emercoin Bitcointalk Announcement Thread Emercoin Reddit Emercointalk Forum - See more at: URL"
79,vulnerability,ethereum,"If the hardfork has a bug/vulnerability, does the 'fix' need to be hardforked for it to work?",0,4qx6sk,https://www.reddit.com/r/ethereum/comments/4qx6sk/if_the_hardfork_has_a_bugvulnerability_does_the/,2016-07-02 23:17:32,"EDIT: LOL at downvote right after I posted. ETH to moon trolls at work. And yes ETHtomoon trolls, the ETH price will plummet once there is a bug/vulnerability found in the hardfork....Very very fast."
80,vulnerability,ethereum,"Let us not forget DAOs are part machine, but also part human",3,4qykhj,https://www.reddit.com/r/ethereum/comments/4qykhj/let_us_not_forget_daos_are_part_machine_but_also/,2016-07-03 05:13:12,"Satoshi created Bitcoin because he saw that corruption is a vulnerability of centralization. Leave things to politics if you want them to go sour. To be frank, no system of human decisionmaking is without its flaws. But I feel we've gone to the other extreme with the DAO discussion. We as technologists tend to distrust people and trust technology, in that order, to the point that somehow it became implied that leaving any decision to people is dangerous or wrong. This is not how Bitcoin was created. The greatest economic invention of Bitcoin was applying gamification, alignment between interests of different parties, to naturally bring people to agree on things that are mutually beneficial. Technology is only a small part of why Bitcoin works. If you think technology is more important part of Bitcoin's success, watch the private blockchain experiments that are currently underway. Those that focus on technology alone and fail to align interests will fizzle. And this is the point I'd like to make. We do not want to leave decisions to machines and machines alone. That leads to Skynet. That leads to Matrix. We do want to use technology to nudge people towards better decisions. But we don't want a single person to be able to subvert the system to fulfill his own needs at the expense of others. That's exactly the problem Satoshi started with in the first place. If we do leave DAO funds in attacker's hands, I believe we have failed to improve on the legacy fiat currencies. We actually made it worse, as distribution of control is better than a single person even with fiat; currently, the DAO attacker has bigger influence over Ethereum than anybody else. I also believe that, contrary to what media and every bureaucrat is happily telling us, regulation is not the answer. Costs of regulation are oligopolies and impedance of the new. Regulation or simply allowing thugs to do what they want are old answers to old questions and have been tried before. Let's leave the old ways behind, but let's not forget to learn from them. Humans are not perfect and neither is the code. We need to push further with carefully tweaked systems that align purpose and interests, while at the same time discouraging abuse, kleptocracy, thievery and corruption. Perhaps the complete DAO splitting functionality was too much too soon. It was a source of confusion from the start, which usually points to overly complex design. Maybe simple ""withdraw ether"" method should have been present from the start. But let's not allow that to distract us from the main issue of DAO technology we need to solve: unstoppable code is useful solution for some problems, but how do we create DAO which empowers people and at the same time protects them from malicious actors taking over? How do we design kill switches for DAOs that automatically activate when DAO fails in its purpose? P.S. Recommended reading for anyone dealing with DAOs: Daemon and Freedom books by Daniel Suarez."
81,vulnerability,ethereum,"Ethereum is fine. What should now be known as The Flawed DAO looked great, but has a problem. Dont fork Ethereum. Its not broken. Write smarter contracts. (375 words)",2,4r2ld3,https://www.reddit.com/r/ethereum/comments/4r2ld3/ethereum_is_fine_what_should_now_be_known_as_the/,2016-07-04 02:10:26,"Ethereum did not miss a step before, during, or after the attack on The Flawed DAO. Consider Ethereum to be a system of railroad tracks. There is no problem with the tracks. Consider The Flawed DAO to be an untested investment train. It was in many ways the first of its kind. It looked pretty good, but the details were deep, theoretical, and not thoroughly tested. The trains fuel tank had a design flaw. It was attacked through this vulnerability and $50m of fuel got taken. Fortunately, it only got taken as far as fuel tanks secondary containment. These are the findings: Failing marks on the design flaw that was exploited, well done on secondary containment, the outcome on $50 million is still unknown. The Flawed DAO was one of many trains running on the Ethereum rail system. The tracks did not attack a fuel tank or any other train. Ethereums rail system is still fully functional and open for business. Any other good running trains (smarter contracts) still being developed and tested can expect to run on Ethereums known rails as they exist. They do not need to consider stalling because of The Flawed DAOs bug. If written with this lesson in mind, they do not have the bug. I am satisfied with Ethereum because it executed as coded. I am disappointed with The Flawed DAO. Ethereum and Solidity are still under intense review. As far as we know, they are fine and we can accept their outcomes as The Law. The Flawed DAO is a lesson that taught us about funding caps, other-than-intention escapes, very effective emergency terminations, even stronger internal rollbacks to correct any un-intended execution(s), and yes, sometimes human intervention. This is no time to shy away. Instead, get back to it and figure out solutions. Continue to rethink, rebuild and roll out cautiously. The future of cryptocurrencies is before us with another lesson out of the way. Ethereum is fine. The Flawed DAO has one tiny bug. This is unfortunate but should not be a surprise in a new-fangled thing. Learn from this. Leave Ethereums claim of demonstrated immutability intact. Write and rigorously test better contracts. There are no failures, only successes and learning. The futures so bright, I gotta wear shades. "
82,vulnerability,ethereum,[Security] The Old-To-New-Chain Replay Attack And The New-To-Old-Chain Exchange-Withdrawal Replay Attack (Post-Fork Vulnerabilities),55,4t2jfq,https://www.reddit.com/r/ethereum/comments/4t2jfq/security_the_oldtonewchain_replay_attack_and_the/,2016-07-16 11:48:22,"All of the major exchanges, including Kraken, Bitfinex, GDAX, Gemini (Edit: Polo just announced they will allow withdrawals onto both sides of the chain ""for those interested in keeping their tokens from the losing blockchain as a keepsake"" that's incredibly dangerous and makes this attack viable: URL have come out and confirmed that they will halt all ETH deposits and withdrawals before block 1920000 (fork trigger) and resume them when a single chain is identified as the clear winner, afterward the they will support only that chain. This means that, when they resume, they will hold all pre-fork ETH, which is valid on either chain, but then will allow withdrawals onto only one chain. You may wonder what happens to the equally valid ETH existing on the other chain? This may be a non-issue many times because it is usually unlikely that two chains will operate for any period of time together, but here several variables may it more likely and the chance of a quick convergence to a 90-95% consensus seems unlikely (you can disagree with me if you like, but ignoring the possibility seems foolish): (1) the geth client is being modified for the the fork in such a way as to make a single piece of software usable for both chains with only a toggle of a --support/--oppose flag, which is unlikely to affect the performance long term, and so every subsequent geth version will likewise be usable on both chains (i.e., you won't need a separate repo or different software to keep running old ethereum) with only a toggle. There will be no burden for the EF to support both chains, and it'll happen inherently. (2) there are lots of smaller exchanges competing for business, it seems likely one will offer the minority chain currency and so it will have some liquidity (they certainly offer worse alt coins after all); (3) this is a contentious fork without the typical 90%+ consensus needed to ensure this doesn't happen. Even carbonvote has hovered around 20% dissent, and the miner votes so far have been &gt;25% dissent with ethpool even showing a majority No for a while. It seems like there will be at least somewhat of a protracted fight (see URL URL A simple majority for a HF won't work like a SF, and convergence will be slower, making this attacks more likely both short term and long term. (4) many have vowed (whether you believe them or not) to pursue a censorship resistant chain after the fork. Both miners and stake holders who want to keep the old chain tokens. **Here's the problem: the replay attack.** The way the fork code was designed, any transaction sent on one side of the fork will only be sent to peers on that side (p2p network split). But, nothing invalidates the TX on the other chain; so the transaction body itself will be equally valid on the side. So, if you capture the transaction from one side, and just route it to a node on the other, it will proceed on both sides. This creates lots of potential attack vectors  replay attacks going both directions on the chains, and worse, imagine the chaos if we somehow have to revert and go back to the original chain post-fork when it was devastated by replay attacks while no one was looking (everything always goes according to plan and software never has bugs...right?) **Old-To-New Chain Replay Attack:** I hear people not taking this seriously because, why would replay to the OLD chain what happened on the NEW chain, it has no value. That's a minor issue. What about if the OLD chain keeps working, and you replay OLD chain TXs on the NEW chain, and are thus able to steal NEW chain valuable ETH? That's the major concern. If two chains operate together, I would expect to see TX replays on both sides, and it'll be chaos. **The Exchange-Withdrawal (New-To-Old) Replay Attack:** This also presents a very interesting issue given that exchanges will only plan to withdraw onto one side. Post-fork, if you withdraw ETH from an exchange, then simply replay the withdrawal transaction on the other chain, you will get a free withdrawal on the other side. Who cares? Well it will matter big time if we have to ever use that chain again, or if it continues on its own. Obviously, if you withdraw to new chain, replay it on old chain, then the something causes the old chain to have value making exchanges want to switch chains and call another mulligan, they'll have a major problem. But, it's not just exchanges that cause the issue. *My disclosure. I'm a huge supporter of Slock.it and their whole team. I've been working on the DAO since the very early days, and was involved in writing a lot of the copy for the DAOHub website. I'm a major DTH holder, and a major ETH holder (I stand to gain financially most from what helps the network, but the HF will obviously benefit me in ETH terms). I think the HF can be a good solution and I support it happening, and I supported the SF (until the vulnerability was detected). But, as the HF is coded and planned right now, I think it's just dangerous, rushed, and short sighted, and I think we're all going to get hurt by it. As I've said for a long time on here, I wish we could do a simple fork, freeze the funds (much like the logic of the SF but preventing the DOS vulnerability), then take the time to do this correctly making sure everyone is treated fairly and we do it securely with a second hard fork.* I'm curious to hear people's reactions to this, and perhaps some explanations why it won't be so bad. We are way down the road here, and it's going to be a bumpy ride, but let's please not cause more damage to the platform we have all dedicated so much to because of momentum. "
83,vulnerability,ethereum,"[Replay Attack Redux] EF Devs Confirm The issue Is Real; Alt Coin Exchanges Will Support The Old Chain Giving It Value; Miners Will Mine It Due To Lowered Diff And Higher Rewards; Users Support ETHC  Ignoring This Is Too Much A Risk, Please Fix It.",54,4t82uq,https://www.reddit.com/r/ethereum/comments/4t82uq/replay_attack_redux_ef_devs_confirm_the_issue_is/,2016-07-17 14:02:10,"I originally wrote an article warning of the replay attack risk, here: URL Most people dismissed it as FUD, although no dev has come out to say I'm wrong. I originally noted several key points that, if they were to come to pass, would make the attack for problematic. In just last day we've seen those concerns realized and more develop making the threat more real: (1) Alt coin exchanges (at least bitsquare) will trade the secondary coin, so it will be able to be sold. I think we'll see lots of exchanges support it, it will have value. The sheer volume of useless alt coins supported out there shows that exchanges will support any junk coin, and this may not be all that junky. (2) miners will mine the coin and will be able to sell it. F2pool the second largest mining pool (which may change) will mine it. Lowered difficulty will make proportional mining rewards bigger. There are far worse alt coins out there that have traction. Old ethereum will be a viable alt coin and will make miners money. (3) Polo will allow withdrawals of the secondary chain coins, so people can have access to them to sell or trade. (4) The ETH classic movement, while largely ridiculed, seems to indicate there is a community of people who will use the coin. We can't say it'll just die. (5) This is important: *the same identical software will run both chains. This will be true even during metropolis and serenety (the only change is to the DAO contract state, nothing makes the software itself different). So the old chain will be equally supported by devs and upgrades. There's no extra effort needed to keep the software running, and I dont foresee there ever would be. People seem to think one chain will have Vitalik and the EF devs while the other will just wither and be unsupported. It's important to understand, this is not true* (6) the EF devs aren't saying I'm wrong about the risk/attack. You can read on twitter here: URL Vlad agreed he has considered the issue too, Avsa seemed to think we did implement a solution with nonces, but Jeff confirmed we did not. We made a solution for this issue on morden, why do we ignore it here? I don't think anyone denies that the replay attack is a real scenario if you cannot with 100% certainty guarantee you will never want to touch the secondary chain. That's clearly not the care here  it will continue in some form. In the case of Frontier vs Homestead, it was not a risk because no one was expected to want Frontier. *On the other hand, in the case the Morden testnet vs Main net, we know there will be parallel chains, and a protocol change was made to use non-overlapping nonces to prevent the replay attacks  why are we ignoring the same threat here?* Here, not making a similar protocol change to prevent the replay attack scenario is just irresponsible. We knew we had to do it for morden, why not here? It just seems like too big of a risk. This fork is completely uncharted waters, and we actually got into this mess by ignoring known vulnerabilities and discounting their likelihood to bite us. We knew re-entrancy was a DAO issue, we say that no funds were at risk and it wasn't a problem. We were wrong. We wrote the SF code knowing the DOS concern. Only later did we release it was really a big problem. We were wrong again. This hard fork is complicated, and the game theoretical vulnerabilities in addition to unforeseen code related issues, makes it so incredibly risky. And this time we could endanger the whole network if we screw it up... imagine having to roll back the fork, or a vulnerability being exploited after the fork  the whole experiment could be endangered. I am not trying to spread FUD, I am 100% pro-fork as a solution to the problem. But, this current plan of ignoring known problems (not fixing the replay issue), and rushing into the fork logic just to solve it now... I think it's a huge mistake. **So, I've said my piece, I won't keep arguing any more and calling me a FUDer really doesn't matter (I think you're greedy and short sighted, so I guess we're even) I just hope that I'm either totally wrong about the risks if you're going to ignore me or that we change course to do this right. We'll all know soon enough. I've put so much personal time, money, and emotion into this network, I will be devastated if we lose it all. Good luck to us all.**"
84,vulnerability,ethereum,"So many bugs and vulnerabilities. And teh Devs always saying 'all is fine'. Well no, all is not fine. No reason to hold Ethereum coins at the moment.",0,4thv2f,https://www.reddit.com/r/ethereum/comments/4thv2f/so_many_bugs_and_vulnerabilities_and_teh_devs/,2016-07-19 08:48:24,"Bug after bug vulnerabilty after vulnerability. When does it stop? First the DAO hack of 50 million, then a failed softfork and now? What is next? A failed hardfork? Really, how can people hold Ethereum coins at the moment. This is a very scary time to be in it. Better watch from the sidelines."
85,vulnerability,ethereum,I tried steps to withdraw DAO and it shows my balance as ZERO 0,2,4u1kb1,https://www.reddit.com/r/ethereum/comments/4u1kb1/i_tried_steps_to_withdraw_dao_and_it_shows_my/,2016-07-22 17:02:08,"When I check my balance on daohub, with my current mist wallet address it is zero, but using my old ETH address it shows the correct 4500 DAOs. **I remember making a change to the wallet address due to some possible vulnerability reason that MIST stated should be changed. What are the proper steps for peeps that made this change to their Eth Mist Wallets?? HAALP!! **I followed these steps documented here: URL"
86,vulnerability,ethereum,Ethereum Hacking Incident - Waiting for Your Help,53,4mioq8,https://www.reddit.com/r/ethereum/comments/4mioq8/ethereum_hacking_incident_waiting_for_your_help/,2016-06-05 01:09:25,"Fundraising Site: URL Due to the hacking on May 12th, 2016, Patrick (stardust) lost all 7218 ethers that he had mined since the launch of ethereum. Instead of falling to disappointment and giving up, he traced and extensively investigated the hacker's attack, found the attack vector, and discovered critical security vulnerabilities in the geth-mist wallet. He immediately reported this information, in detail, to ethereum community. Following the exposure of the vulnerabilities, the geth-mist dev team applied two urgent security patches. The desire and need for a stronger security system is widely shared in the ethereum community. We welcome the dev team's security patches, and believe they will develop a stronger security system in the future. However, instead of appreciating Patrick's efforts to document this security vulnerability to help prevent future incidents, despite his large personal loss, he was met with suspicion of his motivation and personal attacks. We hope that his reputation is restored and that he receives fair acknowledgement of his contribution to the security interests of ethereum users. If you believe he contributed to the ethereum wallet's security, please show your support by participating in this fundraising campaign. All fund collected will be sent to Patrick's wallet, but if more funds are collected than his loss, the excess ethers will be donated to the ethereum foundation's official bounty program. Fundraising Ethereum Address: 0x840cA3C8b01870024AB4999bA7844f1B96e34ba5 You can verify that this address belongs to Patrick on his daohub profile. URL Fundraising Status URL To see donation activity details prior to 5/31/2016, please check the following address. The previous address(0x2d4768a34fCF8ee7986be8Bc64C7c4BF5cFe19ab) was his exchange address and could not receive ethers from wallet contracts, so we began to use his personal address(0x840cA3C8b01870024AB4999bA7844f1B96e34ba5) instead. URL (Old Address)"
87,vulnerability,ethereum,WARNING: Does anyone know what atomx.io is? Looks sketchy and possibly dangerous...,7,4nlb5v,https://www.reddit.com/r/ethereum/comments/4nlb5v/warning_does_anyone_know_what_atomxio_is_looks/,2016-06-11 23:03:42,"EDIT: I MEANT atomx.org EDIT 3: False alarm - I have no idea why these guys are obfuscating their git history and github names, but otherwise it does look like a legit port of EtherEx which does not use a distinct ERC20 wrapper for Ether. The bad eth wrapper address isn't in the dapple environments but does map to defined contracts - there's no dappfile so figuring out where those were coming from took a long time. Otherwise great job, it's actually a great dapp and hopefully this gets them some extra attention =P ~~EDIT 2: I did find contract code and it has no apparent vulnerability - it appears to be a modification of EtherEx updated for the new token standard, BUT THE MAIN POTENTIAL PROBLEM IS THE ETH TOKEN WRAPPER WHICH I CANT FIND IN THIS REPO~~ ~~Does anyone have any info on it? Until someone steps forward to claim ownership I think it should be regarded with EXTREME caution:~~ ~~* There are references to ""dapple"" which is the toolchain used to build makerdao.github.io/maker-otc (and its dependency github.com/nexusdev/dappsys which defines an ETH wrapper), but it looks to have been somehow extracted / repackaged.~~ ~~* It has a git history that ""suddenly starts"" as a fresh import from old version history~~ ~~IF THIS DAPP IS RE-USING CODE FROM MAKER-OTC, YOUR ETHER IS AT RISK BECAUSE THERE IS A VULNERABILITY IN THE ETHER TOKEN WRAPPER (this was addressed early yesterday in response to Peter Vessenes' blog post. Post-mortem is coming and everything is safe IF NOBODY ELSE IS USING THE WRAPPER WITHOUT OUR KNOWLEDGE (actually it's still safe just massively inconvenient for your users) - this thread is not for discussing that issue).~~"
88,vulnerability,ethereum,"From the MAKER DAO slack: ""Today we discovered a vulnerability in the ETH token wrapper which would let anyone drain it.""",82,4nmohu,https://www.reddit.com/r/ethereum/comments/4nmohu/from_the_maker_dao_slack_today_we_discovered_a/,2016-06-12 04:52:49,"URL --------------------------------------------- Slackuser: (u/i3nikolai) nikolai [1:33 PM] (June 11, 2016) @channel tl;dr Go cancel maker-otc orders right now. Today we discovered a vulnerability in the ETH token wrapper which would let anyone drain it. This was the contract used by maker-otc and was intended to be used for the all future dapps that manipulated Ether. We successfully executed the attack ourselves after proving we could spend ETH from the admin multisig. Everyone's tokens (both ETH and MKR) are safe, as far as we know. What this means for us is that we have to use the chain state right before we executed the attack to refund everyone their ETH. This includes all orders in maker-otc and all other ETH wrapped in the wrapper. The main issue right now is that any open MKR sell orders can be ""bought"" with unbacked ETH tokens. This is a minor annoyance, because we can send the ETH tokens to the seller as if the trade actually executed. What this means is that how fast we can get everyone's ETH back depends on how much damage trolls do by buying MKR with ETH that the multisig holds now. Again, in any case, the ETH is safe, and there's no other known exploits. There will be a full post-mortem before tomorrow night. Sorry everyone - this problem snuck past 2 nexus devs and an external auditor. Hopefully our bright red warning text communicated this risk. "
89,vulnerability,ethereum,Critical update RE: DAO Vulnerability,243,4oiqj7,https://www.reddit.com/r/ethereum/comments/4oiqj7/critical_update_re_dao_vulnerability/,2016-06-17 21:13:41,"Critical update RE: DAO Vulnerability URL Expect further updates inside the blog post (they will also be replicated here). An attack has been found and exploited in the DAO, and the attacker is currently in the process of draining the ether contained in the DAO into a child DAO. The attack is a recursive calling vulnerability, where an attacker called the split function, and then calls the split function recursively inside of the split, thereby collecting ether many times over in a single transaction. The leaked ether is in a child DAO at URL even if no action is taken, the attacker will not be able to withdraw any ether at least for another ~27 days (the creation window for the child DAO). This is an issue that affects the DAO specifically; Ethereum itself is perfectly safe. A software fork has been proposed, **(with NO ROLLBACK; no transactions or blocks will be reversed)** which will make any transactions that make any calls/callcodes/delegatecalls that execute code with code hash 0x7278d050619a624f84f51987149ddb439cdaadfba5966f7cfaea7ad44340a4ba (ie. the DAO and children) lead to the transaction (not just the call, the transaction) being invalid, starting from block 1760000 (precise block number subject to change up until the point the code is released), preventing the ether from being withdrawn by the attacker past the 27-day window. This will provide plenty of time for discussion of potential further steps including to give token holders the ability to recover their ether. **Miners and mining pools should resume allowing transactions as normal, wait for the soft fork code and stand ready to download and run it if they agree with this path forward for the Ethereum ecosystem. DAO token holders and ethereum users should sit tight and remain calm. Exchanges should feel safe in resuming trading ETH**. Contract authors should take care to (1) be very careful about recursive call bugs, and listen to advice from the Ethereum contract programming community that will likely be forthcoming in the next week on mitigating such bugs, and (2) avoid creating contracts that contain more than ~$10m worth of value, with the exception of sub-token contracts and other systems whose value is itself defined by social consensus outside of the Ethereum platform, and which can be easily hard forked via community consensus if a bug emerges (eg. MKR), at least until the community gains more experience with bug mitigation and/or better tools are developed. Developers, cryptographers and computer scientists should note that any high-level tools (including IDEs, formal verification, debuggers, symbolic execution) that make it easy to write safe smart contracts on Ethereum are prime candidates for DevGrants, Blockchain Labs grants and Strings autonomous finance grants. "
90,vulnerability,ethereum,So the DAO is cancelled?,0,4ois53,https://www.reddit.com/r/ethereum/comments/4ois53/so_the_dao_is_cancelled/,2016-06-17 21:29:32,URL Or am i reading this wrong? Best result imo. Ever tried. Ever failed. No matter. Try Again. Fail again. Fail better.
91,vulnerability,ethereum,People should stop repeating the same mistake,3,4oiu3z,https://www.reddit.com/r/ethereum/comments/4oiu3z/people_should_stop_repeating_the_same_mistake/,2016-06-17 21:46:54,"Latest two biggest known Ether loss has happened before and people keep repeating them. The first one is the mistake of opening RPC to everyone: URL You think this is a new one? Nope it has happened before. URL Ethereum Foundation even published a blog about it URL The second one is the latest DAO hack. URL This is a newly discovered vulnerability right? I mean only after MakerDAO revealed this a few days ago URL Nope actually this kind of subtlety is already reported in LeastAuthority's report in early Olympic phase: URL &gt;The CALL opcode (used to send messages to other contracts, or send funds to non-contract accounts) will fail if it causes the call stack to exceed 1024 frames. This is not an exception: instead, the CALL operation indicates an error, instead of returning data from the callee contract Early contract like Etherpot is affected by this(I think there was a reddit post but I can't find it): URL The fact that DAO was made by the same people that was part of Ethereum Foundation at one time adds insult to injury. Now the solution is 'Let's Destroy Fungibility', which sets a bad precedent in the future. TL;DR Please understand any reported security related issue and try not to repeat them. History doesn't repeat but it does rhyme. "
92,vulnerability,ethereum,Was TheDAO problem avoidable ?,2,4oj71w,https://www.reddit.com/r/ethereum/comments/4oj71w/was_thedao_problem_avoidable/,2016-06-17 23:22:35,"Some days ago Stephan Tual [pointed out](URL the Recursive call vulnerability affecting all Solidity smart contracts was indeed present in the DAO. I wonder if this was the same problem that hit TheDAO today and if so, why we did we take the damage?"
93,vulnerability,ethereum,Exchanges should look for large leveraged shorts of ether prior to theDAO being hacked.,1,4ojlxu,https://www.reddit.com/r/ethereum/comments/4ojlxu/exchanges_should_look_for_large_leveraged_shorts/,2016-06-18 00:57:45,"I don't believe the hacker was looking to ever monetize the stolen ETH. If he was able to exploit the recursive calling vulnerability he would also be intelligent enough to understand simple trading logic in a black swan type environment. The easiest way to monetize this hack and get away with the cash is to trade the event. It's that simple. If we want to catch the hacker, the exchanges need to do some digging."
94,vulnerability,ethereum,The DAO's hack might be a good thing,1,4ojoif,https://www.reddit.com/r/ethereum/comments/4ojoif/the_daos_hack_might_be_a_good_thing/,2016-06-18 01:13:25,"While everybody is freaking out because their money was siphoned off from the DAO, I want to make the remark that this event might be very good for the long term advancement of Ethereum and decentralized organizations as a whole. The DAO, while fully operating is Ethereum's first major attempt at creating a decentralized organization. It's an infant project, and to expect an infant to not fall while trying walk for the first time is unreasonable. We should expect some hiccups as the projects like this progress. The hacker revealed to the entire community one of the many possible vulnerabilities and left all the money siphoned off inside of child DAO account where the hacker can't withdraw the money for another 27 days. Therefore the money he stole was really temporarily displaced as long as the community can make a decision within those 27 days. The hack looks like more of a lesson by somebody with vested interest in Ethereum than a flat out thievery. Overall, this hack is telling us where to look for future failures. If Ethereum is to last in the long run, more vulnerability hacks need to happen like this. I propose that we create some sort of bounty system to make hacks more controlled. If I were to use an analogy, the DAO is an infant in Ethereum. While I don't have full knowledge of how this hack happened, this hacker seems to have a vested interest like a parent or family member that's trying to teach through failure. Maybe the entire community could learn from how the hack took place."
95,vulnerability,ethereum,"TheDAO vulnerability was not just a vulnerability for the DAO, but for all Ethereum smart contracts, TheMaker contract experienced a similar thing a few days ago",1,4okgg3,https://www.reddit.com/r/ethereum/comments/4okgg3/thedao_vulnerability_was_not_just_a_vulnerability/,2016-06-18 03:52:19,"So for all the people claiming it was TheDAO's failure, sorry to tell you it appears to actually be a bug in Ethereum smart contract function overall."
96,vulnerability,ethereum,The attacker didn't drain all the funds.. only about 30% of them. Could he resume the attacks if he wanted to? (With a new set of transactions?),3,4om41m,https://www.reddit.com/r/ethereum/comments/4om41m/the_attacker_didnt_drain_all_the_funds_only_about/,2016-06-18 09:50:21,"As title says, I am curious about this. I would imagine the vulnerability is still there since we haven't patched it."
97,vulnerability,ethereum,Consider the DAO hack from an Investment Bank's POV.,2,4ombto,https://www.reddit.com/r/ethereum/comments/4ombto/consider_the_dao_hack_from_an_investment_banks_pov/,2016-06-18 10:47:02,"I don't own DAO but I do own Ethereum. So when the value of my Ethereum suddenly dropped I couldn't really explain why. Then I read the events of 17-06-2016 am. 150 million USD of ethereum potentially to be stolen by hack on the DAO? Let em burn was my initial response; anyone following the Ethereum news knew the DAO had serious vulnerabilities; warnings were given in advance that the DAO was flawed and risky. Exactly why I didn't get involved in it. I thought the DAO was stupid in implementation; an oversized mistake waiting to happen. But I left them be because in the end I think Ethereum is bigger than the DAO and able to survive it, regardless of what happens. So the real dilemma for me became an ethical one; let em burn, lose money and punish them the hard way for not responding to warnings on DAO vulnerability much sooner. Because in money if there is an exploit, someone will take it. But then I thought; if there was a reset switch which could revert a crime then the victims won't get hurt but have an opportunity to learn from their mistakes: Going too big, too fast and not paying enough attention to the variables. So I sat back. I'm not voting on this. I'm not taking a side but here's a thought: If I were a big investment bank looking at Ethereum technology, looking at what it could do and how it could power my financial processes to save time, improve efficiency and make money would I not be reassured that such a switch to undo such monumental cock ups was at hand? Personally if I was a big bank and that reset switch was pulled on my observed experiment when it went wrong during early development to take it back to a place in time it was working so I can fix the bug, I would have more confidence in the product as a whole. Knowing that the safety switch is there and that there is an option to take it is the ultimate reassurance in the long term (as long as it's ethically used). Either way I think this event marks a show of strength for ethereum as it has shown the outsider world looking in that it has a chance to recover and right it's wrongs in the face of massive catastrophe even if it doesn't have to. That's an exceptionally strong thing; allowing your system the opportunity to learn from mistakes and grow without destroying it completely. Personally I think the DAO should disband following this regardless of how it plays out. Personally I hope future builders of DAO like systems will pay more attention to what came before them and be acutely aware of what problems can occur. Personally I believe this will slow the growth of Ethereum in the short/intermediate term but long term much like BTC is currently winning out, so will Ether (unless BTC becomes like Eth). But personally I think these are two different things. Vengeance and retribution or compassion and forgiveness? I'll be watching closely, but this time I'll be holding onto my Ether regardless of outcome. "
98,vulnerability,ethereum,"A soft fork and/or hard fork damages the people who shorted the DAO, knowing it was a basket case.",2,4omlbh,https://www.reddit.com/r/ethereum/comments/4omlbh/a_soft_fork_andor_hard_fork_damages_the_people/,2016-06-18 12:00:42,"Whatever gains they had made will get erased. This is much more akin to stealing than the hack. The hack was a vulnerability that everyone should have known they were taking on as a risk. The interference of Vitalik and Slock.it to create forks that overwrite transaction history was not supposed to be part of the game. Who can have any faith that anything will not be undone going forward? Blockchains are supposed to abide by the creed ""In Math We Trust"", but if these forks go through Ethereum's should be ""Whatever the Cabal Decides"", which really is as opposed to decentralized philosophy as possible."
99,vulnerability,ethereum,The existential threat of left versus right Ethereans,1,4op5ct,https://www.reddit.com/r/ethereum/comments/4op5ct/the_existential_threat_of_left_versus_right/,2016-06-19 02:24:43,"This DAO debacle has brought to light the implicit ideological composition of this community. I will characterize this composition broadly in terms of a left and right wing divide. From what I can gather, right wing Ethereans emphasize a radical libertarianism committed to an unwavering sense of self-ownership and individualism. The self clearly takes precedence over the community. Property clearly takes precedence over the public good. The right wing is like the father. Disciplined, enterprising, and merciless. They value personal responsibility regardless of the consequences. It's quite irrelevant to them that people have been harmed when they perceive that harm to have been a result of their own actions. And thus, if code is law then the code is absolute. And if other people are ""too stupid"" or ""weak"" to make the correct choices with respect to the code, then they should suffer what they must. That is their mentality. That is the logic of the right. In contrast, Ethereans on the left gravitate more towards a communitarian or cosmopolitan form of anarchism. The community, society, or the world at large is what takes precedence over and above the individual. They view the public good as being more righteous than self-interest. The left is like the mother. Supportive, understanding, and compassionate. They recognize personal vulnerability and value fairness regardless of the consequences. They see themselves promoting the humanitarian interest. It is completely relevant to them whether or not people are harmed in a way that they perceive to be unjust. And thus, if code is law then the law is absolute. Nobody is too ""stupid"" or ""weak"" to be allowed to suffer for no good reason. For them, everyone is limited. Everyone is subject to making mistakes. Everyone is dependent on each other. That is their mentality. That is the logic of the left. Both the right and the left are idealistic. Neither one is no more ""pragmatic"" than the other. Both are striving for their ideals. We are seeing this dynamic play itself out with respect to the DAO, just like we've seen it played out in modern politics. Once more, people cannot set aside their differences or work towards a mutual solution. Neither side is willing to comprise because both sides are convinced of their own ideals. If history is any indicator, the right will seek to demoralize or conquer the left. And the left will try to enlist popular support for a just cause. Neither side will actually succeed to convince the other. Supposedly, it'll be left up to chance whether or not the miners are predominately on the left or the right of this ideological spectrum. That said, I think it's fair to speculate there are more stakeholders with influence on the right than there are on the left at this point in time. That is, supposing a large enough overlap exists between the sentiments of crypto-enthusiasts and the Ethereum mining community. It's highly probable, to my mind, that the typical miner is a young middle / upper-middle class Western-European male and early Bitcoin adopter. What I've come to understand about this group, especially over the past days, is that they have emerged into a libertarian super-majority element in the Ethereum community. I don't think reddit is an absolute measure of this phenomenon, but it makes sense. The cryptosphere is fairly unique politically and with little new blood actually coming in from what I can tell. If this is the demographic in control, it stands to reason they will remain strongly antagonistic to the interests of the left. I sincerely doubt Vitalik's symbolic authority carries very much weight with them. Clearly, this group cannot be so easily persuaded. We know the right is largely satisfied with doing nothing. The extent of their cooperation rests strictly on the soft fork. Perhaps because it satisfies their sense of punishment or because it will increase the value of their personal holdings. Self-interest will dictate that they insulate themselves from any costs incurred by supporting the victims. Likewise, personal responsibility may also dictate that the thief acted maliciously and should be disciplined. The investors on the other hand can never be saved. They failed and should accept their losses. That's likely to be the majority decision. There will, of course, be purists who will argue for the attacker. But to appease the left even they can probably be motivated to make a concession. The right probably already has a good sense of their power in the community. They feel confident that they can prevent a hard fork. Their mood is one of arrogance. The left is most clearly in favor of the soft AND hard fork. Making the victims of the DAO whole, restoring confidence, and helping the Ethereum ecosystem to flourish is their main objective. They could care less if the code is technically immutable or if people are technically at fault for making a bad investment. They could care less if this seems like a superfluous use of power. For them, this is the right thing to do. Rejecting the forks will create a powerful disincentive for them to help this community in the future. They are disillusioned with the project and may move to other things that will respect their ideals. Their mood is one of anxiety. What I hope this thinking reveals, if you accept the premises, is that this conflict is having a distinct effect on the identity of the Ethereum community. But more than that, it's revealing what I would perceive as a highly destructive imbalance of power. What do I mean by that? I mean the Ethereum community is not uniformly distributed. It's a distorted reflection of people's actual beliefs and values. Those who have come into Ethereum from the left are the super-minority. Similarly, the general public is not included in this decision. What we have is a non-representative front-loading of political power. A fractional minority of the actual population is deciding the fate of an ecosystem that will potentially affect millions of people. Realize this is not merely about the Ethereum community itself. This is about who has a legitimate right to control the ultimate effects of a public infrastructure. If this were conventional politics, we'd have a strong opposition party to the right. But that's not what we have here. What we have is this individualist super-majority vs. communitarian super-minority polarization, and a vast unaccounted population that will never have the opportunity to make a decision at this moment. Why is that relevant? Because what we do here will determine people perceive Ethereum and its community for years to come. We will either become the callous crypto-geeks that allowed this incalculable criminal act to take place, or we're the moral center of a decentralized governance system. I have no other reading of the current situation. Something of enormous circumstance is being decided without a proper accounting of public interests. The left is that accounting. If this is correct, Ethereum seems destined to be dragged into a similar political composition as Bitcoin. More and more from the left will be repelled by the right's ethical lapses in judgment, just like they were repelled from Bitcoin. We will have one and the same group continuing to dominate the cryptocurrency space. The technology will have improved, but the community will have stagnated. This in itself will demolish any realistic plans for mass adoption in the near to mid-term future and undermine investor confidence. It will turn off many of us because the operators of the network will be seen as falling out of alignment with the public good. And Ethereum will be nothing more than a cool project that was way ahead of its time, forever tainted by the self-righteous insiders who couldn't see the larger picture. And that'll be that. The left will pivot and move its support to the next promising innovation. That's my bleak and speculative take on what's happening right now. I don't trust this community any longer. I trusted the Ethereum foundation and its early community. I trusted the developers. But the community at this moment is quite sick. I say that in the most compassionate and non-judgmental sense possible given the circumstances. What we're seeing right now is a beautiful world-changing project potentially burning to the ground. We're seeing it turn into something it was never meant to be. Forking from Bitcoin had a purpose. It was a statement not merely about technology but an opportunity to express a different set of human values. I can only speak for myself, but I never shared the values of Bitcoinners. I am diametrically opposed to them. If the dynamics of this community are such that you insist to carry your weight into Ethereum and transform it into Bitcoin 2.0, then what can we do? You have the power to do that. That's your abusive right. I will quietly exercise my right and exit. I expect I won't be alone in that sentiment. And I can only hope, the developers themselves will have the foresight to be among us."
100,vulnerability,ethereum,There should not be any forks,0,4opa6x,https://www.reddit.com/r/ethereum/comments/4opa6x/there_should_not_be_any_forks/,2016-06-19 02:57:11,"If the vulnerability in the code that the hacker exploited was in Ethereum itself I would understand the reason for a fork but its not. The error was in the code in the DAO contract that Slack.it wrote. Smart contracts are suppose to run autonomously and how well they run is dependent on how well they have been coded. EVERY person who bought DAO tokens had access to that code and were even warned about security issues weeks ago. Any fork would be the equivalent of Google, Microsoft or Apple changing their OS frameworks because a developer had mistakenly coded a vulnerability in one of their apps. They may add a safeguard to help developers make mistakes in their next OS update but they would not fork their OS. "
101,vulnerability,ethereum,"Hard Fork is designed to fix a contract vulnerability, not reverse any transactions.",0,4oqdsr,https://www.reddit.com/r/ethereum/comments/4oqdsr/hard_fork_is_designed_to_fix_a_contract/,2016-06-19 07:25:23,this is not bitcoin Hard Fork transaction reversal.
102,vulnerability,ethereum,Can we fix the recursive attack vector that led to the DAO attack and caused the vulnerability in the MkrDAO contract?,2,4oqh5a,https://www.reddit.com/r/ethereum/comments/4oqh5a/can_we_fix_the_recursive_attack_vector_that_led/,2016-06-19 07:49:11,I know it is best to keep it simple but fixing the root cause of these vulnerabilities would only harden future Ethereum contracts. So if/when there is a fork can this be solved in addition to other issues?
103,vulnerability,ethereum,My attempt to explain the DAO argument using cookies.,2,4ora7y,https://www.reddit.com/r/ethereum/comments/4ora7y/my_attempt_to_explain_the_dao_argument_using/,2016-06-19 11:22:50,"So, here's my explanation of the DAO argument: Imagine you have a giant cookie jar (TheDAO.) Everyone brought their cookies (Ether) to put into the jar, and got muffins (TheDAO tokens) in return. Normally, people have to agree on how to share the cookies, and you can only take out cookies a certain number of times. However, someone finds out that if you kick the jar just right, you can get your hand past the electronic lock and open more times than normally allowed. (Recursive calling vulnerability.) The people who made the jar (DAO developers) don't fix the jar because the trick is difficult to do. One day, a random guy (The attacker) comes by, does the trick, and begins to steal all the cookies, but he stops once the jar's CEO (Vitalik) comes by and threatens to make a new one."
104,vulnerability,ethereum,"""Hacker"" identified? Any truth to this?",0,4oscv9,https://www.reddit.com/r/ethereum/comments/4oscv9/hacker_identified_any_truth_to_this/,2016-06-19 17:13:45,"Noticed a comment on the ""critical vulnerability"" blog post that purports to identify the malicious actor. Screenshot below. Has anyone vetted this or is it nonsense? URL"
105,vulnerability,ethereum,What happens when multiple attacks like this are occuring in the next 3 weeks?,2,4otkb4,https://www.reddit.com/r/ethereum/comments/4otkb4/what_happens_when_multiple_attacks_like_this_are/,2016-06-20 00:43:32,Is it then possible to just roll back all transactions? isn't this getting more and more complicated? Also I thought that this vulnerability was closed within the last hours? What happens if this vulnerability is now used 100 times? or is this not possible? Would be nice to hear some answers! thanks!
106,vulnerability,ethereum,"I hear this alot these days, but it is a fundamentally flawed argument.",0,4oydto,https://www.reddit.com/r/ethereum/comments/4oydto/i_hear_this_alot_these_days_but_it_is_a/,2016-06-20 21:58:27,"&gt; If over 51% the network agree on it, ANY, I repeat, ANY code can be changed. This has been and will always be true. This is simply how blockchains work. There is no such thing as ""precedent"" in blockchains because the situation can always change and they are not run under the law of governments, therefore the slippery slope is a fallacy. But heres the thing, can miners in bitcoin vote on a patch that changes the code of an app built on bitcoin? Say open bazar? Or shapeshift? NO miners in bitcoin cannot do that because apps are COMPLETELY SEPARATE from network consensus. Network consensus is for the network, and only the network. Thats how blockchains work. In ethereum, it turns out that network consensus is also for the apps that are built on ethereum. This is a huge difference from peoples idea of how blockchains work, and a very real vulnerability in the long term. It is my belief that if ethereum is going to gain mainstream trust, developers have to be certain that the businesses they build are not going to be subject to change or censorship based on network consensus. This is not possible in bitcoin, but it is possible in ethereum. So no, this is not how blockchains work, and ethereum has a big decision ahead of it. I think once this fork brings awareness to the fact that apps built on ethereum are subject to change and censorship by network consensus ethereum will have lost its promise of decentralisation, because 51% of miners voting to change an app is a central point of failure. Alot more trust has to be placed in the ethereum miners than in bitcoin miners. We talk about ethereum being immune to censorship by trusted third parties. But in ethereum miners (3rd parties) have the ability to, if they reach consensus, censor applications. Bitcoin does not work like this on the application level. Only ethereum puts apps or businesses in this position. And this fork is only proving how possible that reality is. When I heard about ethereum it was my assumption that if you build an app or a Dapp then it is untouchable by anyone forever. But this drama is proving otherwise and showing that harsh reality to the world. Ethereum apps are not immune to censorship by trusted third parties. We just have to TRUST that miners will never reach consensus to change the code of an app. This debacle has shown the world that ethereum is NOT trustless. It is mine, and many other peoples opinion, that if ethereum is to last long term and maintain trust long term, then there needs to be hard coded gurantees that application level changes to apps are impossible even by network consensus. The only thing network consensus should be for is to make changes to the core protocol. Businesses and apps should be completely separate from network consensus. My analogy. Imagine if every user of the internet today (from my grandma to an african teenager in Kenya) had a vote in which applications should run on the internet. 51% of the population would be deciding how the 49% live their lives! How on earth is that a democratic system? So if this is also true of ethereum how on earth is ethereum a democratic system? 51% deciding what apps the 49% can use. That is the opposite of democracy!"
107,vulnerability,ethereum,Unsubbing until all this is over and done with.,9,4oz4m9,https://www.reddit.com/r/ethereum/comments/4oz4m9/unsubbing_until_all_this_is_over_and_done_with/,2016-06-21 00:58:21,"Tired of seeing so much crap pop up in my feed from this sub now day after day after day now. I said it once, and I'll say it again. The DAO is not the entirety of Ethereum, and people should stop treating it as such. 15% of 14% that was 3% of all total supply was lost and somehow we lost 40% of the value of the currency. I'm sorry you lost money, but the reality of it is that that Ethereum *worked as intended*, the problem was there was a vulnerability in the DAO's contract, and people just shrugged it off. I even remember seeing the post about the vulnerability being [found here on June 12th](URL and going ""that's funny, why publicly post about a vulnerability and not fix it beforehand?"". It's no surprise that someone took advantage of it after the fact, and now everyone in the DAO is kicking themselves for it. 200 MH/s voting that ""I don't care if someone else lost money, don't do something stupid because of your own stupidity."" Own up, move on, and maybe next time, fix something before you publicly post about it, even if you think it's ""not a problem""."
108,vulnerability,ethereum,To The Attacker and the Ethereum community,4,4p315z,https://www.reddit.com/r/ethereum/comments/4p315z/to_the_attacker_and_the_ethereum_community/,2016-06-21 15:19:48,"===== BEGIN SINGING TELEGRAM ===== To The Attacker and the Ethereum community, We, the Ethereum community, are facing our first moral and technical crisis after a pseudonymous identity, known as The Attacker, exploited a vulnerability in The DAO to siphon funds away from their intended use for blockchain startups. The scale of this event is as staggering as the level of interest generated by The DAO project itself, the fallout similarly vast in its implications. Many have detailed various aspects of this event but I want to address some concerns. While the meatspace identity of The Attacker is unknown and alleged communication from them failed verification, I am of the mind that it does not matter who they are because identity is communally formed. If there's anything we should learn from the pseudonymity of Satoshi Nakamoto, it's that it does not matter if you're responding to an apparition or the material form; it is only the conversation and our impact that matters. So first I have some words for our adversary. To The Attacker, You are as vile as you are clever. It is my belief you never intended to receive these funds except by proxy through market manipulation, that such manipulation began weeks prior to the attack, that this is not the first time you've hurt people like this, that you've likely used this event to profit from colleagues, and that your legal posturing is merely a facade for the pleasure you derive from abusing others. You likely fit even an exaggeration of this portrait. Still, I harbor no ill will against you and truly hope you find peace from whatever it is that may torment you. Hubris does not solely belong to you, it lands squarely on the heads of every entrepreneur that puts their ambition ahead of their compassion. Every developer that worries about their perceived authority and every investor that puts concern for user adoption rates ahead of the livelihood of regular people are solely responsible for giving you the fertile ground you needed to attack. We set the stage. That shame is on us. Still, make no mistake, you are one who harms tens of thousands of people and disregards the fragile environment needed for scientific inquiry. You have set back the progress of technology you clearly have interest in that was born from a desire to rid the world of the same effects you're putting into it. This is your legacy. You can count yourself as clever, and probably as wealthy, but you can not count yourself a revolutionary as you exemplify the same callous violence carried out by followers of the systems we're trying to escape. It's a shame, really, that you could think Ethereum stands as an island apart from your other interests and if you are truly adversarial to these changes then your folly is even greater than I can describe. Ultimately, the effect you have had here will fade as people return to stumbling through the dark toward a world that will render you as small as your heart. Love will always win. May you find it so you can join us in making amends. We could use your talents but leave your rancor. We have a future to build and you are presently standing on the precarious side of a determined beast you do not fully understand. Good luck. To the Ethereum community, What a mess, huh? If you read my above statement you'll know I want us to address what I consider reckless behavior. It's been difficult for me to watch what I consider to be a highly unstable alpha environment used to lure millions under a pretense of production stability, and doubly difficult to watch that money get stuck in the same machine I lack resources to develop against, but thankfully my life is too awesome for me to care. You could burn all my money and I would still have everything I need and do the work I want to do. That's my privilege, and the privilege many others in this space might feel, but that is not a privilege shared by the users you so desperately want to attract. They can't fathom the waste you wave around. It's time you take a look at the effects and not just the intent. Ethereum and similar technology with the right cultural shifts has the potential to transform our society into a utopian dream but at present it is being used for pyramid schemes, gambling, scamming, and even our best efforts are hurting people as vile creatures stalk in competing alleys waiting for a chance to demonstrate harm. There's a lot of great work being done in this space but it sucks I have to caveat myself like that because I know everyone just wants to counter each other rather than fuse our perspectives together to meet the challenge at hand. Technology is an extension of people and their values. Math is not going to fucking save you. If you are a commentator, lurker, reporter or passive contributor I want you to recognize that you are part of the technology as you inform its direction. When you set the tone of debate to be cynical, when you cast suspicions and doubt without good reason, you poison the well of civil discourse. If you are a miner I want you to never ask Vitalik for anything because he already delivered on his promise, handed you the tool that makes his power obsolete. You can mine coins, hire developers, and convince people differently. Ethereum is yours so what are you going to do next? Every time you turn to ""the leaders"" of Ethereum, you centralize its control by impressing upon our culture that we can't turn toward each other for answers. You also are unwittingly asking them to put their values before your own. It is not Vitalik or Ethereum that needs to decentralize, it's you. He is a fascinating and resilient person, clearly driven to this purpose, but this life is too expansive for us to obligate anyone to assume the kind of role I've seen people presume of him and other developers. People are dynamic, we have range, we are not meant for a singular purpose. Above all else, we all make mistakes and nobody owes you shit especially people whose hard work you critique with such ease. The obsession with user adoption should come long after an obsession with developer adoption and peer review. Opportunities to fund a project should be minimal and well defined. Let there be failure and let it be small. I'm not going to tell you what I think you should do about decentralization, immutability, privacy or the many other values at play but I will say people describe these values as binaries when they are clearly on a spectrum. The values of your community will be what defines the spectrum for you, these values are for you to rewrite and you can write them in any language you know. There is no edict from protocol mountain that can help you know right from wrong but every decision you make as a community will further define it and necessarily exclude those who can't adhere to your principles. You need to be prepared for tragedy. You need to know where you stand before the chaos of an event like this happens because the environment is intentionally cultivated and exploited by those like The Attacker to tilt your hand against yourself. Trust is not an evil unto itself and, in fact, if we can't trust each other to have compassion then we are truly lost for there is no mathematical principle that will keep you warm at night when the cold wraith of rational error comes for you. Good luck. Forever in space, Rabbit  ===== END SINGING TELEGRAM ====="
109,vulnerability,ethereum,I have lost so much money...,0,4p5xgh,https://www.reddit.com/r/ethereum/comments/4p5xgh/i_have_lost_so_much_money/,2016-06-22 03:50:42,"Ever since I got a ""real"" job and started being able to put away a little money for investing, I have made and lost (but mostly lost), a LOT of money over the years. I have lost money on stocks, options, derivatives, and who knows what else. I lost money due to asshole CEOs not doing their jobs, bullshit product lines, the media overhyping bad companies, and companies being obsoleted by new technologies. Lately I have been investing in crypto-related projects. When the hype for Slock.it started building (with the huge help from the Ethereum team), I strongly considered investing in it. I gave it a lot of thought and ultimately decided there was too much risk and basically impossible for this project to make money without something going wrong along the way, and I put my money elsewhere. In the real world, I would be rewarded for this decision, and those who went the other way would be punished. The people who bought Slock.it invested in a bad project that failed because the leaders left $120 million hanging by a vulnerability in a smart contract, and these investors are now shocked that they will probably lose that money. Can anyone explain to me why those who made the poor decision to support this crappy project are being handed a second chance? What lesson are these newbie investors being taught here? How do you expect the market for cryptocurrencies to operate if you are going to interfere with it? P.S. And let's be honest, Vitalik wants the money to be returned despite his claims to leave it up to the community. He should have never brought up a fork as a solution. He knows what kind of influence he has and should know better."
110,vulnerability,ethereum,Idea to make hardforks easier (In case if they are unavoidable),0,4pcqi9,https://www.reddit.com/r/ethereum/comments/4pcqi9/idea_to_make_hardforks_easier_in_case_if_they_are/,2016-06-23 06:06:55,"**EDIT 1: idea withdrawn. Sorry for the fuss!** **EDIT 2:** what if we replaced DEV pgp key (from idea below) with some proof of stake pgp key. I mean not miners will decide about block version, but the collective of ethereum owners. After all they use ethereum, they want it to work in the best way for the user. While miners have a shorter horizon: in theory they only care about their own profit. --------------- Since hardfork is unavoidable now, we could use this opportunity to add a very simple code that would make **wrong** miners to reject **their own blocks**. The mechanism is super simple: * a block version is signed with a MINER_1 pgp key * the MINER_1 pgp key is itself signed with DEV pgp key, thus the miner knows the key with which to sign its block, but cannot change it, since the miner does not know the DEV pgp key. * if a miner detects on the network a block signed with a different MINER_2 pgp key, which itself is correctly signed with the DEV pgp key it then reads the block version signed with MINER_2 pgp key, and knows that this version is valid. Because the MINER_2 pgp key is also signed with DEV pgp key. * the miner takes larger version from the two version numbers (the MINER_1 version number and MINER_2 version number) and from now on the miner starts rejecting all blocks with smaller version number, even if these blocks are its own blocks. * the block version number could also be a blockchain height, to establish the exact point in the blockchain starting from which the blocks must be rejected * the miner cannot change its own version number hardcoded in the source code, because that would require it to know the DEV pgp key. I know. It puts more power to the DEVs, but it solves any kind of hardfork problems if they become necessary. Which happens very rarely. But **always** when it happens, the situation is critical, and must be performed very fast to minimize losses. The DEV pgp key could also be protected with some multi-signature pgp kind, and some fallback mechanism if it got compromised. However this fallback mechanism will have to reviewed super-carefully, because it could introduce vulnerability by itself. A mathematical proof that there is no vulnerability in the fallback mechanism would be useful at this point. However this can be done a little later. After current problem is solved."
111,vulnerability,ethereum,Can anyone explain how the reentrancy bug was able to happen?,2,4pfrh5,https://www.reddit.com/r/ethereum/comments/4pfrh5/can_anyone_explain_how_the_reentrancy_bug_was/,2016-06-23 18:45:46,"My familiarity with smart contract programs is limited. I can write some code in solidity and deploy the contract via the Mist GUI client. As I understand it, the DAO contract was attacked exploiting the splitDAO function.. How or where can an attacker nest a recursive call within the splitDAO call? Is there another avenue to interacting contracts besides Mist that was exploited? Can any contract be attacked using such a recursive call attack (assuming there is a vulnerability similar to withdrawBalance -&gt; setUserBalance)? Is the problem with Solidity or with the EVM?"
112,vulnerability,ethereum,The DAO debate &amp; the Ethereum Autonomous Finance DAO,24,4gz43z,https://www.reddit.com/r/ethereum/comments/4gz43z/the_dao_debate_the_ethereum_autonomous_finance_dao/,2016-04-29 22:21:01,"There's a lively debate re ""The DAO"" and whether it's possible to create the ""Mother of all DAOs"". Links below for convenience: URL URL URL Some arguments raised against this proposition include: * DAO science needs to be refined through a process of evolution and it is too early to claim master designs. * Many variations of the DAO theme are possible and designs should depend upon specific requirements. To add some color to discussions I will relay some details about work on the Ethereum Autonomous Finance/EAF DAO (see URL which has a very different purpose and design to ""The DAO"". **Background** Ethereum Autonomous Finance is intended to provide a globally accessible parallel virtual financial system that includes mirror versions of assets such as equities and currency, systems for credit and systems for generating interest from deposits. If EAF succeeds, smart contract developers will be able to create sophisticated financial applications and services for consumers and businesses around the world without permission and at low cost. The system can be described as a peer-to-peer autonomous financial fabric. Since it necessarily contains systems such as financial exchanges that are heavily regulated in different jurisdictions it has to execute as a protocol (Ethereum is a stateful network protocol that can be extended by uploading new smart contracts). EAF is wrapped in a DAO framework so that it can evolve by automatically executing proposals that have received sufficient support from voting token holders. DAO proposals adopt new operating parameters, switch in new smart contract logic and, yes, potentially pay real world service providers such as lawyers and support a forthcoming Autonomous Finance Foundation. However, inasmuch as the DAO's smart contracts will hold funds raised from a token crowdsale the *purpose* of the DAO is not to fund external ventures. This DAO will hold its own funds for its own purposes including application by Autonomous Market Makers (AMMs) that need floats, and disbursement of funds to real world/non-virtual entities is incidental. Purpose drives design. Whereas the slock.it DAO called ""The DAO"" is focused on governing the disbursement of investments into external projects the EAF DAO is focused on managing the Ethereum Autonomous Finance fabric resulting in very different designs. **EAF DAO Proposal System Requirements** * The complexity of the EAF fabric and the ambitious scope of the project demand that the DAO can continuously configure and upgrade its systems by adopting large numbers of proposals. * Many different types of proposal types are possible, each requiring different proportions of the vote to pass and being more or less urgent. * It is desirable that in certain circumstances emergency ""hotfix"" proposals can be adopted very quickly, but the supporting functionality cannot jeopardize security e.g. by requiring fewer votes. * It is important that voting systems provide a degree of anonymity. Otherwise, there will be a danger that a financial regulator in some jurisdiction might try to construe a case that a voting token holder is a ""controller"" and the autonomy of the EAF system is a sham. **Discontinuous vs Continuous Designs** TLDR; aside on design philosophy. One approach to designing a DAO governance system is to combine numerous rules, systems, structures, guardians and so on. Such an approach aims to paint a picture by adding strokes here and there until the overall form of governance desired is created. However, for some purposes, a risk is that the resulting ""discontinuous"" system will become harder to analyze and that unexpected situations and vulnerabilities may result. Specifically, the danger is that the tripping of different rules and systems may combine in undesirable ways that were not foreseen. Another consideration is that more powerful computational systems can often be created using more generic building blocks that can be combined like Lego. In this respect, discontinuous ""human"" rules and organization fare badly compared with more continuous algorithmic approaches. The decline of Yahoo's directory service provides a case in point. In the 1990s they had a team of 300-plus humans working on a global Web taxonomy/directory but it was no match for the continuous systems created by search engine algorithms. We pursue a continuous approach called ""opaque liquid voting"". **Liquid Voting** The EAF DAO remunerates voting token holders for voting services. However, in practice many voting token holders will not wish to evaluate the large number of proposals that will be submitted, and in many cases will feel unqualified to decide. What then do to when an emergency hotfix proposal is submitted that requires 80% of the vote to pass but which should be adopted within 12 hours to address, say, a vulnerability. The solution is to allow voting token holders to assign their voting power to some other holder to create a graph. Many people will wish to follow core project contributors, while others will wish to follow persons they like on reddit, who in turn may either wish to follow others or decide on proposals themselves. Assignment of votes allows fluid structures of decision making to evolve and adapt organically such that the wishes of the community can be accurately and quickly implemented. It also effectively leverages the wisdom of the crowd. **Opaque Liquid Voting** Since there might be large numbers of voting token holders, scalability and efficiency concerns make it undesirable to implement such a system ""on-chain"". Furthermore, should the graph be knowable, some individual token holders with particular influence might be held accountable as ""controllers"" as described before. Our system addresses this by having voting tokens managed by client applications that people may run for example on their laptops to ensure they are remunerated for voting. These applications can be configured with a priority order list of ""leaders"" whose votes may be followed. Upon detecting a new proposal, the client applications will typically delay automatically following leaders for a grace period during which the token holder might manually decide how to vote themselves. Thereafter, the client will see whether a vote from the highest priority leader is visible on chain, automatically voting the same way if so. If such a follow is not possible, the client will wait for a period, then see if either the highest priority leader or the next highest priority leader has voted, and so on, until eventually a vote by any leader in the priority list will be followed (this design works even when loops in the voting graph arise). The resulting voting graph is unknowable since the logic and data exists only at the edges. **Final Notes** * The details of EAF DAO voting may change as the system and code we will propose to the decentralization community is under active development, but this illustrates how a range of different systems are possible. * String (a company based in Mountain View, California) is working on an initial code proposal for the EAF and working with partners. It hopes to benefit from holding voting tokens in a future EAF DAO and is funding its initial working using personal investments and significant venture capital. * Recent updates about String here URL"
113,vulnerability,ethereum,Jaxx and passwords?,1,4kfd8g,https://www.reddit.com/r/ethereum/comments/4kfd8g/jaxx_and_passwords/,2016-05-22 06:41:32,"Hi, I did my first ETH transaction with Jaxx on Android today. I'm wondering why Jaxx does not ask for one's password after scanning a private key and is this a vulnerability or is this somewhat irrelevant within ETH? I'm used to BTC BIP38 wallets in this regard but just trying to get a handle on this new wallet. Also, how secure is Jaxx wallet in terms of keeping private keys secure, particularly those scanned from paper wallets? Thanks "
114,vulnerability,ethereum,Ethereumpool.Co ( eth.pp.ua ) were under DDoS,7,4dq0us,https://www.reddit.com/r/ethereum/comments/4dq0us/ethereumpoolco_ethppua_were_under_ddos/,2016-04-07 17:27:49,"Hello miners! Our server was under a massive DDoS attack. Flood attacker masquerading as usual miner, using engine vulnerability. It was a very difficult day, but our team has developed a solution. The pool is operating normally right now. Sorry for any inconvenience. Thanks for understanding. If someone has a problem with connection Please contact to support (at) ethereumpool.co PS Welcome back miners to us URL "
115,vulnerability,ethereum,[SEC] Golang 1.5 vulnerability does NOT affect us,20,40x9zx,https://www.reddit.com/r/ethereum/comments/40x9zx/sec_golang_15_vulnerability_does_not_affect_us/,2016-01-14 22:54:19,A few days ago a [vulnerability](URL was found in Go 1.5's `math/big` library. Any odd moduli in big int's exponential function uses the Montgomery method which could result in an incorrect exp result. Luckily for us the VM's Exp mod is either 2^256 or 0. The rest of the Go Ethereum code base should also be fine since no odd numbers are ever used.
116,vulnerability,ethereum,"AlphaPool security update, 35ETH payout, and new AlphaBlock protocol",5,3itiv9,https://www.reddit.com/r/ethereum/comments/3itiv9/alphapool_security_update_35eth_payout_and_new/,2015-08-29 16:09:26,"AlphaPool recovered from a security vulnerability this week. Several of our miners complained about low payouts given their hashrate, and this was because of the few miners that took advantage of our system. Our vulnerability has been fixed. We have about ~30 ETH in unpaid payments, and believe that the best way to compensate everyone for their loss is to give it away proportionally. &amp;nbsp; **For all miners online on August 29th, 2015 8pm, we will split 35 ETH equally by hashrate. That is, if you own 1/35th of the hashrate tomorrow at 8pm, you will get 1ETH.** **We apologize for any inconvenience the vulnerability may have caused. The vulnerability has now been fixed and we are constantly working to make AlphaPool reliable and secure for our miners** &amp;nbsp; Get online with us at: URL &amp;nbsp; Additionally, we believe that our new algorithm works better than existing pools for miners that require users to submit a predefined hashrate. Here's a synopsis of AlphaBlock, our new mining protocol: 1. Miner Mike sends a claimed hashrate to our server using ethminer 2. AlphaPool submits a share package to Miner Mike with a difficulty that we believe will be solved every few seconds on average. 3. Miner Mike submits his share, and AlphaPool validates it, updating hashrate to the server and their contributions to the current block. 4. When a block is found, we divide the 5ETH by share submissions, factoring in difficulty. Especially for miners with a variable hashrate, we believe that our protocol is an improvement over existing pools that require users to submit a hashrate. **P.S. We are actively working hard on PPS and will be releasing it soon, to allow for minimum variance and maximum transparency for our miners.** Additionally, AlphaPool now has an email Address. You can reach us at: thealphapool@gmail.com"
117,vulnerability,ethereum,AlphaPool giving 35ETH to miners in an hour!,1,3iwtnn,https://www.reddit.com/r/ethereum/comments/3iwtnn/alphapool_giving_35eth_to_miners_in_an_hour/,2015-08-30 11:50:23,"As promised, we will be giving 35ETH back to our miners, an amount withheld by our system by illegitimate miners. &amp;nbsp; **All miners online at URL tonight at 8:00pm PST will receive a piece of the 35ETH proportional to their hashrate. If you are mining at 1/35 of the pool hashrate, you will receive 1ETH.** &amp;nbsp; We are working around the clock to prevent this situation from happening again. Here's a list of things that we have done to come back stronger: &amp;nbsp; * All balance deductions are logged in the payment table with a transaction ID * We have a contact email at thealphapool@gmail.com * Security vulnerability fixed with robust share verification * Variable share difficulty based on realtime miner performance "
118,vulnerability,ethereum,Is it dangerous to leave eth in an account which has been used to send a transaction?,4,3lrk5z,https://www.reddit.com/r/ethereum/comments/3lrk5z/is_it_dangerous_to_leave_eth_in_an_account_which/,2015-09-21 14:31:26,I remember back in the olden days of bitcoin a vulnerability was found for addresses which had already been used to send a transaction. A lot of people now suggest never leaving your coins in an address which has already been used. Is there a danger of doing this in Ethereum?
119,vulnerability,ethereum,Rolldice.io - The first Ethereum powered dice site!,19,3hzf47,http://www.reddit.com/r/ethereum/comments/3hzf47/rolldiceio_the_first_ethereum_powered_dice_site/,2015-08-23 02:43:03,"Dear /r/ethereum, Today we are happy to announce the launch of our Ethereum powered gambling site. It supports basic dice gameplay, investing/divesting and can operate as a online wallet for small amounts. This particular application doesn't yet use smart-contract features but a lot more is in the works. We hope you like it and it will be of some use for this magnificent community. And please remember, gamble with moderation! Try it at [rolldice.io](URL **P.S.** If you do not have ETH ask for a tip in the chat **UPDATE** 11.00 AM --- While i was asleep somebody successfully exploited a vulnerability in the code and deposited 10 million ETH into the bank roll. **UPDATE** 12.00 AM --- Security vulnerability patched. Our developers worked long hours and forgot to uncomment a check during testing :) **UPDATE** 19.00 PM -- Thanks to this awesome community for reporting bugs and helping fixing the site Bug reporting program is officially open, each verified claim gets **100** ETH!"
120,vulnerability,ethereum,What markets should we add next to Gnosis?,11,3is508,https://www.reddit.com/r/ethereum/comments/3is508/what_markets_should_we_add_next_to_gnosis/,2015-08-29 08:22:31,"There are acurrently two active prediction markets on Gnosis: The first market on the [Augur crowd sale](URL and more recent market on the difficulty at block 160k the (URL So far the difficulty market is way more popular with &gt;70 trades in the last 24h. - Our first thoughts are that it resovles sooner (the next 6 hours) and it might be easier to understand the payouts (0 or 1) compared to the long/short share. (and the graph is nicer :)) Anyway, we are thinking about what market to add next. We would like to make a dependent market - so something in the form of: What is the likelihood of X if A happens before. And: ""What is the likelihood of X if B happens before. And also a market for A vs. B. A future example would be: What is the likelihood of the democrats winning the 2016 election as X. And A and B are: Trump becomes the Republican candidate, Trump does not become the Republican. candidate. Another example (for a long term resolvement) would be price of Bitcoin based on the condition if block size limit increase vs. the price of Bitcoin with no block limit increase. We are really looking forward to creating those markets but currently we need something more short term (2-14 days) **TL;DR**: We want to hear from our users! Any ideas for a new market that can end in the next 2-14 days? Or any other suggestions for markets to get Gnosis started? ~We acknowledge that unlocking an RPC node is a vulnerability. *Please do not play (or open an RPC node) with more than you are willing to lose.* EDIT: **PLEASE READ: remember we are in ALPHA** The best solution for using Gnosis at the moment is to open a geth rpc node with a coinbase that only contains as much as you are willing to lose. Do not unlock the account until right before you make a purchase. In your RPC terminal (if you don't have one running use `geth attach` ) type; personal.unlockAccount(eth.coinbase, Password, 30) Then place your bet within 30 seconds. This is not the best solution but we are working on a better one. Stay tuned for more updates!"
121,vulnerability,ethereum,Ethereum Maximalism Bias,1,3b3mra,http://www.reddit.com/r/ethereum/comments/3b3mra/ethereum_maximalism_bias/,2015-06-26 04:19:59,"Ethereum founders have been clear since the beginning that at the base of the crypto application stack [they see several consensus protocols co-existing](URL with different ""trade-off profiles"". This view is very balanced and is not Ethereum Maximalist, but as a non-technical entrepreneur building [Etherplan](URL I think I could be biased! In my particular case, several smart people have told me to build Etherplan ""platform agnostic"" to be able to invest in as many assets as possible, achieve low latency, open to more business opportunities, etc. But at the same time it seems this **re-centralizes** the service which was the problem it was trying to solve about Wall Street centralization, vulnerability, control, and costs. So the general questions to Ethereans are, where is the equilibrium point? is it possible to build apps that are blockchain agnostic and decentralized? Or, will an Ethereum dapp be able to interact with multiple blockchains anyway? "
122,cybersecurity,ethereum,"Blockchain Confrence, ResilienceSC2020, July 15th",2,hirr82,https://www.reddit.com/r/ethereum/comments/hirr82/blockchain_confrence_resiliencesc2020_july_15th/,2020-07-01 03:23:15,"Hello, I figured if you're interested in Etherum then you probably are interested in the technology behind it. This conference was put together by the team behind South Carolina's push for the application of blockchain technology, PalmettoChain. You may have heard about our bill passed by South Carolinas state senate, [URL . If you're interested in joining this conference below you'll find more information about utilizing blockchain technology to create a more resilient economy in South Carolina. Some of our speakers include, Dale Chrystie a Chairman at Fedex working on integrating blockchain into postal systems and Sophia Lopez founder at Kaleido a ConsenSys Business. If you're interested below is a link with more information. We'd love to have you and can't wait to share this information with you! On July 15, 2020, **ResilienceSC2020 Virtual Blockchain Conference** will bring together the brightest minds working on blockchain applications in the areas of cybersecurity, personal identity management, consumer goods, supply chain, venture capital, the energy sector, global shipping, distributed computing, education, digital currencies, and more. This virtual event will be presented completely free of charge and can be joined from the comfort of your own couch. Join to see how blockchain will change not only your industry but your day-to-day life. Register at: [URL"
123,cybersecurity,ethereum,"Quant Network Partner with the largest Financial Network Provider in Europe, SIA, bringing Overledger to SIA's 570 Banks and Trading venues as clients to use Corda and Ethereum. Quant Network are also working with the Central Bank of Italy for settlements",7,by9njf,https://www.reddit.com/r/ethereum/comments/by9njf/quant_network_partner_with_the_largest_financial/,2019-06-09 02:23:38," Quant Network recently attended Money 20/20 in Europe where they announced a partnership with SIA. [URL &amp;#x200B; The first interoperability tests will be executed on R3s Corda and private Ethereum platforms. &gt;So what weve done is instead of just announcing one client and one thing, were announcing that were working with SIA. So, SIA is leading European payment infrastructure. And what were doing with SIA is interconnecting blockchain networks with SIA, and doing settlements, which are central bank settlements, with the central bank in Italy. So what Overledger is doing is were actually bringing blockchain and interoperability to all of SIAs clients, which are 580 banks. So, Overledger could be rolled out to all these institutions, financial services, banks, at scale, and have interoperability to get the benefits of this. [URL Just to make it clear this isn't SIACoin, this is SIA, the largest financial Network provider in Europe. some more info about SIA below: The Eurosystem (compromises of the European Central Bank (ECB) and 19 National Central banks that are using the Euro such as the central banks of Italy, Germany, France, Spain, Netherlands, Belgium, Ireland etc.) operates the financial market infrastructure for the settlement of payments (TARGET2), TARGET Instant Payment Settlement (TIPS) and securities (TARGET2-Securities, or T2S). **These platforms form the backbone of the European financial market.** **All of these platforms will be reachable via the Eurosystem Single Market Infrastructure Gateway (ESMIG).** The single connectivity gateway to all Target services would provide a simpler and more efficient means to access the key market infrastructures and up to 3 Network Service Providers will be able chosen. The two companies currently going through the approval process are **SIA** (who were the first to be gain Eurosystem certification for TIPS) **and SWIFT.** * In 2018, SIA managed 14 billion institutional services transactions, 7.2 billion card transactions, 3 billion payments, 51.7 billion financial transactions and carried 1,204 terabytes of data on the network. * SIA supported the launch of the new **Samsung Pay** payment system, and also **Alipay** and **WeChat Pay** payment service were activated. Furthermore, the offering of terminals has been enriched with the Android-based smartPOS line, making value-added services available to consumers and merchants. * In 2018, SIA confirmed its role as key technology partner to the **London Stock Exchange Group** and at the end of 2018, **44 trading venues operating in Europe and the United States** were connected to SIAs Financial Ring which enables financial intermediaries to access, via a single high-speed, low-latency network infrastructure, the **main international stock markets using date centers in Milan, Rome, London, Frankfurt, and New York.** * SIAchain was selected for the operational testing of the ""Spunta Banca"" project - coordinated by ABI Lab, the research and innovation center promoted by the Italian Banking Association - based on blockchain technology that currently involves 18 Italian banks. SIA participates in the project together with other technological partners such as R3 and NTT Data. * **Quant Network and SIA are founding members of IATBA (International Association of Trusted Blockchain Applications), led by the European Commission**, which will bring together all stakeholders interested in the transparent promotion of interoperability, governance, legal certainty and trust in services made possible by Blockchain and Distributed Ledger technologies # Other Partners and Announcements: * **Quant Network has been named Gartner Cool Vendor 2019** in Blockchain Technology. Gartner is the worlds leading research and advisory company. Quant Network joins a list of illustrious names like Dropbox, Nest, Evernote, Cloudera, Palantir and Instagram, all of which have been named a Cool Vendor in the past ten years. Cool Vendor status is bestowed upon the most disruptive and credible startups that Gartner analysts genuinely believe will change the technology landscape. The Cool Vendor status is highly recognisable and tracked by potential acquirers, investors and large enterprise buyers. * [Quant Network Chosen for the UK Government Backed Tech Nation's Cybersecurity growth Programme](URL * [Quant Network Chosen for the UK Government Backed LORCA Cybersecurity scaleups cohort 3 in joint collaboration with Plexal, CSIT and Deloitte](URL * **Quant Networks Overledger to play integral part in Hyperledger Quilt reboot to enable universal interoperability for Hyperledger**. Hyperledger is very popular with enterprises with half of the Forbes 50 list using Hyperledger. It consists of many frameworks and Hyperledger Quilt is their tool that provides interoperability. * **Quant Network was appointed company Guarantor of** Pay.**UK, the largest payment network in the UK**and is accountable to the Bank of England. Quant Network will shape the payment ecosystem to promote competition, innovation and openness, as well as setting the strategic direction of the Payments infrastructure and adopting the New Payments Architecture (NPA). * **Overledger is providing interoperability by connecting to 10 Blockchains currently** as well as connecting non-blockchain networks. These include the Enterprise 5 Permissioned blockchains - R3's Corda, Hyperledger, Permissioned versions of Ethereum, JP Morgan's Quorum and Ripple as well as the permissionless blockchains of Bitcoin, Ethereum, IOTA, EOS and Stellar * **Guy Dietrich, Managing Director of Rockefeller Capital (manage $18.6 billion in assets) is joining the board of directors at Quant Network**, supporting the company's recent expansion to the US to meet client demand. * **Quant Network partnered with Crowdz who** [**Barclays and Bold Capital Partners recently invested $5.5 million into. Barclays are integrating Crowdz into Barclaycard**](URL &gt;""Although Crowdz uses the Ethereum blockchain as the foundation for our Invoice Auction Exchange, we have needed a solution that allows for invoices and other documents to be transferred from one blockchain to another  for example, among Hyperledger, Corda, and EOS. With the Overledger solution from Quant Network, it is now possible to pass data among different blockchains. Crowdz looks forward to working with Quant Network to enable the true multi-blockchain environment that our customers demand. - Payson Johnston, President and CEO of Crowdz * Quant Network Partners with DATA 61 to participate in Cross-Border trials with the Global Financial Innovation Network, a network of 35 organisations committed to supporting financial innovation in the interests of consumers. Bodies such as the Financial Conduct Authority (FSA), Australian Securities &amp; Investments Commision (ASIC), Monetary Authroity of Signapore, Hong Kong Monetory Authority, Central Bank of Bahrain and many more all participated with in the trials. # Team: Incredible team with loads of experience - Gilbert CEO was the Chief Information Security Officer at Vocalink (Mastercard) Gilbert was in charge of Security for the Faster Payments service in the UK which deals with 6 Trillion every year. Previous roles at HSBC, PWC, HSBC, EY, UK Government, HM Treasury and Bank of England. The most recent addition is the new COO, Cecilia Harvey, who joined from her previous role as Director at HSBC Global Banking and Markets. Cecilia is a Tech Women 100 Winner and also worked at Vocalink, Citi, Barclays, Accenture, IBM and Morgan Stanley Lots of other experience in the team working for companies such as BT, Nationwide, NHS, Deutsche Bank, KPMG, HMRC, National Crime Agency and Europol [URL # Token Utility &gt;From our original thinking in the whitepaper and business paper, the purpose of QNT has always been multi-purpose. The 1st phase of QNT was to help create an ecosystem of developers and enterprise. The 2nd phase, QNT has been used to verify and the option to sign and encrypt every single transaction that flows through Overledger for security purposes. The 3rd phase of QNT is something we've been working on. It's to be used for the movement of Digital Assets across chains. QNT is a Universal Utility Token, providing access to the Overledger ecosystem and also to be used to pay for transactions and usage across chains. We're also going to enforce mimimum wallet holdings for all participants. This is a market need we're seeing with clients and a tokenised ecosystem is the future we're all working towards. This is something we can do now, where others have been trying to achieve for the last couple of years. We have clients we're working with in financial services that are moving digital assets internally within a permissioned network and want to be able to interoperate with other parties to recognise their digital asset on different internal permissioned chains. Plus they also want to be able to move and settle on public permissionless blockchains safely and securely - Overledger is the only technology that can do this today. This is a game changer we've been working on. We're bringing blockchain interoperability to the 570 banks that SIA work with. We want users with volume - if we're powering the digital asset economy with QNT this is a game changer in this space. This is what Ripple with XRP, Stellar with XLM and partnering with IBM have been trying to do - Gilbert from Telegram [URL QNT is used to validate with the option to sign and encrypt every transaction that flows through Overledger. No Transactions can No 3rd Party can view or tamper with transactions and their contents, including Quant when signed and encrypted Enterprises and community developers need to purchase an annual license to develop apps on the platform Consumption fees such as read / write to overledger are paid in QNT Moving of digital assets across chains whether permissioned or permissionless will require QNT The license fees are based on a fixed FIAT Value and the equivilant number of QNT are purchased and taken out of circulation for 12 months. Once the license is renewed after 12 months the tokens remain locked out of circulation Users will need to hold a minimum amount of QNT to use Overledger. Quant have released the Quant Enterprise Treasury which allows Enterprises to pay for license fees in FIAT and the treasury automatically converts them into QNT. The treasury gets the tokens from Exchanges / OTC. QNT has a total supply which is 1/3 less than Bitcoin's total supply at only 14.6 million QNT. Unlike Bitcoin currently you don't have to wait till 2140 for all of the tokens to be in circulation. All QNT is in circulation, there is no inflation and no new tokens will be minted. Unlike with Ripple where the majority of partnered banks don't actually use XRP, all banks that use Overledger will use QNT. Ripple is valued at $17.7 Billion and 42 Billion XRP are in circulation. There is another 58 Billion XRP which is due to come into circulation via inflation. (If you take that into account at todays prices that's a total market cap of $42 Billion The other thing to consider is that whilst they may not be popular on here, permissioned blockchains are going to far more widely used over the next couple of years than public blockchains for Enterprises. This is because public blockchains currently lack many features - speed, privacy, as well as regulation involved with being decentralised etc. Thats not to say it won't shift towards public blockchains in the future but not in the next couple of years. (Just have to look at the number of permissioned blockchains being used in Forbes recent blockchain 50 list to see this. Whilst permissioned blockchains don't need Gas and so don't have their own token. Even if enterprises are only using permissioned blockchains to interoperabte between them, they will need QNT. QNT with all of its token in circulation, no inflation, better tokenomics than many, wide usage in short and long term connecting to permissioned and public blockchains as well as still on the 2nd page on Coinmarket cap and hasn't listed on a ""Tier 1"" exchange yet. # Other: * Gilbert Verdian founded the ISO TC 307 Standard for Blockchain which 54 countries are working towards currently -[URL * Open Source SDK's available in popular programming languages such as Java and Javascript. * Treaty Contracts will allow developers to build MAPPS that can interoperate with multiple blockchains without having to write the smart contract for every blockchain in each of their programming languages - solidity for Eth, Go etc. Treaty Contracts will also enable smart contract capability to be used on blockchains that don't support smart contracts such as Bitcoin * Quant provides easy Off Chain / Oracle functionality with just the addition of 3 lines of code to their existing applications. Meaning developers don't need to rewrite their applications to work with blockchain. * Quant have launched multiple products that use Overledger - GoVerify - Protects people from impersonation and deception fraud and Quant ATLAS - their solution to enable interoperable banking through cross border open banking. * Overledger can connect to any blockchain / DAG / Permissioned or permissionless and is designed to be future proof by isolating the layers so they dont care which blockchain is being used, what consensus method etc, each layer is only interested with the data within that same layer * It uses proven Internet Scale infastructure and can operate in either a centralised manner or decentralised with the addition of Hosted Overledger gateways (with details being released later this year) &amp;#x200B; **Would you like to connect your favourite blockchain to Overledger so that you have access to all of these enterprises / developers / clients to use? Well you can and unlike with exchange listings its completely free and open source. Once you have created the connector send it in for approval to connect to Overledger. Join the Quant Network Developer portal to find out more, submit** &amp;#x200B; for a more in depth look at Quant Network please see the following articles: Part One  [Blockchain Fundamentals](URL Part Two  [The Layers Of Overledger](URL Part Three  [TrustTag and the Tokenisation of data](URL Part Four  [Features Overledger provides to MAPPs](URL Part Five  [Creating the Standards for Interoperability](URL Part Six  [The Team behind Overledger and Partners](URL Part Seven  [The QNT Token](URL Part Eight  [Enabling Enterprise Mass Adoption](URL [Quant Network enabling mass adoption of blockchain at a rapid pace](URL"
124,cybersecurity,ethereum,SafeBlocks Introduces Real-time Smart Contract Monitoring. We'd love the Ethereum community's feedback!,1,aharhw,https://www.reddit.com/r/ethereum/comments/aharhw/safeblocks_introduces_realtime_smart_contract/,2019-01-19 01:06:40,"Hey buidlers! For the past few months weve being working on developing a Real-time Smart Contract Monitoring Module. This new module allows you to get real-time email alerts for your smart contract based on simple and highly customized settings. Integrating this module requires ZERO integration with your deployed smart contract. **TRY IT NOW!** URL *NEW SUBSRIBERS TO SAFEBLOCKS RECEIVE A 6 MONTH FREE TRIAL* Here are a few quick demos: * [MultiSig wallet notifications](URL * [Track your ERC-20 tokens](URL * [Notifications for decentralized exchange trades and token transfers](URL **How are we?** We are experienced cybersecurity experts with a mission to develop powerful and intuitive smart contract security solutions. This will allow our future customers to keep their focus on running their core business, and not be worried about security risks. Want to connect or learn more about SafeBlocks? Feel free to contact us at any time - [contact@safeblocks.io](contact@safeblocks.io)"
125,cybersecurity,ethereum,NOVAM Announces Partnership with Vault Wallet  a secure token wallet,1,9uglv6,https://www.reddit.com/r/ethereum/comments/9uglv6/novam_announces_partnership_with_vault_wallet_a/,2018-11-06 06:18:54,"**NOVAM has partnered with smart wallet provider Vault Wallet to enable hardware-level protection of digital tokens on agnostic IoT devices.** **Vault Wallets solution accelerates distributed applications/services to the market at a fraction of the time and cost. Companies adopting blockchain technology need an easy and secure way to integrate token-storage. Their product will provide seamless integration into the NOVAM Network that is being built. Offering a full support team, best-in-class security and semi-custom feature development.** **NOVAM is the first distributed cybersecurity solution for IoT using Distributed Ledger Technology to monitor and automatically mitigate cyber-threats in Internet-of-Things (IoT) ecosystems while providing auditing and compliance reporting. Using machine learning, AI and probabilistic mathematics, NOVAMs monitoring and mitigation system is ever-alert, and always present while being device agnostic. This system is designed to protect networks and IoT devices by monitoring and mitigating cyber-threats and intrusions automatically.** **Vault Wallet is a smart wallet provider and is engineered to interact with all IoT devices. The NOVAM Token is a utility software license that provides access to the NOVAM Network and platform for services that include monitoring and mitigating threats, auditing and regulatory compliance. In order for a connected device to be protected under the NOVAMs software, each node it connects to will need to have at least one NOVAM token available on the node itself.** **The NOVAM and Vault Wallet partnership will allow unprecedented ease of use, scalability, and functionality to the IoT threat mitigation landscape and change the way we think about cybersecurity. The partnership will also ensure future collaboration between IoT and IT customers.** **For more information on Vault Wallet, visit their website at** [**URL ![img](fmxdxldc9kw11) **To take preventive measures using artificial intelligence for cybersecurity and adaptive protection visit:** [**URL **#NOVAM #NOVAMIntl #CyberSecurity #ICO**"
126,cybersecurity,ethereum,Buglab - Ethereum Base blockchain cybersecurity penetration testing,1,92g8no,https://www.reddit.com/r/ethereum/comments/92g8no/buglab_ethereum_base_blockchain_cybersecurity/,2018-07-28 06:50:25,"Security issue has been a major concern all over the universe both in business and finance, healthcare, information technology and all other sectors around the globe. Nowadays, where we manage and carry out almost all our lives activities digitally, there has been a persistent call by security agencies for security awareness because of an increase and continuous attacks on digital assets and information which put many agencies and companies at an unimaginable lose of over millions of dollars. What is cybersecurity Cybersecurity is the technologies, processes and controls designed to protect Internet connected systems, including hardware, software and data from cyber attack. Cyber attack is usually aimed at accessing, changing or destroying sensitive information; extorting money or interrupting business processes. In July 2017 Equifax witness one of the biggest security breach that compromise personal data of about 145 million people. Yahoo also witness this great cyber attack around 2013 where over 1 billion yahoo account were hacked. This massive security breaches caused by cyber attack have been witness in different businesses, companies and agencies in various sectors. The hackers make use of different methods like spreading of malware, phishing and social engineering. Research have shown that by the year 2021, the cyber attack damage cost to hit 6 trillion annually up from 3 trillion in 2015. As at 2017 the global ramsonware damage was predicted to cost over 5 billion which was expected to increase to 11.5 billion in 2019. Cyber attacks are one of the greatest challenges or threat to every company and as a billionaire businessman Warren buffet once said ""cyber attacks are the number one problem with mankind, even worse than nuclear weapons"" it's a challenge that needs optimum attention and BUGLAB have taken up the challenge to help companies drastically mitigate and prevent the occurrence of cyber attacks by establishing a buglab platform that offers a competitive, incentivized challenges know as a contest to a group of certified independent information security consultants. Greater need for the cybersecurity service platform such as buglab arises due to the huge financial resources and intensive time involved in fighting and preventing cyber attacks which most companies especially small and medium enterprises lack. Buglab offers ethereum blockchain Based cybersecurity penetration test platform with the solution to cyber attacks which is easy, accessible and cost efficient both to small and big business enterprises unlike traditional means of cyber security services. Traditional methods of fighting cyber attacks and their associated problems Below are some of the methods employed by the traditional cybersecurity service organisations. Penetration test carry out by the cybersecurity organisation. Traditional firms charged in accordance with the number of hours spent conducting the Penetration test. Cyber security firms assigned only one or two pentesters to carry out the test thereby limiting the scope of service been rendered. Bug bounty challenge. Cybersecurity consulting firms charged per number of security breaches or vulnerability discovered, at the end the company may end up paying for things that are not relevant to them or their customers. Bug bounty program. The company is required to pay for each security issue detected in their system, which at the end the company may not be able to take care of the charges. This method is not cost efficient and not feasible with small and medium enterprises. Buglab platform solutions Buglab platform brings together companies and organisations that needs cybersecurity services and the group of certified cybersecurity penetration test experts, where penetration testers are incentivized with rewards for detecting vulnerability and giving possible remedies which will be ranked according to the level of severity and importance. It's organised as a contest where the time taken to discover vulnerability and the uniqueness of the vulnerability are been considered and prioritise. More details on the Website URL Important features of buglab platform Buglab platform uses two major instruments ""Contest and Vigilante Protocol"" in helping companies to discover, and fix vulnerabilities and in preventing cyber attacks. Below are the main features of buglab platform which are segmented into various sections according to the organisational needs. public test. The whole community of pentesters receives an invite to particiate in a contest once it's launched. private test. The platform provides an option for the companies to choose from the community some pentesters to carry out the challenge. selection filters. The platform made this option available to the companies to enable them narrow down their search in selecting pentesters. Triage system. The system sort vulnerability issues submitted by pentesters and report the relevant submissions to the company. Report. The security issues discovered during the contest are reported to the company. client managed. The company have the option of choosing from the three different types of contest management (Basic, Pro, and Enterprise). Mediation. If the company choose to manage the contest themselves, pentesters can ask for mediation from the buglab. Leaderboard. The pentesters are ranked on dashboard according to their input or vulnerability cases discovered in the contest.chat. After reporting the detected vulnerabilities, the company engage in discussion with the pentesters on how to fix the discovered vulnerabilities. Fix companion. The buglab platform will confirm if the vulnerabilities detected are correctly fixed. Real time reporting. As the contest is going on, the company is allowed to monitor the progress and always in contact with the pentesters for possible recommendations for discovered vulnerabilities. Money back guarantee. If at the end of the contest, the pentesters couldn't detect any vulnerabilities, 90% of the money paid for the contest will be refunded back automatically by the buglab smart contract while 10% will be retained in the vigilante protocol reserve which is not refundable. Vigilante Protocol This is a global program in buglab platform established with the aim of helping companies who are not part of the buglab platform to detect and report vulnerabilities by whitehats which they may not be aware of. Main features of vigilante Protocol computer Emergency Response Teams (CERT) and Computer Security Incident Response Teams (CSIRT) partnership: Buglab will corporate with CSIRT and CERT so as to validate the whitehat vulnerability findings and help the companies in fixing them. Automatic reward: once the whitehat detect and share vulnerability and it's verified, the whitehat will be automatically rewarded through the smart contract. Entrusted model: with the involvement of buglab and CERT as middlemen, both whitehats and the companies feel secure. Token and ICO information Token code_____________BGL Total supply____________425,000,000 Tokens for sale_________170,000,000 Softcap_________________6,000,000 Hardcap________________$20,000,000 Token price_____________0.15 Blockchain______________Ethereum Erc20 Presale start on 30th June and end on 4th August 2018 Main sale start on 11th August and end on September Token sale Bonus Presale_____________________25% Presale Minimum contribution $3500 worth of ETH Public sale Tier 1 first 24 hours_________ 20% Tier 2 week 1_______________15% Tier 3 week 2________________10% Tier 4 week 3________________ 0% Fund Allocation Development &amp; staffing________45% Marketing_____________________ 22% Business development__________16% Research &amp; development_______ 12% Legal &amp; Account _________________5% Token Allocation Token for sale ___________________40% Vigilante Protocol reserve________20% Team_____________________________ 10% Future product development______10% Marketing_________________________10% Advisors____________________________7% Community campaign_______________2% Buglab transaction reserve__________1% For more details about the project please refer to the official project Website URL Useful links Website URL Bounty thread URL Telegram chat URL Written by ogbedi James Bitcointalk username : valentyzer Bitcointalk profile link: URL "
127,cybersecurity,ethereum,So despite being a cybersecurity expert I fell for the twitter ethereum scam.,0,8x7qzj,https://www.reddit.com/r/ethereum/comments/8x7qzj/so_despite_being_a_cybersecurity_expert_i_fell/,2018-07-09 13:44:44,"I had just gotten back from a hard workout. I hadn't read much crypto stuff in a while and I noticed on twitter that an Andreas Antonopoulis was giving away ethereum. However, I looked on the account and saw that every post was there as well as the twitter photo. Then I saw other people's responses saying they got the ethereum from the giveaway. Then I went onto the site that said the giveaway was closing and I saw the number of ethereum dwindling. Despite seeing all the signs I was weak. I was dumb, and I was greedy. I saw the multipliers that fake hacked users got and all I saw was $ signs. This was an expensive lesson. Normally I don't think I would have fell for something like this, but let this be a lesson to not workout hard and spend too much time not being on your toes before you look at cryptocurrency posts on social media. I lost 3.2 eth on it so didn't lose all of it, but lesson nonetheless. "
128,cybersecurity,ethereum,Cybersecurity is important!,0,8cx2b7,https://www.reddit.com/r/ethereum/comments/8cx2b7/cybersecurity_is_important/,2018-04-18 00:46:10,Check out the articles and don't get fooled! URL
129,cybersecurity,ethereum,"Hacken, Ethereum-based Decentralized Marketplace For White Hat Hackers",3,6xn3yc,https://www.reddit.com/r/ethereum/comments/6xn3yc/hacken_ethereumbased_decentralized_marketplace/,2017-09-03 02:37:09,"Hacken, the cybersecurity marketplace for bug bounties, announces its token sale, scheduled for 12 October, 2017. The project aims to create a collaborative defense ecosystem for White Hat Hackers and the Blockchain community. Cybersecurity and cryptocurrencies are some of the hottest topics right now. According to CyberSeek there are more than 348,000 open cybersecurity positions in 2017, and this number will be up to 1.8M by 2022. However, there is not enough supply to meet the high demand in the market for penetration testing and bug bounty programs. URL"
130,cybersecurity,ethereum,Ethereum-based Rivetz and Telefonica Partner to Improve Mobile Device Security,5,6z3z3s,https://www.reddit.com/r/ethereum/comments/6z3z3s/ethereumbased_rivetz_and_telefonica_partner_to/,2017-09-10 06:20:49,"Rivetz strikes partnership with Telefonica to provide Cybersecurity Services Rivetz Corp. (""Rivetz""), a leading provider of mobile, decentralized security solutions for business customers worldwide, today announced a partnership agreement with Telefonica USA, a subsidiary of Telefonica Business Solutions, leading provider of a wide range of integrated communication solutions for the B2B market of the Telefonica Group. This agreement allows Rivetz to immediately integrate Telefonica's CyberThreats Detection &amp; Response Service. URL"
131,cybersecurity,ethereum,Cybersecurity and Ethereum,0,68pq6l,https://www.reddit.com/r/ethereum/comments/68pq6l/cybersecurity_and_ethereum/,2017-05-02 09:59:11,"Hi all, Going to keep details sparse, but I have an interesting opportunity to pitch ""blockchain"" to some bosses. The only catch is that the pitch has to incorporate cybersecurity. Anyone care to wax poetic about the potential cyber benefits of a public chain? I can make the argument for private chains easy enough and I have some personal ideas as to why a public platform like Ethereum is more beneficial, but I want to hear from others. The field is finance. Thanks! "
132,cybersecurity,ethereum,Going to Devcon2 - any advice on cybersecurity in China?,24,4y6xuc,https://www.reddit.com/r/ethereum/comments/4y6xuc/going_to_devcon2_any_advice_on_cybersecurity_in/,2016-08-18 03:32:07,"I've heard there are real risks of having your computers compromised while visiting China, and Devcon2 will be my first trip to the country. I'm a little worried about my computer's security while there. Is this worry founded? If so, would one of the more security-minded folks in the sub mind writing a quick guide to remaining secure in China?"
