,topic,subreddit,title,score,id,url,created,body
0,CVEs,devops,Looking for an open source dependency monitoring solution,2,hnjxcz,https://www.reddit.com/r/devops/comments/hnjxcz/looking_for_an_open_source_dependency_monitoring/,2020-07-09 02:14:24,I am looking for an open source solution to gather information on dependencies from Java (Maven and Gradle) and Node (npm) projects. Ideally highlighting/alerting on CVEs in our projects and allowing us to understand where we use old versions. All I have found was so-so. The OWASP plugin for Jenkins looks like it supports half of our requirements. But with the amount of repositories we have across all teams we'd really like to monitor dependencies beyond vulnerabilities. I also started thinking about building this myself. How hard can it be? ;)
1,CVEs,devops,What tool do you use for scanning containers for CVEs?,1,e7sj5h,https://www.reddit.com/r/devops/comments/e7sj5h/what_tool_do_you_use_for_scanning_containers_for/,2019-12-08 22:04:19,"Preferably OSS free one, but commercial products are also an option. Thanks!"
2,CVEs,devops,Monitoring GitHub for sensitive data?,34,9624y1,https://www.reddit.com/r/devops/comments/9624y1/monitoring_github_for_sensitive_data/,2018-08-10 10:32:07," So I've been tasked with a 2 folded task. 1.) Monitor GitHub repos for commits with sensitive data. 2.) Find a way to prevent them from being committed in the first place. While I would prefer all open source diy solutions 1.) Are there any Enterprise / professional services that do this? My Google fu is failing me here and I've only found 2 such external service: [Black duck](URL and [Gitmonkey](URL Codacy mentions security in their SCA but I can't seem to find any more info other than ""we implement these open source engines that have security in mind"". While they mention security monitoring I don't know if it's just flagging out of date dependencies with CVEs, measuring entropy and flagging commits, or some regex search and match. I also can't seem to find if they go through all of GitHub , just your master branch of your repos, or digs through commits. So just lack of clarity from commercial products. 2.) What are the best practices in terms of A.) Monitoring GitHub for exposure and B.) Preventing exposure to begin with (breaking builds/preventing commits/pushes / etc) I am a complete newbie to Git and GitHub but after looking around everyone seems to recommended implementing githooks and enforcing good policies. I asked some devs and they all seem to say this isn't effective as these are client side and require a bit of setup per repo. Our lead dev (as well as the rest of the devs) has exposed creds a few times already. We roll creds and scrub GitHub but it's starting to become too tedious. Does anyone have any open source recommended projects to help with this? This is what I've found so far but I'm too new to find out which projects are worth it Project -- latest commit -- notes:: URL  Dec 17th, 2017  URL  Jul 5th, 2018  popular URL  Apr 19th, 2018  made by aws team URL  Aug 6th, 2018  Has aws cred and ssh key hooks URL URL  May 13th, 2018  entropy scanner now supports regex searching URL Jul 16th, 2016  Based on gitrob but lightweight search through org + commits Ideally I would have a webui + database for managing flagged commits/events/excludes (ie test data/uuids). I'm fine with trying to modify and cobble together my own (kibana + SQL?), I just feel completely overwhelmed about where to start. Any pointers // recommendation are appreciated. Sorry for the barf my brain is fried. "
3,CVEs,devops,Securing your Jenkins CI/CD container pipeline in under 10 minutes,13,58hrom,https://www.reddit.com/r/devops/comments/58hrom/securing_your_jenkins_cicd_container_pipeline_in/,2016-10-21 03:24:33,"Jenkins is by far the most popular Continuous Integration/Continuous Delivery platform in use today with over a million users relying on Jenkins every day to improve developer productivity and streamline their development and testing process. In Anchores recent container usage survey over 65% of Docker users surveyed were building and testing their containers using Jenkins. Key among the fundamental tenets of agile development is the notion of fail fast, fail often which is where CI/CD comes in: A developer commits code into the source code repository, such as github, which automatically triggers Jenkins to perform a build of the application which is then run through automated tests. If these test fails the developer is notified immediately and can quickly correct the code. This level of automation increases the overall quality of code and speeds development. While some may feel that fail fast sounds rather negative, you could better describe this process as learn fast as mistakes are found earlier in the development cycle and can be easily corrected. The increased use of CI/CD platforms such as Jenkins has helped to improve the efficiency of development teams and streamlined the testing process and we can leverage the same CI/CD infrastructure to improve the security of our container deployments. For many organizations the last step before deploying an application is for the security team to perform an audit, this may entail scanning the image for vulnerable software components, for example outdated operating system packages that contain known security vulnerabilities (CVEs), to verify that the applications and operating systems are correctly configured and that the organizations best practices and compliance policies have been correctly implemented. Today we want to show you how you can add security and compliance checking into the CI/CD process so you can learn fast and correct any security or compliance issues early in the development cycle. This document will outline the steps to deploy Anchores open source project with Jenkins to add analytics, compliance and governance to your CI/CD pipeline. Read the full post on our blog: [URL Get the plugin from Jenkins: [Anchore Container Image Scanning Plugin](URL "
