,topic,subreddit,title,score,id,url,created,body
0,CVE,Python,Automated Hacking Script!,1,fx8y1b,https://www.reddit.com/r/Python/comments/fx8y1b/automated_hacking_script/,2020-04-09 01:53:25,"Automated Hacking Script! Hey everyone! I have been working really hard on a hacking script that I REALLY would like some people to test and provide feedback to me! The script name is ""Purple Script"" as the ideal end user could be a red team or a blue team member. The purpose of the script is to rank systems from most to least vulnerable and then test each system using metasploit. The best part is this requires ZERO user knowledge or interaction. Once you download the script (purplescript.py) from github.com/sahullander/purple-script simply run the code: sudo python3 purplescript.py from the directory that the script resides. pip3 install all packages that come up in the ""package not found"" error and then rerun the script. **THIS IS ONLY WORKING ON LINUX** for right now. I am going to port everything later on (if possible). Please understand this is an alpha test, there is a lot more to be done in terms of efficiency, cleanness and more. **WHAT I NEED FROM YOU** is anything you think would work better, recommendations, or what you do not like about the script. Before doing this, please read the TODO file on my GitHub to make sure I haven't already accommodated for it. What you will get from the script is: 1. **IPList.txt** 2. **cveDetails.txt** 3. **serviceDetails.txt** 4. **A folder for each host** (named according to IP) Example of all of these can be found on GitHub 5) **overview.txt** this file is one of the most important. This gives you an overview of how the systems on your network did. It shows your host details, the each hosts' vulnerability levels (critical, high, medium, low, inconclusive) based on highest CVE score category found for that host, count of each CVE category, services found, services with metasploit modules, and services exploited. Again, each host is listed in order from most to least vulnerable (based on CVEs only). The end shows the total run-time for the script. I know this is a lot, and if you made it through this post then THANK YOU. Everyone who tests the script or look sit over and provides useful feedback will be mentioned in the final version of the script when done! Thank you again to everyone who reads this and especially those who give it a go. I look forward to hearing your thoughts!"
1,CVE,Python,[RELEASE] CVE-MAKER V2.0,0,dnrc5o,https://www.reddit.com/r/Python/comments/dnrc5o/release_cvemaker_v20/,2019-10-27 20:59:16,"Hi everyone ! Today I release version 2.0 of my cve-maker tool. As a reminder, this last one is used to quickly search for the names of CVEs (computer vulnerabilities), and to retrieve, compile and execute them on the current or a remote machine in a few seconds ! The perfect tool to quickly finish a Capture The Flag that requires a privilege elevation. [URL"
2,CVE,Python,[RELEASE] CVE-MAKER V2.0,1,dqntzf,https://www.reddit.com/r/Python/comments/dqntzf/release_cvemaker_v20/,2019-11-03 05:00:39,"Hi everyone ! Today I release version 2.0 of my cve-maker tool. As a reminder, this last one is used to quickly search for the names of CVEs (computer vulnerabilities), and to retrieve, compile and execute them on the current or a remote machine in a few seconds ! The perfect tool to quickly finish a Capture The Flag that requires a privilege elevation. [URL"
3,CVE,Python,[RELEASE] CVE-MAKER V2.0,1,d5k3vp,https://www.reddit.com/r/Python/comments/d5k3vp/release_cvemaker_v20/,2019-09-18 03:20:45,"Hi everyone! Today I release version 2.0 of my cve-maker tool. As a reminder, this last one is used to quickly search for the names of CVEs (computer vulnerabilities), and to retrieve, compile and execute them on the current or a remote machine in a few seconds! The perfect tool to quickly finish a Capture The Flag that requires a privilege elevation. [URL"
4,CVE,Python,[RELEASE] CVE-MAKER V2.0,35,d78978,https://www.reddit.com/r/Python/comments/d78978/release_cvemaker_v20/,2019-09-21 19:15:31,"Hi everyone! Today I release version 2.0 of my cve-maker tool. As a reminder, this last one is used to quickly search for the names of CVEs (computer vulnerabilities), and to retrieve, compile and execute them on the current or a remote machine in a few seconds! The perfect tool to quickly finish a Capture The Flag that requires a privilege elevation. [URL"
5,CVE,Python,Not sure how to follow links with my web crawler,3,bgskds,https://www.reddit.com/r/Python/comments/bgskds/not_sure_how_to_follow_links_with_my_web_crawler/,2019-04-24 19:34:22," Hey guys, I created a web-scraper that scrapes two data points from a patchnote (Impactscore and Exploitabilityscore) This worked fine, and I managed to add this data to a csv file however I am having difficulties making my code do this for all patch notes. In theory the web crawler would start on the main page, click on one link, scrape the data and go back to the main page and do the same thing for the second link. Link of all patch notes : [URL Link of one patch note that I scraped : [URL Working code to scrape the data from one patch note: from urllib.request import urlopen as uReq from bs4 import BeautifulSoup as soup import urllib.request import xlwt from xlwt import Workbook wb = Workbook() #Creating the workbook sheet1 = wb.add_sheet('Data Code') myurl = 'URL myReq = (myurl) req = urllib.request.Request( myurl, data=None, headers={ 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.1916.47 Safari/537.36' } ) #opening my connection, grabbing the page uClient = uReq(myurl) page_html = uClient.read() uClient.close() #html parsing page_soup = soup(page_html, 'html.parser') BaseScore = page_soup.findAll('span', {'data-testid': 'vuln-cvssv3-base-score-severity'}) ImpactScore = page_soup.findAll('span', {'data-testid': 'vuln-cvssv3-impact-score'}) for e in ImpactScore: q = e.get_text().strip() q = float(q) print(q) sheet1.write(1,0,q) ImpactSubscore = page_soup.findAll('span', {'data-testid': 'vuln-cvssv2-impact-subscore'}) for e in ImpactSubscore: r = e.get_text().strip() r = float(r) print(r) sheet1.write(1,2,r) sheet1.write(0,0,'ImpactScore') sheet1.write(0,2, 'ExploitabilityScore') wb.save('Data.xls') If anyone has any suggestions or advice, that would be great! Thanks if advance :)"
6,CVE,Python,How to deal with numpy's CVE-2019-6446?,1,b1c4tp,https://www.reddit.com/r/Python/comments/b1c4tp/how_to_deal_with_numpys_cve20196446/,2019-03-15 19:02:00,"My IT security wants to block numpy until [CVE-2019-6446](URL is solved (which could take years since the numpy team doesn't want to break backwards compatibility). I'm trying to argue that this is not a security vulnerability but because the score is so high (9+), they don't want to allow an exception to be made, but they will accept a support contract. Do you guys know any company that provides a maintenance or support for a recent version of numpy ? (RHEL is still using 1.7)"
7,CVE,Python,PSA: Please make sure your dependency for requests is v2.20.0!,1,9sio6t,https://www.reddit.com/r/Python/comments/9sio6t/psa_please_make_sure_your_dependency_for_requests/,2018-10-30 10:53:02,"&gt;The Requests package before 2.20.0 for Python sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network. **CVE**: 2018-18074 [View here](URL **Affected Versions**: `&lt;= 2.19.1` **Was fixed?** Yes! Please update your requirements.txt to 2.20.0. `requests&gt;=2.20.0` This is important as the vulnerability could expose credentials! "
8,CVE,Python,Looking for some help with smtplib while in a function and then being called into another function.,0,91tggm,https://www.reddit.com/r/Python/comments/91tggm/looking_for_some_help_with_smtplib_while_in_a/,2018-07-26 02:40:07,"I get this error: line 86, in send_email msg = MIMEMultipart() NameError: name 'MIMEMultipart' is not defined I have a function that sends emails and by itself in its own project works fine. But when I introduce it to a larger project and then call the send_email() function it acts up. Here is my standalone email script: from email.mime.multipart import MIMEMultipart from email.mime.text import MIMEText import smtplib import sqlite3 cve_link_string = ""URL #just to test that hyperlinking works def send_email(to_addr, vuln_desc, cve_link_string): msg = MIMEMultipart() # sender email, password, receiver email and subject. msg['From'] = 'myemail@domain.com' password = 'mypassword' msg['To'] = to_addr msg['Subject'] = 'email subject goes here' # body of email, string mixed with HTML body = ""Body of email"" msg.attach(MIMEText(body, 'html')) print(msg) # SMTP server and port number. Not to be omitted. server = smtplib.SMTP_SSL(""smtp.gmail.com"", 465) server.login(msg['From'], password) server.sendmail(msg['From'], msg['To'], msg.as_string()) server.quit() send_email(""receiver@domain.com"", ""VULNERABILITY DESCRIPTION"", cve_link_string) This part works fine. I receive the emails when I use the code this way. However when I try to call this function in another function like so: def email_iterator(): hyperlink_and_summary = [] c.execute('SELECT * FROM cve WHERE date_added = CURRENT_DATE') for row in c.fetchall(): hyperlink_and_summary.append(row) for name in hyperlink_and_summary: if name == 'jdk' or 'jre': send_email('receiver@email.com', 'URL 'summary') email_iterator() I get the error at the top. To give context as to what this program should do is, I have a large project where I scan an RSS feed, append the data I get from it into an sqlite3 database. This db contains the hyperlinks to CVE codes, their summary along with the CVE code and the date I added them in the database. The email_iterator() function is designed to grab the entries that are from today's date only and from there send emails to me letting me know which new vulnerabilities have been analyzed. Could someone help me understand why I get this error when introducing it to my larger project but not when it is by itself? Thank you"
9,CVE,Python,CVEs/security vulnerabilites for Python packages,1,7p925w,https://www.reddit.com/r/Python/comments/7p925w/cvessecurity_vulnerabilites_for_python_packages/,2018-01-10 05:25:21,"Hello python community, I'm currently working on a research for analyzing the security of python packages ecosystems. Part of my research is tied to looking up known security vulnerabilities of a given package and it's versions. I've been wondering if there is a public database where I can do such lookups to get a list of known vulnerabilities, something like the general CVE db? I've found a lot of vulnerabilites in CVE itself but that requires a lot of text processing &amp; analysis to extract this information and is not very reliable due to plain text nature of descriptions/titles. Another approach was looking into associated github repositories but that would also require huge amount of text analysis for opened issues and commit messages. Is there some public database that already contain this information? The requirement is that it need to be non-commercial due to license restrictions of this research (only open data, even if they offer ""free"" tier). I found few projects such as URL and URL but they appear to be commercial (see restriction above) Also feedback for some extraction methods like the one for classic CVE database would also be highly appreciated. Thanks for guiding me!"
10,CVE,Python,Python socket.gethostbyname() is not affected by GHOST (CVE-2015-0235),22,2u7ghu,http://www.reddit.com/r/Python/comments/2u7ghu/python_socketgethostbyname_is_not_affected_by/,2015-01-31 02:58:42,"I just inspected socketmodule.c and it seems to me that socket.gethostbyname() method is not affected by GHOST vulnerability. from socket import gethostbyname for i in range(0, 2500): gethostbyname('0'*i) This will not segfault because the socket module uses getaddrinfo() glibc call. However calling the gethostbyname() glibc method directly will: from dl import open obj = open('/lib/libc.so.6') for i in range(0, 2500): obj.call('gethostbyname', '0'*i) In a patched system (glibc &gt; 2.17) this will not crash your python runtime. Cheers, Nek "
