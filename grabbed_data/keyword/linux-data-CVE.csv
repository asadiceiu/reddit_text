,topic,subreddit,title,score,id,url,created,body
0,CVE,linux,Heads up! sudo leak a-hole...,0,dhyfyo,https://www.reddit.com/r/linux/comments/dhyfyo/heads_up_sudo_leak_ahole/,2019-10-15 09:41:31, Heads up..please upgrade to fix [Sudo CVE..](URL
1,CVE,linux,Which distro has the best security team?,0,d1l1xi,https://www.reddit.com/r/linux/comments/d1l1xi/which_distro_has_the_best_security_team/,2019-09-09 12:53:01,"Hello, Linux community! There are plenty of Linux distros to choose from and it can make selecting a distribution quite confusing when the goal is security. Most of the people don't even realize the difference between ""security"", ""privacy"" and ""anonymity"" and Google isn't helpful with it's silly ""[15 Most Secure Linux Distros For Privacy And Security](URL Also people most of time don't want ""special"" players like Qubes OS or Tails (which cannot be even compared, you see), they want something different. Now, don't get me wrong. This is not an r/findmeadistro post, though it probably leads to selecting a proper distro for a reader. But this post is intended as an insight into the current state of the real Linux security. There were [multiple](URL [times](URL when patches introduced bugs and even vulnerabilities, and the most impactful ones I am aware of were introduced by distro maintainers (remember Meltdown mess?) At the same time, it's not just about security teams. It is also about distributions and has an ambiguous word ""best"" in it, which allows me to slightly modify the course of question: security is not just about patching vulnerabilities in time. It's also about picking right tools from the beginning, including TLSv1.3 (which is likely not yet available for Debian users), ECC (specifically, Ed25519 support in software), etc. And my question is intended to find out the most competent AND active community. This is a very complicated question, actually. For example, take a look at Arch Linux's [security page](URL which usually has lots of vulnerabilities opened because they rely on upstream directly. Then, take a look at a nice utility called [arch-audit](URL And then read about [malware in AUR](URL I also believe there was a story about Arch getting security fixes faster than Ubuntu. And then think about how fine-grained control over your OS can help security. Let's clarify some things and recap: * By security I safety from unauthorized data access and identity stealing, not ""anonymity"" or ""privacy"" - two words that almost became trademarks because of incompetent ""TOP 10"" approach. * A person who responds to this post must be aware that some CVEs are not exploitable by themselves, as well as the well-known fact that correlation does not mean causation, i.e. ""bigger userbase"" or ""Canonical-backed"" does not mean that a distro has a better security team. Look at [Linux Mint](URL I [dare](URL you! * By ""best"" I mean ""providing security patches fast enough with sufficient code quality"" and ""providing **actually** safe defaults"". Cheers!"
2,CVE,linux,another specter Vulnerability found!,1,cn4q9g,https://www.reddit.com/r/linux/comments/cn4q9g/another_specter_vulnerability_found/,2019-08-07 21:45:22,"the specter vulnerability does inpact performance on intel x86\_x64 based devices. from what i've read, it's a attack that targets read access to privilaged memory here's more information [URL red hat wrote about it in detail here: [URL &amp;#x200B; patches have been submitted to linux-kernel-git so most distributions will have a kernel update soon! &amp;#x200B; I hope this helped someone! &amp;#x200B; Majid"
3,CVE,linux,"Tool to detect, find, compile and execute a CVE on the current machine.",1,c6bhku,https://www.reddit.com/r/linux/comments/c6bhku/tool_to_detect_find_compile_and_execute_a_cve_on/,2019-06-28 07:42:52,"Finish your Capture The Flag faster ! If you regularly practice small CTFs to train (e.g. Vulnhub.com), you can test the tool I created to save time. It automates the use of CVEs at the end of CTFs. [URL"
4,CVE,linux,"DEBIAN AND REDHAT JUST RELEASED FIXES FOR THE RIDL, ZombieLoad and Fallout",1,bp19op,https://www.reddit.com/r/linux/comments/bp19op/debian_and_redhat_just_released_fixes_for_the/,2019-05-16 04:04:41,"Introducing RIDL, ZombieLoad and Fallout DEBIAN AND REDHAT JUST RELEASED FIXES FOR THE RIDL, ZombieLoad and Fallout Debian Security Advisory DSA-4447-1 security@debian.org Package : intel-microcode CVE ID : CVE-2018-12126 CVE-2018-12127 CVE-2018-12130 CVE-2019-11091 This update ships updated CPU microcode for most types of Intel CPUs. It provides mitigations for the MSBDS, MFBDS, MLPDS and MDSUM hardware vulnerabilities. To fully resolve these vulnerabilities it is also necessary to update the Linux kernel packages as released in DSA 4444. &amp;#x200B; &amp;#x200B; ===================================================================== Red Hat Security Advisory Synopsis: Critical: flash-plugin security update Advisory ID: RHSA-2019:1234-01 Product: Red Hat Enterprise Linux Supplementary Advisory URL: URL Issue date: 2019-05-15 CVE Names: CVE-2019-7837 ====================================================================="
5,CVE,linux,[CVE-2019-5736] - runc vulnerability enabling container escape and root level code execution,1,apmptq,https://www.reddit.com/r/linux/comments/apmptq/cve20195736_runc_vulnerability_enabling_container/,2019-02-12 10:45:59,"* URL * URL * URL * URL &gt; The vulnerability allows a malicious container to (with minimal user interaction) overwrite the host runc binary and thus gain root-level code execution on the host. The level of user interaction is being able to run any command (it doesn't matter if the command is not attacker-controlled) as root within a container in either of these contexts: &gt; * Creating a new container using an attacker-controlled image. &gt; * Attaching (docker exec) into an existing container which the attacker had previous write access to. &gt; This vulnerability is *not* blocked by the default AppArmor policy, nor by the default SELinux policy on Fedora[++] (because container processes appear to be running as container_runtime_t). However, it *is* blocked through correct use of user namespaces (where the host root is not mapped into the container's user namespace)."
6,CVE,linux,Is there a better CVE site?,0,arsrf9,https://www.reddit.com/r/linux/comments/arsrf9/is_there_a_better_cve_site/,2019-02-18 14:36:54,I want to check for all kernel vulnerabilities which could be used to gain control of a machine (CVSS &gt;8) how come the following CVE: URL is hidden (unlisted) for this kernel version? (URL What others have been hidden? And title question; Is there a better per version CVE website? Thanks
7,CVE,linux,"CVE-2018-16865 systemd exploit poc going to be released soon. ""a local root shell in 10 minutes on i386"" . What is the risk level?",1,am5fkn,https://www.reddit.com/r/linux/comments/am5fkn/cve201816865_systemd_exploit_poc_going_to_be/,2019-02-02 05:56:35,"""We developed an exploit for CVE-2018-16865 and CVE-2018-16866 that obtains a local root shell in 10 minutes on i386 and 70 minutes on amd64, on average. We will publish our exploit in the near future. "" URL"
8,CVE,linux,Linux security: it's not great,1,9wkc44,https://www.reddit.com/r/linux/comments/9wkc44/linux_security_its_not_great/,2018-11-13 12:16:18," Hi. I'd be glad if you read all of my post and gave me some insight, whether you're new to Linux or have been using it for decades. How do you live with the dreadful Linux security landscape? Commits that fix security issues often leave out the CC: for the stable branch, don't have a CVE, and don't even explicitly mention the adverse effects that could befall someone without the fix. Most distributions use slightly older kernels (or way older, for CentOS/RHEL/Debian) and backport specific fixes to them. Security fixes without a CVE - and there are a lot of them - are often left out, and only available to those running the latest releases. Again, \*most\* distributions do not do that. Many users thus never get those patches and remain vulnerable. Most Linux distributions ship with sub-optimal default settings (mount flags, sysctls, kernel configuration, \[package mirrors\](URL over \[HTTP\](URL binaries built without much/any hardening, etc.) and leave the task of securing the box up to the system administrator. If you're experienced with that, great, but a lot of people are not. The ones who just install Linux and start using it are at very much at risk if the defaults are not good. I would expect something like Gentoo to leave everything up to the admin like that, not Mint or \*buntu. Different distributions get security fixes at different times. I saw Ubuntu fix \*\*\[three local root vulnerabilities in systemd\](URL today, but didn't see an advisory for Debian (for example). Maybe it already happened and I just missed it or something, but, for a security-conscious newcomer, this makes choosing a distribution very confusing. Who will get the fixes first? Sometimes \[different versions of the same distro don't even get all the fixes\](URL With few exceptions like the (linux-)distros mailing lists, there seems to be no coordination. BTW, about the systemd one: that should probably be its own section. Horrible security record there. Same with glibc. Same with OpenSSL. Exploit mitigation techniques, even basic ones, are not a strong focus of upstream Linux or the distributions at all. If you want those, you(r company) has to pay grsecurity for their secret patchset. The \[KSPP\](URL is not making much progress at all either. In fact, if the grsecurity author is to be believed, they shoehorn a lot of the grsec/PaX patches in without fully understanding them, thus introducing bugs. I know Brad has a pretty insufferable personality and it's in his best interests ($$$) to talk shit about the upstream code. Still, the whole situation is absolutely horrible and completely bizarre to someone that's not a Linux user. One guy keeps security fixes and improvements to himself, publicly boasting about how the vast majority of users are vulnerable to attack, and keeps his code sealed off behind an expensive paywall. He does not want the upstream kernel or GCC to improve; he wants more customers. The concept is very alien to someone like me. When governments or other malicious actors buy his code, they now have a private list of fixes to use against anyone else - \*against you\*. I could argue that grsecurity/PaX is a hostile actor. Theoretically, why doesn't one company buy the patch, get some people to integrate it, and move on? Everyone would be safer. More importantly: \*\*why does no one care about this?\*\* A run-of-the-mill Linux install is not protected against modern ROP attacks without modern mitigations available and enabled. With Linux, the attackers are way ahead of the defenders. Some Linux users seem to operating under the false assumption that their OS is ""secure."" Without diving into how broad of a subject security really is, it's pretty clear to me that almost no one creating Linux has user security as a very high priority. It tops the CVE charts time and time again, and no it's not just because ""more people are reading the code."" Corporate involvement in Linux development has skyrocketed, overshadowing the non-corporate involvement by a large degree. Companies get what they want in the tree and don't care how it affects everyone else. Does it build? Ship it! One random example: Have you seen the size of the amdgpu codebase? Look into it if not. Maybe some users will never take those codepaths and fall victim to the bugs, but not every example is so specific. It's a widespread problem throughout the entire kernel. Why are things so bad? What can we do to fix them? If possible, try to avoid overly dismissive replies like ""all software is bad"" or ""every computer is insecure"" and so on."
9,CVE,linux,"Let's see why Flatpak and sandboxing are awesome! (Also, a response to the recent Flatkill page)",1,9n50ba,https://www.reddit.com/r/linux/comments/9n50ba/lets_see_why_flatpak_and_sandboxing_are_awesome/,2018-10-11 11:13:51,"Okay, so sometimes I see some misunderstandings about Flatpak going around, and [this interesting page](URL unfortunately has not done much to help. I figured I'd take a brief moment to try and give a bit of an explanation of how exactly it works and why it's even a thing. ## Portability I'm not going to bother with this too much, since I think everyone knows this is one of Flatpak's main points. However, I've seen some people say that distro packaging helps improve security because of the people reviewing everything first. Distro packaging can bring [its own set of interesting problems](URL but *this only works for packages they want to accept*. Closed-source packages, where malicious software would realistically come from, are downloaded from the internet and never go through the actual distro screening. The only thing it really does is cause a higher barrier of entry for the average user trying to deploy their applications. ## Sandboxing This is the #1 question I see: **why do we need sandboxing?** It's easy to imagine when it comes to commercial applications, but it doesn't seem immediately obvious as to why you'd need it for an average application. However, sandboxing isn't just for malicious software. Remember: security vulnerabilities are a thing! Imagine your open-source messaging client got a security vulnerability. Now an attacker can send a malicious message, run arbitrary code, and be able to see...the application's other data. Yup: most applications that use GTK+ 3 or Qt 5 (more on this later) will usually have pretty thorough sandboxing. More portals are being created to cover more things (such as the infamous webcam), but even in its current state, if GNOME MPV were to come across an infected file, not much would really happen. ## Sandboxing (redux) Okay, now comes the main part of the Flatkill page: &gt; Almost all popular applications on flathub come with filesystem=host, filesystem=home or device=all permissions, that is, write permissions to the user home directory (and more), this effectively means that all it takes to ""escape the sandbox"" is echo download_and_execute_evil &gt;&gt; ~/.bashrc. That's it. &gt; This includes Gimp, VSCode, PyCharm, Octave, Inkscape, Steam, Audacity, VLC, ... First off, Flatpak has actually solved this problem. It has a concept called ""portals"", which let applications tap into the host for various reasons. The default filesystem portal will send a D-Bus message to your desktop environment, which will display an open or save dialog and then expose only the absolute minimum to the Flatpak'd app. If this is the case, then why do all these apps require filesystem permissions? Look a second. Is there anything they share in common? GTK+ 2! Filesystem portals are used by GTK+ 3 and Qt 5, but GTK+ 2 doesn't support them. This also impacts applications built with Electron 1, since it didn't switch to GTK+ 3 until Electron 2. Of course, this problem will gradually disappear over time. GIMP is moving GTK+ 3, Inkscape already has it working in the trunk, and Electron apps like Discord will gradually move over to Electron 2 (Zulip already has). &gt; To make matters worse, the users are misled to believe the apps run sandboxed. For all these apps flatpak shows a reassuring ""sandbox"" icon when installing the app (things do not get much better even when installing in the command line - you need to know flatpak internals to understand the warnings). This has nothing to do with Flatpak itself; if you install from the command-line, then you'll see all the permissions (this came out shortly before 1.0). This is an issue with GNOME Software. I'm not arguing it's not a problem, but it's hardly worth an entire section of this page. ## Runtime updating &gt; CVE-2018-11235 reported and fixed more than 4 months ago. Flatpak VSCode, Android Studio and Sublime Text still use unpatched git version 2.9.3. This was a pretty unfortunate issue; the way runtimes are built has entirely changed with org.freedesktop.Platform 18.08, and as a result it took a long time to get out, and not all applications have upgraded to it. Eventually everything will have moved over, at which point this will no longer be an issue. In addition, the new system makes it easier for runtimes to have LTS support for *at least* 2 years. That means major issues like this requiring migrations aren't really going to happen. ## Desktop integration &gt; Running KDE apps in fakepak? Forget about desktop integration (not even font size). Okay, I genuinely have no clue what exactly they're referring to here... KDE itself has [embraced Flatpak has a method of application distribution](URL and it's [Kube's primary method of distribution](URL ## Other security &gt; Up until 0.8.7 all it took to get root on the host was to install a flatpak package that contains a suid binary (flatpaks are installed to /var/lib/flatpak on your host system). Again, could this be any easier? A high severity CVE-2017-9780 (CVSS Score 7.2) has indeed been assigned to this vulnerability. Flatpak developers consider this a minor security issue. I'm honestly not sure how a security issue with Flatpak *while it was still in beta* and an out-of-context phrase from the changelog mean that it's terrible... ## Summary I'm personally all-aboard the Flatpak hype train! If you have any other doubts, please remember to take a look around instead of reading random stuff on the internet, because the internet has a tendency to...well, exaggerate stuff sometimes... \\\_()\_/ Side note: I find it interesting that a page mentioning Flatpak and the ""cornerstone of linux security"" doesn't use HTTPS..."
10,CVE,linux,What is it like using Wind River Linux?,6,99i74t,https://www.reddit.com/r/linux/comments/99i74t/what_is_it_like_using_wind_river_linux/,2018-08-23 09:18:54,"I'm a regular reader of - and occasional contributor to - /r/linux, but using a throwaway account for privacy reasons. I'm most recently experienced with RHEL systems. I'm not asking for tech support, just trying to get a feel for what a typical Wind River Linux workflow would be. I am tasked with providing an estimate to migrate our product to run under Wind River Linux. I realize that other distros may seem more appropriate, but Wind River has specifically been chosen. This OS will essentially be a host for several containers, some of which will need to communicate between themselves and some of which will need to access external devices (e.g. ethernet, serial, etc.). I've read some of the docs for Wind River Linux, and can see that it's a derivative of the Yocto Project (which I've been wanting to delve into for some time). * I'm having trouble getting my mind wrapped around a workflow for a Yocto Project like Wind River. My understanding is that I would start with a base template (I think that's the right word) and then modify the build configuration to include pieces that the OS needs to support the installed applications. is this basically a typical ""dependency resolution"" problem (like I did with Slackware back in the day)? Basically: build an OS, try the applications, look at the errors, and add needed parts? * I think I saw that Wind River uses DNF for package management. Does that mean that, for example, if postgres is update due to a CVE, a deployed host (with postgres installed in the host, not in a container) would only need that rpm updated? "
11,CVE,linux,List of distros with (or without) CVE status?,3,8ororm,https://www.reddit.com/r/linux/comments/8ororm/list_of_distros_with_or_without_cve_status/,2018-06-06 01:24:13,"I'm curious about which distros maintain, or at least discuss publicly, their status with respect to CVEs? I know that Red Hat has [a CVE Database](URL Debian has [CVE-compatible advisories](URL and other big ditros provide something like this. I'm just wondering if there's a curated list of distros, whether they provide a list focused on their official repos, and if not what they recommend users do. This came to mind when I was looking into Void Linux, which apparently doesn't provide their own list, but stays close enough to upstream that the user can just monitor the CVEs themselves. "
12,CVE,linux,"Anchore.io free container image analysis tools adds private image support, graphical policy editor, and more",109,6v4wtl,https://www.reddit.com/r/linux/comments/6v4wtl/anchoreio_free_container_image_analysis_tools/,2017-08-22 04:28:02,"We recently made some big updates to our Docker security and analysis tool and we'd love some feedback from the r/linux community! Updates to [Anchore.io](URL include: - Private Repositories: Allowing you to setup private repositories to be scanned by Anchore. - A Graphical Policy Editor: The new graphical policy editor allows you define your own custom policies and map which policies are used with which images. The policy editor supports CVE whitelisting - allowing a curated set of CVEs to be excluded from security vulnerability alerts. - Expanded Notifications: In addition to image update notifications the Anchore Navigator can now alert you by email when CVEs have been added or removed from your image and when the policy status of your image has changed, for example an image that previously passed is now failing policy evaluation. Your feedback would be extremely helpful, so if you have a minute head over to [URL and take a look Thanks!"
13,CVE,linux,PSA: Java/JVM processes may need to increase stack size with -Xss&lt;SIZE&gt; to start with StackGuard kernel correction (CVE-2017-1000364),24,6ivta6,https://www.reddit.com/r/linux/comments/6ivta6/psa_javajvm_processes_may_need_to_increase_stack/,2017-06-23 05:23:54,"Warning, I am not a developer and do not understand Java. Just the schmuck that has to troubleshoot. I have been troubleshooting a Java process core dump at startup after applying this week's kernel errata from Red Hat (both 6.9 and 7.3). Ends up, the stack size within the JVM needed to be increased to support the larger Guard page size (1MB). I increased the stack size to be 2 MB just as a test and the JVm started. Tested with Oracle Java and OpenJDK with similar core dumps on JVM startup. I have heard that the kernel errata has broken several applications. Reference links: URL URL "
14,CVE,linux,CVE-2017-9417 aka Broadpwn: exploit for Broadcom Wifi chip firmware,68,6n8fts,https://www.reddit.com/r/linux/comments/6n8fts/cve20179417_aka_broadpwn_exploit_for_broadcom/,2017-07-14 21:31:07,"Apparently the attacker uses the buffer overflow to get root on the wifi chip itself, and can from there DMA to get access to the host system. Android just patched it, but I can't find any firmware updates that could be used with Linux... :/ URL URL "
15,CVE,linux,CRITICAL CVE-2016-10229,0,65a14a,https://www.reddit.com/r/linux/comments/65a14a/critical_cve201610229/,2017-04-14 12:32:46,"According to the entry, it says 'kernel before 4.5' now its not clear if means only the 4.x branch or the ENTIRE kernel tree. But come on... where is the 'FOSS is better because so many people are auditing the code!' How many lines of the kernel have you audited today?????"
16,CVE,linux,Packages vulnerability scanner?,9,5m2u7n,https://www.reddit.com/r/linux/comments/5m2u7n/packages_vulnerability_scanner/,2017-01-05 10:57:53,Is there a package vulnerability scanner for Linux ? Kind of like Nikto but for Linux desktops instead of web applications. I did a little research and found Lynis but it doesn't provide information about which package is vulnerable or any CVE id . 
17,CVE,linux,"[Job Opportunity] - Linux Security Engineer - London , UK",0,5h0o12,https://www.reddit.com/r/linux/comments/5h0o12/job_opportunity_linux_security_engineer_london_uk/,2016-12-08 03:00:34,"*Apologies if this is not the right board to post this, Delete if you think is not correct to have it here* We are looking for a candidate who is either an experienced System Administrator with an appetite to focus on security threat management, or a technical security professional with an interest to expand their skills as a System Administrator. Full Job Description: URL This is not a link-shortener, just the way referrals work on ""greenhouse.io"" Overview of required skills and knowledge: * Work experience with Linux , in particular Centos / RHEL - 2-5 years * IDS systems like Snort, Suricata, Sourcefire or OSSEC * Basic understanding of networking principles including VLANs, IP subnetting, firewalling and routing * Familiarity with commonly used network services such as: LDAP, NFS, SNMP, Apache, MySQL, Samba, BIND, Squid, etc. * Mitre CVE vulnerability documents * Good written and verbal communication skills; fluent in English, and great people skills. * Experience with RedHat Spacewalk/Satellite , OpenSCAP , Nessus , Metasploit or OpenVAS"
18,CVE,linux,"Deepin OS, gorgeous DE but 0 security.",49,58zyqi,https://www.reddit.com/r/linux/comments/58zyqi/deepin_os_gorgeous_de_but_0_security/,2016-10-24 05:34:33,"For a while we heard of a Chinese distro called Deepin, maintained by the Wuhan Deepin Technology Co., Ltd and its beautiful DE. I have used it for almost a month in a Virtual Environment without finding any apparent problem. Two days ago, however, after the discovery of Dirty COW and not finding a patch in the repo, I have opened an issue on bugzilla (URL After few answers from the mantainer I tried to patch the kernel manually and, with big surprise, according to sources available on URL ~~I found that the kernel is still based on version 4.4-rc6 (discontinued before the start of 2016).~~ &amp;nbsp; ~~git clone URL ~~cd deepin-kernel~~ ~~fakeroot make -f debian/rules orig~~ ~~mkdir -p ../orig~~ ~~wget -c URL -O ../orig/linux-4.4-rc6.tar.xz || (echo ""removing ../orig/linux-4.4-rc6.tar.xz""; rm -fr ../orig/linux-4.4-rc6.tar.xz; exit 1)~~ ~~--2016-10-21 21:53:56-- URL ~~Resolving URL (URL 149.20.4.69, 198.145.20.140, 199.204.44.194, ...~~ ~~Connecting to URL (URL connected.~~ ~~HTTP request sent, awaiting response... 200 OK~~ ~~Length: 87271788 (83M) [application/x-xz]~~ ~~Saving to: linux-4.4-rc6.tar.xz~~ ~~../orig/linux-4.4-rc6.tar.xz~~ ~~100%[=======================================================================================&gt;]~~ ~~83,23M 1,13MB/s in 75s~~ ~~2016-10-21 21:55:12 (1,11 MB/s) - ""../orig/linux-4.4-rc6.tar.xz"" saved [87271788/87271788]~~ &amp;nbsp; &amp;nbsp; ~~I tried to search inside that repo for any possible security patch but I could not find anything relevant.~~ Currently the kernel is not having any security patch and it is still vulnerable to exploits with fixes released more than 5 months ago (CVE-2016-4557: URL - Local Privilege Escalation) uname -a 4.4.0-2-deepin-amd64 #1 SMP Deepin 4.4.6-4 (2016-07-01) x86_64 GNU/Linux &amp;nbsp; I have reported several times that the kernel is currently not updated and safe ~~but I have received no official response~~ (URL &amp;nbsp; Be careful if you are a user of this distribution, try to patch the kernel manually or ~~just change distribution for now~~ wait for the update. &amp;nbsp; &amp;nbsp; EDIT: Actually they have a wrong master branch old and outdated (no idea why) , the new one is the 4.4-02 now based on 4.4.26. The PoCs were tested on the actually .4.0-2-deepin-amd64 #1 SMP Deepin 4.4.6-4 (2016-07-01) x86_64 GNU/Linux. The Fix has been released and will be pushed soon. Thank you all for the sharing URL EDIT#2: Video: URL"
19,CVE,linux,Security Updates: Debian vs. Ubuntu,1,4hzg5s,https://www.reddit.com/r/linux/comments/4hzg5s/security_updates_debian_vs_ubuntu/,2016-05-05 21:19:01,"Hi! I read some threads about Debian vs. Ubuntu, but those discussions didn't give a 'trusted opinion' about security updates. I perceived that Ubuntu puts 'Medium Risk' for 'High Security Risk' from CVE Reports, and that made me a little bit nervous: should I start reading the CVE Reports instead Ubuntu Reports? And the speed that these security updates come to the security repos? Are there some Documentation about Security Updates from Debian and also Ubuntu? Some Facts: - Linux Users since 1999 - Don't like the 'manifestos and political stuff' from distros - For the questions, supose a normal LAMP Server with openSSL. Please, don't answer this question with use Distro X. I already know every distro like CentOS, Debian, Ubuntu and also BSDs. And please, no bullshit debian vs ubuntu attacks. Thanks in Advance and a wonderful day for all."
20,CVE,linux,Question about Linux Security Scan!,0,3v21em,https://www.reddit.com/r/linux/comments/3v21em/question_about_linux_security_scan/,2015-12-02 08:55:26,When i do a security scan on my RHEL 6 i got CVE-2009-3555 Report!!! This CVE is not affected RHEL 6! why i got this result?!
21,CVE,linux,Local Grub2 vulnerability - patches are on the way,0,3xq1lf,https://www.reddit.com/r/linux/comments/3xq1lf/local_grub2_vulnerability_patches_are_on_the_way/,2015-12-22 04:12:08,"If grub2 is secured with a user name and password, it can be bypassed. [More details](URL Distributions are supposed to be getting these packages out soon."
22,CVE,linux,Average Security Patch Time,12,2rcigj,http://www.reddit.com/r/linux/comments/2rcigj/average_security_patch_time/,2015-01-05 10:57:52,"I was searching for informations about the average time it took a security vulnerability (like CVE's or other security relevant bugs) on Linux(and maybe core userland applications) and various other operating systems for comparison to get resolved by a patch. I only found some sparse data from 2012 from Trustwave which indicates that Linux took on averade 857 days compared to 375 days on Windows. But this looks totally made up due to the fact that linux had 9 and windows 34 Vulnerability and the two zero days did not really affect a wide range of users cuz these are in the HSF and ext4 driver(at 2012). The data at all is to sparse to make up good statistics about that. Are there any other sources of information you guys know of, cuz i guess there should be more security related bugs on the major os's for comparison. Or is there any database i can query for a CVE and the time it was fixed?"
23,CVE,linux,CVE-2015-0235: access linux host without any credentials,287,2tujbc,http://www.reddit.com/r/linux/comments/2tujbc/cve20150235_access_linux_host_without_any/,2015-01-28 02:35:09,"URL (in French, sorry, Google translate here: URL I will update with more information Debian info: URL Bugzilla Redhat: URL"
