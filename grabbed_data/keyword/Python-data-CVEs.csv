,topic,subreddit,title,score,id,url,created,body
0,CVEs,Python,Automated Hacking Script!,1,fx8y1b,https://www.reddit.com/r/Python/comments/fx8y1b/automated_hacking_script/,2020-04-09 01:53:25,"Automated Hacking Script! Hey everyone! I have been working really hard on a hacking script that I REALLY would like some people to test and provide feedback to me! The script name is ""Purple Script"" as the ideal end user could be a red team or a blue team member. The purpose of the script is to rank systems from most to least vulnerable and then test each system using metasploit. The best part is this requires ZERO user knowledge or interaction. Once you download the script (purplescript.py) from github.com/sahullander/purple-script simply run the code: sudo python3 purplescript.py from the directory that the script resides. pip3 install all packages that come up in the ""package not found"" error and then rerun the script. **THIS IS ONLY WORKING ON LINUX** for right now. I am going to port everything later on (if possible). Please understand this is an alpha test, there is a lot more to be done in terms of efficiency, cleanness and more. **WHAT I NEED FROM YOU** is anything you think would work better, recommendations, or what you do not like about the script. Before doing this, please read the TODO file on my GitHub to make sure I haven't already accommodated for it. What you will get from the script is: 1. **IPList.txt** 2. **cveDetails.txt** 3. **serviceDetails.txt** 4. **A folder for each host** (named according to IP) Example of all of these can be found on GitHub 5) **overview.txt** this file is one of the most important. This gives you an overview of how the systems on your network did. It shows your host details, the each hosts' vulnerability levels (critical, high, medium, low, inconclusive) based on highest CVE score category found for that host, count of each CVE category, services found, services with metasploit modules, and services exploited. Again, each host is listed in order from most to least vulnerable (based on CVEs only). The end shows the total run-time for the script. I know this is a lot, and if you made it through this post then THANK YOU. Everyone who tests the script or look sit over and provides useful feedback will be mentioned in the final version of the script when done! Thank you again to everyone who reads this and especially those who give it a go. I look forward to hearing your thoughts!"
1,CVEs,Python,[RELEASE] CVE-MAKER V2.0,0,dnrc5o,https://www.reddit.com/r/Python/comments/dnrc5o/release_cvemaker_v20/,2019-10-27 20:59:16,"Hi everyone ! Today I release version 2.0 of my cve-maker tool. As a reminder, this last one is used to quickly search for the names of CVEs (computer vulnerabilities), and to retrieve, compile and execute them on the current or a remote machine in a few seconds ! The perfect tool to quickly finish a Capture The Flag that requires a privilege elevation. [URL"
2,CVEs,Python,[RELEASE] CVE-MAKER V2.0,1,dqntzf,https://www.reddit.com/r/Python/comments/dqntzf/release_cvemaker_v20/,2019-11-03 05:00:39,"Hi everyone ! Today I release version 2.0 of my cve-maker tool. As a reminder, this last one is used to quickly search for the names of CVEs (computer vulnerabilities), and to retrieve, compile and execute them on the current or a remote machine in a few seconds ! The perfect tool to quickly finish a Capture The Flag that requires a privilege elevation. [URL"
3,CVEs,Python,[RELEASE] CVE-MAKER V2.0,1,d5k3vp,https://www.reddit.com/r/Python/comments/d5k3vp/release_cvemaker_v20/,2019-09-18 03:20:45,"Hi everyone! Today I release version 2.0 of my cve-maker tool. As a reminder, this last one is used to quickly search for the names of CVEs (computer vulnerabilities), and to retrieve, compile and execute them on the current or a remote machine in a few seconds! The perfect tool to quickly finish a Capture The Flag that requires a privilege elevation. [URL"
4,CVEs,Python,[RELEASE] CVE-MAKER V2.0,35,d78978,https://www.reddit.com/r/Python/comments/d78978/release_cvemaker_v20/,2019-09-21 19:15:31,"Hi everyone! Today I release version 2.0 of my cve-maker tool. As a reminder, this last one is used to quickly search for the names of CVEs (computer vulnerabilities), and to retrieve, compile and execute them on the current or a remote machine in a few seconds! The perfect tool to quickly finish a Capture The Flag that requires a privilege elevation. [URL"
5,CVEs,Python,Identifying dependencies and their versions,0,cy155z,https://www.reddit.com/r/Python/comments/cy155z/identifying_dependencies_and_their_versions/,2019-09-01 07:24:50,"Hey everyone! I have a need to identify all dependencies and their versions for different python projects. I basically need to go through a github repository, identify all the dependencies that are used and their current version, and then get the latest version of that dependency. I then need to identify security vulnerabilities (CVEs) with the version used in the project. Ideally, this would be run in a CI/CD pipeline for python applications. Any ideas on where to start? This will be my first project."
6,CVEs,Python,Sloppiest code i've ever written...can this be cleaned up?,0,cz7w53,https://www.reddit.com/r/Python/comments/cz7w53/sloppiest_code_ive_ever_writtencan_this_be/,2019-09-04 03:23:01,"I'm building an open source tool for Python dependency checking. In the end, this code will tell you if a dependency your using has any security advisories or CVEs, give you the latest version of the dependency, and also (in the future) give you the downstream dependencies of those dependencies. I burned through the weekend to get it started, and i built a helper for looking at a requirements.txt file. However, i'm really not happy on how it turned out. I have never really been the best at dealing with dicts/JSON, so it's super sloppy. Can anyone tell me how i can make it better? Code i'm talking about specifically is towards the bottom (line 105 and below): [URL"
7,CVEs,Python,CVEs/security vulnerabilites for Python packages,1,7p925w,https://www.reddit.com/r/Python/comments/7p925w/cvessecurity_vulnerabilites_for_python_packages/,2018-01-10 05:25:21,"Hello python community, I'm currently working on a research for analyzing the security of python packages ecosystems. Part of my research is tied to looking up known security vulnerabilities of a given package and it's versions. I've been wondering if there is a public database where I can do such lookups to get a list of known vulnerabilities, something like the general CVE db? I've found a lot of vulnerabilites in CVE itself but that requires a lot of text processing &amp; analysis to extract this information and is not very reliable due to plain text nature of descriptions/titles. Another approach was looking into associated github repositories but that would also require huge amount of text analysis for opened issues and commit messages. Is there some public database that already contain this information? The requirement is that it need to be non-commercial due to license restrictions of this research (only open data, even if they offer ""free"" tier). I found few projects such as URL and URL but they appear to be commercial (see restriction above) Also feedback for some extraction methods like the one for classic CVE database would also be highly appreciated. Thanks for guiding me!"
