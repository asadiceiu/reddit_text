,topic,subreddit,title,score,id,url,created,body
0,CVE,aws,AWS Inspector - Windows EC2 Instances reports CPU related CVEs ### CVE-2018-12126 CVE-2018-12127 CVE-2018-12130 CVE-2018-3639 CVE-2019-11091,1,hejmso,https://www.reddit.com/r/aws/comments/hejmso/aws_inspector_windows_ec2_instances_reports_cpu/,2020-06-24 04:06:23,"Practising with AWS Inspector, used [Common Vulnerabilities and Exposures-1.1](URL rules package and got a score of CVEs on each Windows machine. Machines are patched and deployed from AWS default AMIs. I can see some other people report the same in AWS forums but user questions never answered. Here is a fresh one - [CVEs-2017-5753, 5754, 5715. on a recent Windows Server 2019 Core AMI based?](URL List if CVEs i got:  CVE-2018-12126 Medium Microarchitectural Store Buffer Data Sampling (MSBDS): Store buffers on some microprocessors utilizing speculative execution may allow an authenticated user to potentially enable information disclosure via a side channel with local access. A list of impacted products can be found here:  CVE-2018-12127 Medium Microarchitectural Load Port Data Sampling (MLPDS): Load ports on some microprocessors utilizing speculative execution may allow an authenticated user to potentially enable information disclosure via a side channel with local access. A list of impacted products can be found here: URL  CVE-2018-12130 Medium Microarchitectural Fill Buffer Data Sampling (MFBDS): Fill buffers on some microprocessors utilizing speculative execution may allow an authenticated user to potentially enable information disclosure via a side channel with local access. A list of impacted products can be found here: URL  CVE-2018-3639 Medium Systems with microprocessors utilizing speculative execution and speculative execution of memory reads before the addresses of all prior memory writes are known may allow unauthorized disclosure of information to an attacker with local user access via a side-channel analysis, aka Speculative Store Bypass (SSB), Variant 4.  CVE-2019-11091 Medium Microarchitectural Data Sampling Uncacheable Memory (MDSUM): Uncacheable memory on some microprocessors utilizing speculative execution may allow an authenticated user to potentially enable information disclosure via a side channel with local access. A list of impacted products can be found here: URL"
1,CVE,aws,AWS S3: Disabling TCP SACK may cause performance issues,1,en9ngc,https://www.reddit.com/r/aws/comments/en9ngc/aws_s3_disabling_tcp_sack_may_cause_performance/,2020-01-12 03:40:53,[URL TL;DR: If you disabled TCP SACK in your Linux kernel configuration via sysctl to mitigate [CVE-2019-11477](URL or [CVE-2019-11478](URL you may experience performance issues with Amazon S3 and other services. It's recommended to update your Linux kernel to a patched version and re-enable TCP SACK; or instead to drop incoming TCP segments with an MSS &lt;= 500.
2,CVE,aws,Amazon S3: Disabling TCP SACK may cause performance issues,1,en9s33,https://www.reddit.com/r/aws/comments/en9s33/amazon_s3_disabling_tcp_sack_may_cause/,2020-01-12 03:50:59,"[URL Summary: If you disabled TCP SACK in your Linux kernel configuration via sysctl to mitigate [CVE-2019-11477](URL or [CVE-2019-11478](URL you may experience degraded throughput with Amazon S3 and other services. It's recommended to re-enable TCP SACK and either (a) update your Linux kernel to a patched version, or (b) drop incoming TCP segments with an MSS &lt;= 500."
3,CVE,aws,Windows Critical Patch CVE-2020-0601 AMI,1,eouizp,https://www.reddit.com/r/aws/comments/eouizp/windows_critical_patch_cve20200601_ami/,2020-01-15 11:40:04,Anyone know when we can expect new Windows AMIs that are patched for CVE-2020-0601? &amp;#x200B; [URL
4,CVE,aws,My EC2 was attacked and corrupted,1,e7ovnf,https://www.reddit.com/r/aws/comments/e7ovnf/my_ec2_was_attacked_and_corrupted/,2019-12-08 14:58:25,"Sorry in advance for not being an expert on these things. I received an Amazon EC2 abuse report that said the following: We've received a report(s) that your AWS resource(s)... \[my instance\] has been implicated in activity which resembles attempts to access remote hosts on the internet without authorization. Activity of this nature is forbidden in the AWS Acceptable Use Policy ([URL We've included the original report below for your review. ... The report said that my instance sent out a malicious exploit called exploit:gen/cve\_2019\_2725. There are a few possible causes. I may have made a mistake when updating this server before I set up SSL/HTTPS. I have included my complete bash history on the server at the end of this post. The other possibility is that I was targeted after making a YouTube tutorial video on AWS. However, not many people saw the video, and it was only about Lightsail. Here's the video ([URL They would have seen my user name for AWS, but is there a way they could find out my EC2 instances and their IPs in order to target them? Another possibility is that I was a random victim, and another possibility is that my router is compromised. I'm in a share house and other people share the router. I used to use only tethering to my phone for internet but then I got lazy and started using the router. Anyone have any advice? I stored an AMI of the instance before terminating it. I kind of want to try running it in a carefully quarantined local vm and try to look for the exploit. Any ideas where to look? Here is my complete bash history from the server. 1 ls 2 pwd 3 sudo apt upgrade 4 sudo apt update 5 sudo apt upgrade 6 sudo reboot 7 ls 8 sudo apt install apache2 9 sudo apt install mysql-server 10 sudo mysql\_secure\_installation 11 sudo apt install php libapache2-mod-php php-mysql 12 sudo vim /etc/apache2/mods-enabled/dir.conf 13 sudo systemctl restart apache2 14 sudo systemctl status apache2 15 mysql -u root -p 16 sudo mysql -u root -p 17 sudo apt update 18 sudo apt install php-curl php-gd php-mbstring php-xml php-xmlrpc php-soap php-intl php-zip 19 sudo systemctl restart apache2 20 history 21 sudo apache2ctl configtest 22 ls 23 pwd 24 mkdir tmp 25 cd tmp 26 ls 27 curl -O URL 28 tar xzvf latest.tar.gz 29 touch /tmp/wordpress/.htaccess 30 touch wordpress/.htaccess 31 ls 32 mv wordpress/ /tmp 33 cp /tmp/wordpress/wp-config-sample.php /tmp/wordpress/wp-config.php 34 mkdir /tmp/wordpress/wp-content/upgrade 35 cd /tmp 36 sudo cp -a /tmp/wordpress/. /var/www/wordpress 37 sudo chown -R www-data:www-data /var/www/wordpress 38 sudo find /var/www/wordpress/ -type d -exec chmod 750 {} \\; 39 sudo find /var/www/wordpress/ -type f -exec chmod 640 {} \\; 40 ls 41 curl -s URL 42 sudo vim /var/www/wordpress/wp-config.php 43 cd /var/www 44 ls 45 cd wordpress/ 46 ls 47 sudo su 48 lsb\_release -a 49 exit 50 history"
5,CVE,aws,Creating a trigger off of RSS feed?,1,dvl1xy,https://www.reddit.com/r/aws/comments/dvl1xy/creating_a_trigger_off_of_rss_feed/,2019-11-13 13:35:33,"Good afternoon. I am looking to create an action from an RSS feed. Essentially, I want to re-build our base Amazon Linux image the instant there is a CVE posted in Amazons ATLAS RSS feed [URL I am thinking that there should be a way to subscribe to an SNS topic which triggers a lambda to get the whole build process started. Is anyone using a method somewhat similar? If so, what is the method that you are using to accomplish this task? Is the best method still to have an SSM process simply run patching on your base image? I like the idea of rebuilding as much and as often as I can. Patching seems to fall outside that paradigm so if there is another method I would like to explore that route."
6,CVE,aws,Severe Linux Kernel Flaw Found In RDS,0,bqbo53,https://www.reddit.com/r/aws/comments/bqbo53/severe_linux_kernel_flaw_found_in_rds/,2019-05-19 11:58:09,"According to this article on Slashdot. &amp;#x200B; "" *Linux systems running kernels prior to 5.0.8 require patching after news emerged of* [*a high-severity flaw that could be remotely exploited*](URL to the NIST advisory, CVE-2019-1181 is a race condition affecting the kernel's* *rds\_tcp\_kill\_sock* *in* *net/rds/tcp.c* *""leading to* [*a use-after-free, related to net namespace cleanup*](URL The RDS bit refers to systems running the Reliable Datagram Sockets (RDS) for the TCP module, which means only systems that run applications using this are affected.* *The attention-grabbing part is that this opens unpatched systems to remote compromise and denial of service without the need for system privileges or user interaction. On the other hand, the attack complexity is described as 'high', and any such attack would need to be launched from the local network.* "" &amp;#x200B; source: [URL [URL"
7,CVE,aws,Sidechannel md_clear cpu flags not being passed to EC2 instances?,8,br38fl,https://www.reddit.com/r/aws/comments/br38fl/sidechannel_md_clear_cpu_flags_not_being_passed/,2019-05-21 09:51:47,"I've stopped &amp; started my m5d.large EC2 instances to pickup the new microcode : 0x200005e. This is the latest rev of microcode released by Intel for Skylake CPUs per the May 14th, 2019 pdf. My instances microcode went from 4e -&gt; 5e and 5a -&gt; 5e. I had to do a full shutdown and start to get new microcode. &amp;#x200B; My instances are running RHEL 7.6, 3.10.0-957.12.2.el7.x86\_64. Testing with spectre-meltdown-checker it fails on the latest side channel CVEs. Vmware had KB articles on how to update ESXI hosts &amp; cluster to make sure it pushes updated cpu flags. I had to do this on my in house Vmware cluster, and I get green across the board internally, but not in AWS. &amp;#x200B; While AWS has pushed the updated microcode, it doesn't appear (at least for me) they are pushing updated cpu flags to enable the OS to apply Kernel mitigation: &amp;#x200B; CVE-2018-12130 aka 'ZombieLoad, microarchitectural fill buffer data sampling (MFBDS)' \* Mitigated according to the /sys interface: NO (Vulnerable: Clear CPU buffers attempted, no microcode; SMT Host state unknown) \* CPU supports the MD\_CLEAR functionality: NO \* Kernel supports using MD\_CLEAR mitigation: YES (found md\_clear implementation evidence in kernel image) \* Kernel mitigation is enabled and active: NO \* SMT is either mitigated or disabled: NO \&gt; STATUS: VULNERABLE (Vulnerable: Clear CPU buffers attempted, no microcode; SMT Host state unknown) &amp;#x200B; cat /proc/cpuinfo | grep micro microcode : 0x200005e microcode : 0x200005e &amp;#x200B; cat /sys/devices/system/cpu/vulnerabilities/mds Vulnerable: Clear CPU buffers attempted, no microcode; SMT Host state unknown &amp;#x200B; What am I missing?"
8,CVE,aws,AWS WAF: Marketplace groups and resource limits,1,86nuns,https://www.reddit.com/r/aws/comments/86nuns/aws_waf_marketplace_groups_and_resource_limits/,2018-03-24 07:28:22,"Created a WAF ACL for the first time today. My goal was to add the three F5 marketplace groups: ""Web Application CVE Signatures,"" ""Web Exploits,"" and ""Bot Detection Signatures."" However, I am receiving a ""Operation would result in exceeding resource limits"" error even when trying to add just two of these. Screenshot here: [URL Question #1: anyone experienced to know which limit is being hit? I can hopefully ask for a limit increase if I can figure out which... Question #2: it feels to me like this limit defeats the purpose of allowing multiple marketplace rules, no? If limits prevent you from using more than one, then why did AWS build a UI for selecting multiple? Is it possible the issue I ran into is a bug/oversight on AWS' end? Thanks for any help!"
9,CVE,aws,AWS Linux repo critical update delay?,3,3cpj2f,http://www.reddit.com/r/aws/comments/3cpj2f/aws_linux_repo_critical_update_delay/,2015-07-10 05:09:37,"The openssl CVE-2015-1793 patch was released early this morning upstream, and AWS seems to have had a patch bundled for it promptly at 6:15 Pacific (URL However, 1.0.1k-10.87 is still not showing up in the repos (latest is 1.0.1k-10.86) for update 6 hours later. Any ideas why there's such lag to get it out, or when to expect it? I would have thought it would be published on the repos at the time AWS sent out the advisory. I like using the AWS Linux AMI, but small things like this make me question Amazon's commitment to it."
