,topic,subreddit,title,score,id,url,created,body
0,CVE,ssl,Addressing GOLDEN DOODLE &amp; ZOMBIE POODLE without disabling CBC,1,c30oun,https://www.reddit.com/r/ssl/comments/c30oun/addressing_golden_doodle_zombie_poodle_without/,2019-06-21 05:54:02,"This is concerning CVE-2019-6593. &amp;#x200B; Clearly disabling CBC ciphers is the recommendation I am reading when looking around for mitigations for the new variants. For some sites I am getting an F and the only way I have been able to get the A is to disable the CBC ciphers. I got that, but the obvious problem is IE11 and Windows 7 support for client base. However, when I test a few sites in the cloud, including our own and some very popular ones, they are still getting an A despite still having the CBC in their cipher suites. How can we have it both ways too? Is there something about IaaS and PaaS services or containerization that mitigates this? Trying to understand what a chosen-cipher attack is and how a cloud service or deployment model would matter to obtaining the private key may be irrelevant. I just want to know how they are getting the **A** while still supporting these CBC ciphers in their suites: e.g. Amazon.com [URL e.g. Chase.com [URL &amp;#x200B; I am not finding anything online offering any explanation as to why they get the A while still supporting those ciphers. This could also be that I do not understand something fundamental here. Any insight is appreciated."
1,CVE,ssl,ERR_SSL_WEAK_SERVER_EPHEMERAL_DH_KEY,2,3jzz3j,https://www.reddit.com/r/ssl/comments/3jzz3j/err_ssl_weak_server_ephemeral_dh_key/,2015-09-08 04:19:49,"ERR_SSL_WEAK_SERVER_EPHEMERAL_DH_KEY This is related to the Logjam vulnerability. The option to add export cipher suites was used in the past to allow a server to connect with a client that does not support up to date ciphers. When this is enabled an attacker can rewrite the hello handshake and perform a man in the middle attack. Maybe this is a bit late, but I have been seeing this error a lot lately. This error comes when viewing a HTTPS site in Firefox that uses export cipher suites. This error has also just started showing up in the latest Chrome. If you google the error, most of the solutions will be to enable vulnerable protocols in the client web browser. The real solution is to have the server admin disable export cipher suites. The steps to do that will depend on the server being used, and support comes from the specific server vendor. Sources: Government security advisory: URL Tests your browser and gives information on the vulnerability: URL Article written on the issue: URL Qualys test to see if a server has this vulnerability and many more: URL"
