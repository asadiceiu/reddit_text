,topic,subreddit,title,score,id,url,created,body
0,CVE-,java,"Why are ""Critical"" security patches impossible to find?",1,i4a6oh,https://www.reddit.com/r/java/comments/i4a6oh/why_are_critical_security_patches_impossible_to/,2020-08-06 03:56:06,"I came across [*this CVE-2020-14593 that affects Java SE: 7u261, 8u251, 11.0.7, 14.0.1 and Java SE Embedded: 8u251*](URL That's actually only one of [*a few that I came across*](URL So when my curiosity got the better of me, I searched to see if CVE-2020-14593 was mentioned in either [*the Mercurial repository*](URL or [*GitHub*](URL No hits in either. I also tried a couple other different keywords. [*Oracle's Risk Matrix*](URL mentioned *2D* in CVE-2020-14593's *Components* column. So, for example, I searched for the most obvious synonyms for *2D* (*java 2 D*, *java2D*, *and what not*). I got Bubkis! There's no mention of anything that sounds like it in neither [*14.0.1's Release Notes*](URL nor in [*14.0.2's*](URL Clicking the [*Java SE link*](URL in the [*Patch Availability Document column*](URL for *Oracle Java SE, versions 7u261, 8u251, 11.0.7, 14.0.1* (*the table in the middle of the page*) launches an Oracle Support page. I presume that's where people with paid support could download the patch(?) But what about the rest of us? Where can we actually eyeball the actual code that shows what was actually ""*patched*""? If it's so ""*Critical*"" shouldn't we be allowed to? I'm pretty sure the patched code is already in the code base. ***Somewhere***. But why is it impossible to find?"
1,CVE-,java,Deserialization vulnerabilities and SecurityManager,1,dw92q3,https://www.reddit.com/r/java/comments/dw92q3/deserialization_vulnerabilities_and/,2019-11-14 23:48:07,I have browsed through the CVE database to find out what percentage of Java deserialization vulnerabilities can be mitigated by running the application under SecurityManager with proper security policy in place (by proper I mean following least privilege principle). Unfortunately it is not easy as the vulnerabilities are not described in such a way that it is obvious whether they affect only systems without access control turned on. Does anyone is aware of such a statistic?
2,CVE-,java,Is mysql-connector-java-5.1.42 insecure?,8,6dc0nc,https://www.reddit.com/r/java/comments/6dc0nc/is_mysqlconnectorjava5142_insecure/,2017-05-26 05:50:19,"I ran OWASP Dependency Check against one of my projects, and it returned a large number of CVEs for mysql-connector-java. They all seem to be related to mysql versions. For example: Filename: mysql-connector-java-5.1.42.jar | Reference: CVE-2008-2079 | CVSS Score: 4.6 | Category: CWE-264 Permissions, Privileges, and Access Controls | MySQL 4.1.x before 4.1.24, 5.0.x before 5.0.60, 5.1.x before 5.1.24, and 6.0.x before 6.0.5 allows local users to bypass certain privilege checks by calling CREATE TABLE on a MyISAM table with modified (1) DATA DIRECTORY or (2) INDEX DIRECTORY arguments that are within the MySQL home data directory, which can point to tables that are created in the future. It doesn't make any sense to me, because this CVE is related to mysql version. Is this a false positive? Any idea why?"
