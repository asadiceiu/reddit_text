,topic,subreddit,title,score,id,url,created,body
0,CVEs,oscp,Boothole Vulnerability,1,i54ij7,https://www.reddit.com/r/oscp/comments/i54ij7/boothole_vulnerability/,2020-08-07 11:17:18," Looking to this Boothole vulnerability, (CVE-2020-10713), since my RHEL7 server reveals to vulnerable, I have some queries, that I know the answers in bits and pieces but looking forward some advices: 1. My server has secured boot- disabled. So understand that already vulnerable to other boot loader defects? But how realistic such boot loader/grub related attacks are? Insider attack? 2. Now, if I want to enable secure boot options are there really critical CVEs against it so that I am defending against by enabling it? I want to experiment to know how easy/difficult to exploit. 3. Just turning on secure boot suffices on BIOS settings or need digital certificates etc for point number 2? Is there a procedure for it? Thank you very much for your suggestions."
1,CVEs,oscp,NSE scripts on OSCP,1,icsnzp,https://www.reddit.com/r/oscp/comments/icsnzp/nse_scripts_on_oscp/,2020-08-20 03:54:51,"I'm working on a automation recon tool to help gather information on hosts while working on buffer overflow at the first of the exam. The script so far just runs port scan, so basic service enum based on whats open, etc. However I would like to add the vulscan.nse and vulners.nse scripts to help quickly identify possible CVEs. Would using the vulscan.nse and/or vulners.nse scripts be prohibited in the exam? I've heard that scanners like Nessus and OpenVAS are but nmap scripts are good to go. Just curious about these since they are custom scripts..."
2,CVEs,oscp,Passed First Time - My Tips and Advice,1,ie7yfz,https://www.reddit.com/r/oscp/comments/ie7yfz/passed_first_time_my_tips_and_advice/,2020-08-22 09:38:15,"Quick disclaimer, this is a new account just for this so that I don't give myself away too much. That said, I'll try to come back to answer any questions people might have, but I might forget to check this account, so bear with me if I don't reply. Just found out that I passed the exam, so I wanted to share my experience with everyone. First off, this test is passable. If you fail, get back up and go at it again. It can be draining and demoralizing but believe me it'll be worth every second. To get all of the common questions out of the way up front: * Q: What's your education? * A: I have a BS and MS in computer related fields (not giving exact degree names just to help protect myself somewhat). * Q: What other certs do you have? * A: Net+ and Sec+ * Q: What's your job experience? * A few years as a sysadmin. * Q: How long did you study? * I signed up for 60 days of lab time and took the exam about 3 days after that ended. I was lucky and was able to dedicate a large amount of time each day to studying, although I did take plenty of days off to relax. On average, I spent about 8-10 hours a day studying the material and going through the labs. Some days were shorter, some days were longer. I got through the guide material in about 3 weeks. * How many lab machines did you complete? * 55. I aimed for 2 per day minimum, but sometimes did 3-5. There were also days where I didn't finish any or I only got 1 done. * Did you use the forum for the lab machines? * Yes, and quite often. I also relied on a friend quite a bit to help guide me in the right direction when I was stuck (if that friend happens to see this, thanks man. I truly couldn't have done it without you). * What was your methodology? * Enumeration: AutoRecon. This is such a life saver. Seriously, just use it. Real world pentesting, I don't see myself using it that much but that's mainly because it helped me to learn some of the checks that I can do manually and then create my own methodology based on the results it gave me that I found the most useful. * Initial Access: This one is hard to give tips for as it was easily the area I struggled with the most. Some machines will stick out like a sore thumb and others you'll just stare at forever and get nowhere. Learn from previous machines is probably the best advice I can give. Don't just memorize the specific vulnerable versions/configs, but learn why those versions/configs are vulnerable. This will help you to identify similar things later on. * Priv Esc: During the labs I relied on WinPEAS and LSE quite a bit. Towards the end when I got closer to exam date, I wanted to do that less, so I started to simply follow manual enumeration steps. Gather as much info about the system as you can before you start looking for priv esc methods. Keep a list of the interesting things and move down that list. Sometimes you'll see something you used before. Sometimes that'll work, sometimes it won't. You don't want to spend hours in the exam trying to get one exploit to work when it turns out to not be the intended method. I typically followed G0tM1lk's (I think I spelled that right) priv esc guide for Linux. For Windows, just apply the same concepts and use the appropriate commands. * For Windows: learn WMIC. It is an incredibly powerful tool that can give you amazing information. Spend some time looking at the different aliases available and what info you can get from them. * Q: What other study material did you use? * I mainly used two courses: the Windows and Linux Priv Esc courses from Tib3rius (thanks for the classes and AutoRecon man). He's got a coupon for these classes til the end of August btw ([URL While the courses offered a great amount of tools/exploits to use, the best thing to take away from them is developing your methodology. I think that should answer a good amount of questions, so onto the exam review. Week leading up to exam: I stopped working on lab machines a week before the exam. I took that time to get my lab report pulled together since my lab time was expiring a few days before the exam and I still needed to finish some exercises. I think this helped to get me in a better mindset as I wasn't still worrying about finishing lab machines. I just took a few hours each day to put together the report when I finished work and then spent the evenings relaxing. Exam day: Exam started at 8am. I was up around 6:30. Went and got a bagel and large cold brew from Dunkin (shoutout to DD). After some minor panic attacks when my web cam wouldn't connect (remember to allow webcam access in Firefox...), I started the exam. Started up AutoRecon on two of the machines while I tackled the buffer overflow. The buffer overflow took about two hours at which point I moved onto the 10 point machine. This machine took about 2.5 hours. I was feeling great at this point so I stopped for 30 minutes to eat some lunch and take a break. Around 1pm I came back to start work on a 20 point machine. This also took about 2 hours. At this point I only needed one more machine to reach the minimum points, so I took a 15 minute break to relax before diving in again. Came back around 3:15. I forgot to start my scan on the other 20 point machine, so while that was running, I decided to look at the 25 point machine. Needless to say, as soon as the scan finished, I started on the 20 point machine and prayed I could get it. Was able to get onto the machine fairly easily. When it came to priv esc, I had simply overlooked something. Pro tip: if you open a link for an exploit on EDB, make sure you actually look at it before clicking a bunch of other links that'll side track you. I took a break around 7 for dinner. Came back around 7:30pm, realized my stupidity, and finished the box just before the 12 hour mark. At this point, I was 12 hours in and had the minimum passing score with 4 boxes completed. I felt great. I felt beyond great. I don't know what I felt. I could've stopped but I wanted to go for the 100 points. I'll say this much: I didn't get 100 points. I officially ended my test 15 hours in, right around 11pm. Woke up early the next day and got to work putting together my report, sent it in, and then sat around anxiously waiting for the results to come in. Another pro tip: if you have two emails for your account, check the primary email for the results. It didn't get sent to my secondary email (the personal Gmail I use) so the results were sitting in my inbox for a few days. Final takeaways: This course isn't about just passing a 24 hour exam so you can get a shiny piece of paper and add another line to your LinkedIn resume. It's about training people to do a job that is, quite honestly, brutal. This isn't a line of work for the faint of heart and non-dedicated. You have to be willing to put in the time, sacrifice personal life, and stare at a problem until you're bashing your head into the wall. If you're not willing to do that, someone else will and they will get the cert, job, money, etc. instead of you. There were countless times I sat there trying to learn why something worked. I would read changelogs, advisories, CVEs, GitHub pages, you know it. Did I run into topics I didn't know? Yes. Did I whip open a copy of Windows Internals and sit there while my brain melted into a pool of nothing? Hell yeah. But guess what? It was worth it. I had very little pentesting experience coming into this course and was able to finish the exam in 15 hours after just two months. You have to have a hunger to learn. Don't ask what exploit to use, ask why an exploit works. Ask why a vulnerability exists. You'll find a lot more answers and knowledge when you begin to question things. With all that said, I don't want to scare people away. As a famous fictional chef from Ratatouille once said, ""Anyone can cook."" Well, the same goes for this. Anyone can pass. Doesn't mean anyone will pass. But anyone who is willing to put in the effort can pass this test. Good luck to everyone out there still in the course or to those thinking of signing up. If you don't know if you should, do it. I spent $1200 on this course and before I even passed the test I had gotten well more than my money's worth. Next up: OSCE (or whatever the new cert will be once OSCE is retired)."
3,CVEs,oscp,Exploit SSL/TLS renegotiation is NOT enabled,1,iffyw5,https://www.reddit.com/r/oscp/comments/iffyw5/exploit_ssltls_renegotiation_is_not_enabled/,2020-08-24 11:48:38,I am seeing this on a web server: SSL/TLS renegotiation IS NOT enabled and SSL/TLS renegotiation MitM vuln. (CVE-2009-3555)(CVE-2011-1473). I am looking this to exploit against Linux sever. Is there any known metaspoilt exploit or other know methods for creating either about Mitm or DOS as CVEs reveal to ?
4,CVEs,oscp,Manual Exploitation : HTB - Lame,8,hwv6ne,https://www.reddit.com/r/oscp/comments/hwv6ne/manual_exploitation_htb_lame/,2020-07-24 14:24:52,"Hi guys, i have made my first blog ever and i wanted to share it with you guys to get your feedback. I hope after reading through, you will have deep understanding of 2 CVEs (2007-2447 and 2011-2523). good luck! \[Edit: [URL \]"
5,CVEs,oscp,What is your Googlefu go-to for exploits?,1,i25v8v,https://www.reddit.com/r/oscp/comments/i25v8v/what_is_your_googlefu_goto_for_exploits/,2020-08-02 14:00:57,"So for me personally, over the last 16 months of studying on HTB, I have noticed a few times that exploits don't show up unless you use the proper search term for it. A prime example for this is the Magento Froghopper. When I was doing the box that required this it took me a very long time to find this exploit. The only search that returned the exploit 'at the time' was Magento 'attack' . Because I was still fairly new, I was only googling Magento rce, Magento exploit, Magento vulnerability. This wasn't returning anything juicy. Now, my list that I use to google for an exploit is as follows: &lt;program&gt; followed by: Attack Rce Remote code execution Arbitrary code execution Php code Php shell Shell upload Exploit Vulnerability This has almost always returned something. I would say that the search term that seems to return the best results is shell upload. Especially for things like phpmyadmin and WordPress. Exploit or vulnerability returns CVEs alot of the time but no blog on how to manually reproduce. Shell upload will return multiple blogs with detailed guides on how to replicate the exploit. Any others that anyone has found works well?"
6,CVEs,oscp,What it means for exploitation when you come across OSCP machines in exam that is patched,1,ecvwxg,https://www.reddit.com/r/oscp/comments/ecvwxg/what_it_means_for_exploitation_when_you_come/,2019-12-20 03:56:48,I recently heard that OSCP machines in exams are all patched. What will be the most common ways of exploiting machines that are patched? Does that mean there will no CVEs and finding misconfiguration could be the best strategy?
7,CVEs,oscp,Sudo Exploitation tool,8,baiyzu,https://www.reddit.com/r/oscp/comments/baiyzu/sudo_exploitation_tool/,2019-04-08 03:52:56,"Please have a look, try it, give feedback and star the project :) [URL &amp;#x200B; \- Check for misconfig \- Vulnerable bins \- CVEs \- and more"
8,CVEs,oscp,Zero to OSCP in Four Months,1,aagrpm,https://www.reddit.com/r/oscp/comments/aagrpm/zero_to_oscp_in_four_months/,2018-12-29 12:48:51,"Hey everyone! I've been active on the forums and IRC but mostly a lurker on here. I recently passed my exam and I thought I'd do the traditional post-OSCP post. **Quick Notes** * Self-taught programmer * Had practically zero security-specific education, exp, and knowledge before starting * Did not know how hard OSCP was or how hard some machines were when I started * Started in Aug with 90 day lab access * Rooted ~70% of the lab * Failed first exam attempt taken right after lab access ended * Practiced HTB for a few weeks * Passed second exam attempt * Caught up on months of sleep deprivation **Background** I was originally a cellular genetics research biologist who decided to go into tech four years ago because academic biology research simply doesn't pay and I was too burnt out to be able to get my PhD. I started by self-teaching myself programming and roughly half of your typical CS curriculum through publicly available course websites from UC Berkeley, UCSD, Cal Poly SLO, UW, etc. I made it as far as Systems Programming and Advanced Algos, and never took classes like asm and Networking. I tried unsuccessfully to get a SWE job for two years in large part because I couldn't pass a resume screen and didn't have the means to do so. I then pivoted to web dev because of the lower barrier of entry. I taught myself HTML/CSS/JS, then the MEAN stack, MySQL, and other typical mid-2010s webdev things. I ran into the same issues in getting a full time job, so I freelanced for another two years which really meant I struggled to get jobs as I struggled to beat out other devs just as talented living in countries with much lower CoL. In the past year I had an opportunity to move far away from Silicon Valley where I then learned about OSCP from my Blue Team roommate. The timeline was something like: * July 20 - Roommate: ""Hey there's this entry level security cert called OSCP you should look into"" * July 21 - After research, it was clear OSCP was legit and not like one of the many scammy webdev certs/bootcamps I'm used to seeing * July 22 - I signed up for PWK * Aug 4 - First day of PWK On Day 1 I started with a good amount of coding knowledge, a decent amount of CS knowledge (surprisingly handy later on), good experience with webdev, working experience with Linux/Unix/Windows/MacOS, and zero security knowledge. At this point I had never ran nmap in my life and I never heard of Kali Linux, nc, shellcodes, webshells, etc. **PWK** I had struggled for so long to get a full time job in tech so I decided to put everything into PWK. I was fortunate enough to have the opportunity to focus entirely on the course. For three months straight I would put 80+ hours a week into *just* PWK. * **Week 1-4:** Spent entirely reading the book. Almost everything in the book was new to me. I frequently used a Bash environment before but it was only for things I needed to do dev things. My Bash experience was limited to things like cd, pwd, chmod, gcc, and apt-get. It was definitely a very steep learning curve for me. Doable, but noticeably difficult and information dense. I was optimistic though because I do well with breadth of material and the more I learned the more I felt like PWK fit me very well. Surprisingly I found the buffer overflow sections very straightforward in large part because I already had a theoretical understanding of how computers allocate/use memory, registers, assembly instructions, opcodes, and the like. I've never actually worked with any of these, but knowing the theory was enough to get me through the BOF exercises. All this knowledge came from self-studying CS and came from Professor Staley at Cal Poly SLO for his Systems Programming CPE-357 class. I've never been a student there but I was lucky enough to stumble on his class materials because they were so helpful here. Conversely I spent a lot of time on the basic pentesting tools and basic networking sections early on because I had never been exposed to them before. Basic things like nc/ncat, shells, and nmap were completely new to me. Same goes for networking - I was vaguely aware of what ports and different protocols were but never in the detail that PWK taught. * **Week 5:** First week I started on the lab. This week was entirely spent on just one machine. It took me five days to get my very first root. I'll be honest: It was extremely demoralizing. I knew the OSCP exam had five machines in 24 hours and here I was struggling to get just one root within five days. What I didn't know though was that **my very first root was Pain/.35.** I knew that OSCP was hard and I definitely struggled a lot with this box, but I attributed my struggles to me being so inexperienced (and frankly, bad self esteem). It wasn't until *much* later that I learned about Pain/Sufferance/Gh0st/Humble. Day 6 was spent on post-exploit information collecting. I had never rooted a machine before so I had no clue what files to look at, so I basically got everything. My Kali still has essentially all the contents of Pain's drive. * **Week 6:** My second machine was Bob/.13, which I managed to root in two days. Bob was a great box for me because this was the box where I started slowly getting into the pentesting mindset. It was an easy box but I struggled with it because I overthought *everything* while attempting this box. When I finally got an unpriv shell I realized how much I overthought things. It's one thing to read the PWK handbook but it was another thing entirely to put it into practice. For me this was a lesson in knowing how to prioritize my enumeration, where likely vulns would be, and in general helped me mentally sort through the sheer amount of information from the book. After Bob was four consecutive unsuccessful attempts at getting shells on four different machines. * **Week 7:** I continued the theme from Week 6 with another two consecutive unsuccessful attempts at getting shells on yet another two machines. My self esteem dropped severely again. I thought I had it after Bob but this was a not-fun reminder that I still had a long way to go. Finally, midway through Week 7 I got another root. Then two days later, I got another root. * **Week 8:** This was when I started getting into my groove. I started averaging a root every two days with a few misc unpriv shells with unsuccessful root attempts thrown in. This was also when I learned what my strengths and weaknesses were. I flew through almost every website exploit. I was lucky because my web dev background meant I knew websites very well and could easily find vulnerabilities. Things like RFI/LFI and log poisoning were simply tools that I could use with my existing knowledge. Conversely, I struggled immensely with the Windows boxes. I had never heard of IIS, SMB, NetBIOS, or RPC before. I was still wasting a ton of time on Windows boxes trying to figure out what to do with all the null/Guest access I had. * **Week 9:** Even more improvement here. I went from a root every two days to 2-3 roots a day. I started knowing where to look with Windows boxes and how to code in ASP. I was again lucky with my coding background because even though ASP/VSBasic was new to me, I already knew how to program and therefore knew how the code should work in theory as all the non-functional, non-markup coding languages I know work in very similar ways. Similarly I started learning how to privesc Windows well, but unfortunately I was still heavily relying on Linux kernel exploits like DirtyCow. More on this later. * **Week 10:** At this point I got one box in IT and Dev but up until now I actively avoided them because pivoting was so new to me and I was still very unsure of myself. OSCP had still wrecked my self esteem and I just didn't want to feel worse about myself. However my lab time was coming to an end so I knew I had to start on it. I started OSCP to learn, not to run away from hardship. Within the week I managed to root all of IT. I don't want to spoil so I'll keep it vague: It was an invaluable experience to me. IT focused heavily on some pentesting concepts that Public didn't really focus on. It was a surprisingly fun subnet for me since it was so new and rewarded me for being detail-oriented. * **Week 11:** I had rooted all of IT and so this week my goal was to get to Admin. I already knew the gateway but I didn't seriously try to get through until this week. It took me over a day but eventually I got in. This was also the first time I dealt with two pivots using proxychains. It was surprisingly easier than I thought it'd be. I had rooted 3/4 machines within four days. After that was three days spent exclusively on Jack. Jack was a great reminder that as good as I was on website exploitation, I didn't know everything. I saw the entry point within ten minutes but I had no clue what to make of it because I didn't know you could actually have that as a name. I had access to the hidden area after a day. The second day was spent getting the unpriv shell. The last day was spent looking for privesc. Again the experience was invaluable. I learned how to double pivot, learned that what I was so afraid of and avoided for a month wasn't all that bad, and with Jack I was forced to do privesc ""The Hard Way"" without my privesc scripts and DirtyCow-esque nukes. * **Week 12:** This was my wind-down week. I successfully rooted Humble then rooted another three or so boxes within the first half of the week. After that I focused entirely on getting my notes in order for my exam. My exam was two days after my lab access ended so I wanted to make sure I was organized. All my notes on the lab machines were neatly organized (and are still useful!). I peeked around on the other machines but didn't seriously attempt any. The day before the exam I compiled all my random notes on useful commands/tools/tricks learned from experience into a single TangentialCode Cheat Sheet for the exam. **Exam Attempt #1** Long story short: I got my butt kicked. It was a mess from the get-go. I thought my exam started at 11AM but turns out it was 10AM. I scrambled when I unexpectedly got my email an hour early. This was entirely on me for not double-checking my own exam time. I also did everything that many people said not to do. I didn't sleep. I worked the whole 24 hours. I didn't take breaks. I barely ate. I didn't leave my desk for anything that wasn't water, bathroom, or the one meal I had in 24 hours. I tunnel-visioned heavily too. For example, I wasted hours on an SMB null share access I had because I refused to let it go. I re-ran the same commands over and over trying to find *something* rather than disengaging and working on a different protocol or box. I also ended up trying to search up all the CVEs on cvedetails.com out of desperation. If it's not on E-DB, don't bother. Most OSCP students are likely not talented enough to make their own exploits from the limited info on other sites within the 24hrs allotted. One of the major things was I really messed up on my BOF. I knew the techniques but I wasn't careful and didn't individually check all my bad characters. I then incorrectly assumed the lib/offset I used was wrong and what should have been a half hour root turned into four hours. Don't be careless like me. Additionally, my reliance on DirtyCow completely killed me. I was so used to Linux kernel privesc exploits that I had no clue how to privesc without them. I saw all the recs for g0tm1lk's guide and I ignored it because pfft, why bother when I had dirtycow? Folks, don't be stupid like me. Between the inexperience, the sleep deprivation, and the inexperience I ended up throwing every single E-DB exploit from linuxprivchecker and whatever came up on E-DB indiscriminately at the boxes. Ultimately I got ~45/100 points. I had the BOF root, the 10pt root, and unpriv user on a 20pt box. **Post-Exam Attempt #1** My self esteem initially took a huge beating with this. I didn't expect to get my butt handed to me so badly. My ultimate takeaways: * Don't take shortcuts. ""Measure twice, cut once"" definitely applies. I 100% failed because I didn't bother to be careful with the details and I attempted to take shortcuts. * Actually practice Linux privesc the hard way. Make sure I knew how to do it via g0tm1lk's guide. * Actually look through the results of linuxprivchecker. I defaulted to scrolling down and just doing their recommendations. The script isn't perfect and sometimes the right vulnerability is buried in the 1000 lines you scrolled past to get to the end. * Don't tunnel vision! If it's not working, you're going to waste way more time trying to keep at it when your time is likely better spent working on a different box. * Take care of yourself. You can do some very stupid things when you're exhausted. * Took me a while to get to, but: I didn't do that bad. I eventually realized that 45/100 points when I started from zero is pretty damn good. I was 25 pts away from passing. After sleeping for a day I rescheduled my exam for almost exactly a month after my first attempt. **Month 4** The first two weeks were self-care weeks. The first week was spent on vacation by myself (Thanks Chase and /r/churning!), and the second week was spent with family over Thanksgiving. If you fail, I heavily recommend you do the same. There's only so much you can do when mentally + physically + emotionally exhausted. Taking time off did wonders for me. The last two weeks were spent on HTB. I bought their VIP subscription to access their retired machines + avoid congestion on the public networks. It was a great experience that I highly recommend to others in the same position. There are several boxes similar to OSCP boxes that are good for exam practice and for Linux privesc practice. A lot of boxes also exposed me to vulnerabilities/pentesting methods outside the scope of OSCP so that was pretty great to get exposed to. I ended up with additional techniques for Windows boxes, new tools to use, and I got my Linux PrivEsc technique down. **Exam Attempt #2** * **12PM/Noon:** The exam again got off to a rocky start. However, due to issues with configuring my email service after renewing my domain, I didn't get the exam email so I had to contact OffSec to get them to resend me the email. I ended up losing ~45 minutes and it was entirely my fault. After that though it was very smooth sailing. * **12:30PM:** I learned from my carelessness with the BOF last time and I did everything the right way the first time. I ended up rooting the box within ~30 mins. I had 25 points with over 22 hours to go. * **6PM:** I had rooted the 10pt box for a total of 35 points. Again learning from my mistakes last time, I stopped for dinner right after. * **12PM:** I rooted one of the 20pt boxes for a total of 55 points. * **3AM:** By now I had unpriv user access on the second 20pt box for partial credit. Again learning from my mistakes, I decided to take a quick nap. * **5AM:** Woke up and started working again. A two hour nap did wonders for me. * **6AM:** The magic moment! I rooted the last 20pt box and had enough points to pass. 4/5 roots for a total of 75/100 points. The proctor got to see me jump up in excitement and celebrate. * **6:01AM:** This was my one major mistake of this attempt. I should have gone to bed once I had enough points to pass, but I decided to attempt the last 25pt box for bragging rights. If you have enough roots to pass (i.e. aren't relying on unknown partial credit values to pass), I heavily recommend you stop your exam and sleep. * **11:45PM:** Exam Over. I spent six hours on the last box and couldn't get anywhere. I even used Metasploit as I rooted the other four boxes without it. I now am very sure I know where the vulnerability is, but I was too tired at the time to figure it out. Again, if you have enough points to pass please sleep. * **Day 2**: I ended up lounging around for several hours, then slept for another four hours before starting my report. I ended up finishing my report by 4AM. I debated between sending it in then or sleeping some more and sending it in after editing with a fresh mind, but I was worried I'd oversleep so I sent it in then. * Again, I can't stress this enough: Please sleep if you have enough points to pass. My sleep-deprived brain made so many stupid mistakes on my report that I was very lucky to catch before submitting. I'd archive my PDF, take one last look at my PDF, realize I made a mistake, edit, re-archive, and repeat. I must have archived that PDF at least a dozen times. I initially included the wrong screenshots, forgot to copy/paste code, copy/pasted code to the completely wrong section, left the ""Sample""s in the template titles up, etc. Screenshots and text and sections blur together when you're very tired. I was very lucky to have caught all the major mistakes because with how tired I was, I could have easily let a major mistake slip through. * **Day 6**: Again I had to deal with email issues, but eventually I got the email - I passed! And there you go. Zero to OSCP in four months and two exam attempts. **Tips** * **OSCP is the proof of a successful journey, not the journey itself:** It sounds cheesy but bear with me here. I made a lot of stupid mistakes on my first exam because I was so focused on the cert itself that I neglected to learn how to do things the right way. I see a lot of IRC users and forum posters falling into the same trap I did. If you work hard and make sure you learn everything properly in the PWK labs, you will get OSCP. You won't get it by trying to take shortcuts the way I did. * **Take care of yourself on the exam:** I know many people are freaked out by it but 24 hours is ultimately a *lot* of time on the exam if you've practiced well. I ultimately got enough points to pass with 14 hours of actual work. YMMV but I'm very confident that you'll find yourself with time to spare if you put in the effort in practicing. Use the time to eat, sleep, drink water, and take breaks. * **Sleep if you're sure you have enough points to pass:** Fourth or fifth time I've said it but it's such a major thing from my experience. 70/100 and 100/100 on the exam gets you the exact same results. Remember that you have a report to submit to pass and you still need to be mentally able enough to do it to get your cert. * **Take care of yourself if you fail:** It's not the end of the world if you fail. Many do, and repeatedly. Don't underestimate the importance of taking time away from OSCP to focus on yourself. You're not going to be as effective if you're running on fumes. * **Be detail oriented:** Don't neglect the importance of doing each and every privesc or enumeration step and examining every line of input. The answer can easily be in something you passed over and didn't think was important. * **Use a terminal with infinite caching:** I found myself needing to screenshot console output after my exam ended for my report. I used Terminator and set it to have infinite caching/scrollback. That way I can simply scroll back and find the output I need for my report. Similarly... * **Don't close any windows until after you submit your report:** Similar to the above, I found myself returning to different Terminal/browser windows for screenshots. * **Record your screen:** I ultimately didn't need to rely on this, but as a final measure I recorded all 24 hours of my own screen into a video file. That way if I seriously missed something I have video of that info for my screenshot. **Final Thoughts** * I knew OSCP was hard, but I didn't know how hard it was. I went into this thinking it was like a CS algos class where it's tough at first but everyone is realistically expected to pass. I ended up going to a BSides two months into my PWK lab and learned then that many professional pentesters considered it difficult and failed multiple times. I likely wouldn't have attempted OSCP if I knew this beforehand and thought it was beyond my ability. Similarly... * I learned that **I'm my own biggest obstacle**. I didn't know how hard OSCP was and I passed. I didn't know how hard Pain was and that was my first Root. The entire time I simply assumed this was the normal learning curve progression. My biggest takeaway lesson is that I often talk myself out of even trying something once I hear others talk about how hard something is. Ultimately the only person who says I can't do something is myself. * OSCP is very stressful and might be the hardest thing I've done in my life. I'm in my late 20s and I ended up getting grey beard hairs for the first time in my life during the PWK labs, and they went away after my second exam retake. * I learned way more than I ever thought I would. It's hard to put into words but the sheer amount of info I managed to learn in three months just amazes me. It's such a dense course full of useful knowledge. * I talked about how I struggle in a classroom environment earlier and I love that OSCP isn't one. I do very well in an environment that's hands-on and self-paced. I think this was a major factor in me doing as well as I did. * I walked away from PWK with more than just an OSCP cert - I have a newfound sense of self esteem now. This was something completely unexpected. Gonna get a bit personal now, but I struggled a lot with low self esteem most of my life. Struggling hard and failing to make it as a dev only made it worse. Now? I feel **damn good** about myself. I successfully did something I'd never thought I'd be able to, behind where many started, and finished much faster than I anticipated. I proved to myself that I'm capable of way more than I originally thought I could do **Shameless Plug** I now have my OSCP and am actively job searching. If I sound interesting enough to you to want to interview, please message me! This ended up being a lot longer than I expected but I hope it helps all of you out there still working on your cert. Keep Trying Harder and don't doubt yourself. OSCP may be difficult but it's not impossible. Feel free to message me on here, forums, or IRC with any questions/comments and I'll gladly answer them without spoilers. Good luck to all of you out there! "
